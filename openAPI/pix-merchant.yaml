openapi: 3.0.1
info:
  title: BTG Pactual Banking as a Service (PIX Merchant Clients)
  version: 2.0.0
  description: "Digital plataform developed by BTG Pactual engineers as an on demand banking service provider.\r\n\r\n[**Documentation Hub**](https://developer.btgpactual.com/portal/dochub)  \r\n    - [Commom Methods](https://developer.btgpactual.com/portal/doccm)  \r\n    - [Onboarding](https://developer.btgpactual.com/portal/docob)  \r\n    - [Transactions](https://developer.btgpactual.com/portal/doctr)  \r\n    - [PIX Commom Funcionalities](https://developer.btgpactual.com/portal/docpc)  \r\n    - [PIX Indirect Participant](https://developer.btgpactual.com/portal/docpi)  \r\n    - [PIX Merchant Clients](https://developer.btgpactual.com/portal/docpm)  \r\n\r\n|BaaS PIX Merchant Clients API| |\r\n|------------------------|-------------------------------|\r\n|Sandbox |https://api.sandbox.developer.btgpactual.com/pm|\r\n|Sandbox (with mTLS) |https://sandbox.developer.api.btgpactual.com/pm|\r\n|Production |https://api.developer.btgpactual.com/pm|\r\n|Production (with mTLS) |https://developer.api.btgpactual.com/pm|\r\n\r\n\r\n## Response Envelopes\r\n\r\nAll our responses follow the same pattern. They are sent respecting a default response envelope as shown bellow.\r\n```\r\n# Default Envelope\r\n{\r\n    \"version\": \"0.1.0\",\r\n    \"status\": 204\r\n}\r\n\r\n# Envelope with response body\r\n{\r\n    \"version\": \"0.1.0\",\r\n    \"status\": 201,\r\n    \"body\": {\r\n        \"exampleValue\": \"30306294\"\r\n    }\r\n}\r\n\r\n```\r\n\r\n## Error Messages\r\n\r\nAll errors returned from one of ours APIs will follow the same pattern as shown bellow. They will be always contained in an invelope as the example. \r\n\r\n\r\n```\r\n# Default Envelope\r\n{\r\n    \"status\": 404,\r\n    \"version\": \"1.0.0\"\r\n}\r\n\r\n# Envelope with optional error codes\r\n{\r\n    \"version\": \"1.0.0\",\r\n    \"status\": 400,\r\n    \"errors\": [\r\n        {\r\n            \"errorCode\": \"PCE001\",\r\n            \"message\": \"The field 'name' is mandatory.\"\r\n        }\r\n    ]\r\n}\r\n```\r\n"
  contact:
    name: BTG Pactual Team
    url: https://developer.btgpactual.com
    email: baas@btgpactual.com
servers:
  - url: https://api.sandbox.developer.btgpactual.com/pm
    description: BaaS API (Sandbox)
  - url: https://sandbox.developer.api.btgpactual.com/pm
    description: BaaS API (Sandbox with mTLS)
  - url: https://api.developer.btgpactual.com/pm
    description: BaaS API (Production)
  - url: https://developer.api.btgpactual.com/pm
    description: BaaS API (Production with mTLS)
paths:
  /v2.x/cobv/{pixUrlAccessToken}:
    get:
      servers:
        - url: https://{fdqnPSPRecebedor}/{pixEndpoint}/v1
          variables:
            fdqnPSPRecebedor:
              default: example.com
              description: Endpoint base so that paying users can access the Payload Json that represents the debt collection.
      tags:
        - PixJsonPayloadCobsV2.x
      responses:
        '200':
          content:
            application/jose:
              schema:
                $ref: '#/components/schemas/PixCobPayloadDueDate'
              examples:
                sample-cobv:
                  value:
                    calendario:
                      criacao: '2021-03-01T10:13:58.013Z'
                      apresentacao: '2021-03-01T10:15:01.015Z'
                      dataDeVencimento: '2021-02-19'
                      validadeAposVencimento: 30
                    txid: d4c38871c8354f0fbe91b3c9c7d5b929
                    revisao: 0
                    devedor:
                      nome: Fulano de Tal
                      cpf: '42761202686'
                    recebedor:
                      nome: Banco Central do Brasil
                      cnpj: '00038166000105'
                      logradouro: Setor Bancario Sul SBS Quadra 3 Bloco B Ed Sede
                      cidade: Brasilia
                      uf: DF
                      cep: '70074900'
                    status: ATIVA
                    chave: 4004901d-bd85-4769-8e52-cb4c42c506dc
                    valor:
                      original: '863.04'
                      multa: '5.00'
                      juros: '20.00'
                      final: '888.04'
                    infoAdicionais:
                      - nome: Multa por valor fixo
                        valor: '5.00'
                      - nome: Juros absolutos por dias corridos
                        valor: '2.00'
          description: |
            # Return Description
            The return of this endpoint is an object with a JWS structure, as specified in the security manual. Here is an example:
            ```jws
            eyJhbGciOiJSUzI1NiIsIng1dCI6IlJVUkZRamd6UXpNM1JFSkVSRGN6TkRCR09ERTJSalJCT0VVME5qY3pSRVl5UWpkQ09VTkNNQSIsImprdSI6Imh0dHA6Ly9waXgtamt1LWFwaS5kZXYuYmFhcy5jb250YWluZXIuYnRncGFjdHVhbC5uZXQvbGlzdCIsImtpZCI6ImFwaV9zYW5kYm94X2RldmVsb3Blcl9wcmkifQ.eyJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIyMDIxLTAyLTA1VDEzOjE0OjMxWiIsImFwcmVzZW50YWNhbyI6IjIwMjEtMDItMDlUMTM6NDY6MjVaIiwiZGF0YURlVmVuY2ltZW50byI6IjIwMjEtMTItMTYiLCJ2YWxpZGFkZUFwb3NWZW5jaW1lbnRvIjoxMH0sImRldmVkb3IiOnsiY3BmIjoiMTIzNDU2Nzg5MDEiLCJub21lIjoiam9zZSBkYSBzaWx2YSJ9LCJyZWNlYmVkb3IiOnsiY25waiI6IjEyMzQ1Njc4OTA5ODc2Iiwibm9tZSI6Ik5vbWUgQ29tZXJjaWFudGUiLCJub21lRmFudGFzaWEiOiJOb21lIEZhbnRhc2lhIiwibG9ncmFkb3VybyI6IlJ1YSBBZ3VhIHZlcmRlIiwiY2lkYWRlIjoiQ3VyaXRpYmEiLCJ1ZiI6IlBSIiwiY2VwIjoiODg4ODgzMzMifSwidHhpZCI6IjAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDQ1IiwicmV2aXNhbyI6MCwic3RhdHVzIjoiQVRJVkEiLCJ2YWxvciI6eyJvcmlnaW5hbCI6IjEwMC4wMCIsImFiYXRpbWVudG8iOiIyLjAwIiwiZGVzY29udG8iOiIyMC4wMCIsIm11bHRhIjoiMC4wMCIsImp1cm9zIjoiMC4wMCIsImZpbmFsIjoiNzguMDAifSwiY2hhdmUiOiIrNTUyMTk3OTkzNTEyNDEyIiwic29saWNpdGFjYW9QYWdhZG9yIjoic3RyaW5nIiwiaW5mb0FkaWNpb25haXMiOlt7Im5vbWUiOiJzdHJpbmciLCJ2YWxvciI6InN0cmluZyJ9XX0.PGPb8eLWMwftdMpVroJlt4f971yjUkvVn-cy2rQYkHoi6ELzkVmRfwDDdOUP6QF2QVnXHLhqocpu66zvwVIKIX5mqTCdZqoug2D447RtOiUu8LUhdNILXGumZ1b-4usxfaaRkF5TGCcbmcWybNXr0l7mN2zhQlIRzt6o2hD0m_qnphgutrNBhBY1PiHutsgoUcmMc8CJ41W47DPzm5yR9EFz53SOsYs6GCMVUE63chJBtu97_XPMO5hY3IRTUliZWD4L6lOcrxLryBeBWkucAD8ftOSwXkooy0J5E3K-TO-L5AogKvsIyLkOIvi2ZkU3QKNwWm5BQBtHKLC7uogMew
            ```
            This signed JWS object must be validated by the payer. More details about the security specification can be found in the __[Pix Security Manual](https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos)__.
            As can be seen in the example above, the JWS object has three fragments separated by the `.` (dot) character. They are: `header`, `payload` and `signature`.
            In terms of functionality, the fragment that interests the payer is the `payload`, which presents a structure as specified by the `schema` of the present endpoint, containing details concerning debt collection.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      deprecated: false
      security: []
      operationId: get-pix-api-payload-cobv
      summary: Retrieve the JSON payload that represents a due date collection
      description: |
        ## Endpoint (location) that serves a payload that represents a due date collection.
        When the debtor user reads a dynamic QR Code generated by the recipient, this URL will be accessed and its content consists of a JWS structure. The information about security in the access to urls can be found in the Pix Security Manual available at this __[link](https://www.bcb.gov.br/estabilidadefinanceira/comunicacaodados)__.
    parameters:
      - examples:
          pixUrlExample:
            value: api.developer.btgpactual.com%2Fv1%2Fp%2Fv2%2Fcobv%2Fc882d03215db4030a839daf68ea53b6e
        name: pixUrlAccessToken
        description: The Pix URL (location) that contains due date collection informations
        schema:
          type: string
        in: path
        required: true
      - name: codMun
        description: Code based on the __[IBGE](https://www.ibge.gov.br/explica/codigos-dos-municipios.php)__ Table of Municipalities Codes that presents the list of Brazilian municipalities associated with a code composed of 7 digits, the first two being related to the Federation Unit code.
        schema:
          title: City code
          pattern: /^\d{7}$/
          type: string
        in: query
      - name: DPP
        description: Desired payment date. This is a date, in `yyyy-mm-dd` format, according to ISO 8601.
        schema:
          format: date
          type: string
          example: '2021-04-01'
        in: query
  /v2.x/{pixUrlAccessToken}:
    get:
      servers:
        - url: https://{fdqnPSPRecebedor}/{pixEndpoint}/v1
          variables:
            fdqnPSPRecebedor:
              default: example.com
              description: Endpoint base so that paying users can access the Payload Json that represents the debt collection.
      tags:
        - PixJsonPayloadCobsV2.x
      responses:
        '200':
          content:
            application/jose:
              schema:
                $ref: '#/components/schemas/PixCobPayloadResponseV2x'
              examples:
                Response01:
                  value:
                    calendario:
                      criacao: '2020-09-15T19:39:54.013Z'
                      apresentacao: '2020-04-01T18:00:00Z'
                      expiracao: 3600
                    txid: fc9a4366ff3d4964b5dbc6c91a8722d3
                    revisao: 3
                    status: ATIVA
                    valor:
                      original: '500.00'
                    chave: 7407c9c8-f78b-11ea-adc1-0242ac120002
                    solicitacaoPagador: Informar cartao fidelidade
                    infoAdicionais:
                      - nome: quantidade
                        valor: '2'
          description: |
            # Return Description
            The return of this endpoint is an object with a JWS structure, as specified in the security manual. Here is an example:
            ```jws
            eyJhbGciOiJQUzI1NiIsInR5cCI6IkpXUyJ9.eyJ0eElkIjoiNTJjNDMzNjEtY2FhMS00ZGRiLTkxNTItNzA4NDI2YTI1ZGIzIiwicmV2aXNhbyI6IjMiLCJjYWxlbmRhcmlvIjp7ImNyaWFjYW8iOiIyMDIwLTA5LTE1VDE5OjM5OjU0LjAxM1oiLCJhcHJlc2VudGFjYW8iOiIyMDIwLTA0LTAxVDE4OjAwOjAwWiIsImV4cGlyYWNhbyI6IjEyMDAifSwidmFsb3IiOnsib3JpZ2luYWwiOiI1MDAuMDAifSwiY2hhdmUiOiI3NDA3YzljOC1mNzhiLTExZWEtYWRjMS0wMjQyYWMxMjAwMDIiLCJzb2xpY2l0YWNhb1BhZ2Fkb3IiOiJJbmZvcm1hciBjYXJ0w6NvIGZpZGVsaWRhZGUiLCJpbmZvQWRpY2lvbmFpcyI6W3sibm9tZSI6InF1YW50aWRhZGUiLCJ2YWxvciI6IjIifV19.khlLEW4Q4W6zIYlacIaSHzwg_q9JrIkeinmvRDcUUD3120oXXew_xqSEAWsefY28g4MhUmK-RuaZgn1_rR22ZVM1pDbblw7Sk6dlHGxEc8PbMzMgEJPLdOZRumzMLx6YBYLAYsxT-HZp_vmBT713biN3jJf3V55z9RK6Xyo1CeWvemt81_O4kyGZ9lbp7p0VhmdJ9u6_EquEyP2n0uWy2ikbe7AFobkAdBRoF8gtp891WG5-gZmk4ZzATORNQOTrytQYMyprWV7o_prVjwT308RUo9Si-FRPTvYRGqyKo-voGoQVaZgCMUjc0jLr9WqYCRMyeCJZHTJmpaCFSNQnhw
            ```
            This signed JWS object must be validated by the payer. More details about the security specification can be found in the __[Pix Security Manual](https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos)__.
            As can be seen in the example above, the JWS object has three fragments separated by the `.` (dot) character. They are: `header`, `payload` and `signature`.
            In terms of functionality, the fragment that interests the payer is the `payload`, which presents a structure as specified by the `schema` of the present endpoint, containing details concerning debt collection.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      deprecated: false
      security: []
      operationId: get-pix-api-payload-cob
      summary: Retrieve the JSON payload that represents the immediate collection
      description: |
        ## Endpoint (location) that serves a payload that represents an immediate collection.
        When the debtor user reads a dynamic QR Code generated by the recipient, this URL will be accessed and its content consists of a JWS structure. The information about security in the access to urls can be found in the Pix Security Manual available at this __[link](https://www.bcb.gov.br/estabilidadefinanceira/comunicacaodados)__.
    parameters:
      - examples:
          pixUrlAcessToken:
            value: api.developer.btgpactual.com%2Fpc%2Fp%2Fv2%2Fcc1e3e5b9353492092be53997fcae416
        name: pixUrlAccessToken
        description: The Pix URL (location) that contains immediate collection informations
        schema:
          type: string
        in: path
        required: true
  /pix-api/v2.x/cobv:
    get:
      tags:
        - PixBacenCobDueDateV2.x
      parameters:
        - $ref: '#/components/parameters/inicio'
        - $ref: '#/components/parameters/fim'
        - name: cpf
          schema:
            allOf:
              - $ref: '#/components/schemas/CPF'
              - description: Filter by the CPF of the payer. It cannot be used at the same time as the CNPJ.
          in: query
        - name: cnpj
          schema:
            allOf:
              - $ref: '#/components/schemas/CNPJ'
              - description: Filter by the payer's CNPJ. It cannot be used at the same time as the CPF.
          in: query
        - name: locationPresente
          description: Collection with location Present.
          schema:
            type: boolean
          in: query
        - name: status
          schema:
            allOf:
              - $ref: '#/components/schemas/PixCobStatus'
              - description: Filter by debt collection status.
          in: query
        - name: loteCobVId
          description: Id of the collection lot with due.
          schema:
            type: string
          in: query
        - $ref: '#/components/parameters/paginaAtual'
        - $ref: '#/components/parameters/itensPorPagina'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixBacenCobsDueDateConsultadas'
              examples:
                Example 1:
                  value:
                    parametros:
                      inicio: '2021-02-27T15:00:00'
                      fim: '2021-03-31T23:00:00'
                      paginacao:
                        paginaAtual: 0
                        itensPorPagina: 100
                        quantidadeDePaginas: 1
                        quantidadeTotalDeItens: 2
                    cobs:
                      - calendario:
                          criacao: '2021-02-27T19:31:24Z'
                          dataDeVencimento: '2021-12-16'
                          validadeAposVencimento: 10
                        txid: '000000000000000000000000000000093'
                        devedor:
                          cpf: '12345678901'
                          nome: jose da silva
                          email: user@example.com
                          logradouro: avenida paulista
                          cidade: sao paulo
                          uf: SP
                          cep: '12345678'
                        revisao: 5
                        recebedor:
                          cnpj: '12345678909876'
                          nome: Nome Comerciante
                          nomeFantasia: Nome Fantasia
                          logradouro: Rua Agua verde
                          cidade: Curitiba
                          uf: PR
                          cep: '88888333'
                        loc:
                          id: 100
                          location: api.dev.developer.btgpactual.com/qr/v2/cobv/2bd72fa20bd244cabbbc58861d96c61c
                          tipoCob: COBV
                          criacao: '2021-01-14T14:03:00.977Z'
                        status: ATIVA
                        valor:
                          original: '100.00'
                          multa:
                            modalidade: 1
                            valorPerc: '10.00'
                          juros:
                            modalidade: 5
                            valorPerc: '1.00'
                          abatimento:
                            modalidade: 1
                            valorPerc: '2.00'
                          desconto:
                            modalidade: 1
                            descontoDataFixa:
                              - data: '2021-11-16'
                                valorPerc: '20.00'
                              - data: '2021-11-16'
                                valorPerc: '20.00'
                              - data: '2021-11-16'
                                valorPerc: '20.00'
                        chave: '+552197993512412'
                        solicitacaoPagador: string
                        infoAdicionais:
                          - nome: string
                            valor: string
                      - calendario:
                          criacao: '2021-02-27T17:35:30Z'
                          dataDeVencimento: '2021-12-25'
                          validadeAposVencimento: 10
                        txid: '000000000000000000000000000000095'
                        devedor:
                          cpf: '12345678901'
                          nome: jose da silva
                          email: user@example.com
                          logradouro: Rua Bela Cintra
                          cidade: Sao Paulo
                          uf: SP
                          cep: '12345678'
                        revisao: 0
                        recebedor:
                          cnpj: '12345678909876'
                          nome: Nome Comerciante
                          nomeFantasia: Nome Fantasia
                          logradouro: Rua Agua verde
                          cidade: Curitiba
                          uf: PR
                          cep: '88888333'
                        status: ATIVA
                        valor:
                          original: '100.00'
                          multa:
                            modalidade: 1
                            valorPerc: '10.00'
                          juros:
                            modalidade: 5
                            valorPerc: '1.00'
                          abatimento:
                            modalidade: 1
                            valorPerc: '2.00'
                          desconto:
                            modalidade: 4
                            descontoDataFixa:
                              - data: '2021-10-16'
                                valorPerc: '20.00'
                              - data: '2021-10-16'
                                valorPerc: '20.00'
                              - data: '2021-10-16'
                                valorPerc: '20.00'
                        chave: '+552197993512412'
                        solicitacaoPagador: string
                        infoAdicionais:
                          - nome: string
                            valor: string
                Example 2:
                  value:
                    parametros:
                      inicio: '2021-02-27T15:00:00'
                      fim: '2021-03-31T23:00:00'
                      paginacao:
                        paginaAtual: 0
                        itensPorPagina: 100
                        quantidadeDePaginas: 1
                        quantidadeTotalDeItens: 9
                    cobs:
                      - calendario:
                          criacao: '2021-02-27T19:31:24Z'
                          dataDeVencimento: '2021-12-16'
                          validadeAposVencimento: 10
                        txid: '000000000000000000000000000000093'
                        devedor:
                          cpf: '12345678901'
                          nome: jose da silva
                          email: user@example.com
                          logradouro: avenida paulista
                          cidade: sao paulo
                          uf: SP
                          cep: '12345678'
                        revisao: 5
                        recebedor:
                          cnpj: '12345678909876'
                          nome: Nome Comerciante
                          nomeFantasia: Nome Fantasia
                          logradouro: Rua Agua verde
                          cidade: Curitiba
                          uf: PR
                          cep: '88888333'
                        loc:
                          id: 100
                          location: api.dev.developer.btgpactual.com/qr/v2/cobv/2bd72fa20bd244cabbbc58861d96c61c
                          tipoCob: COBV
                          criacao: '2021-01-14T14:03:00.977Z'
                        status: ATIVA
                        valor:
                          original: '100.00'
                          multa:
                            modalidade: 1
                            valorPerc: '10.00'
                          juros:
                            modalidade: 5
                            valorPerc: '1.00'
                          abatimento:
                            modalidade: 1
                            valorPerc: '2.00'
                          desconto:
                            modalidade: 1
                            descontoDataFixa:
                              - data: '2021-11-16'
                                valorPerc: '20.00'
                              - data: '2021-11-16'
                                valorPerc: '20.00'
                              - data: '2021-11-16'
                                valorPerc: '20.00'
                        chave: '+552197993512412'
                        solicitacaoPagador: string
                        infoAdicionais:
                          - nome: string
                            valor: string
                        pix:
                          - endToEndId: E12345678202009091221kkkkkkkkkkk
                            txid: 655dfdb1-a451-4b8f-bb58-254b958913fb
                            valor: '110.00'
                            horario: '2020-09-09T20:15:00.358Z'
                            infoPagador: '0123456789'
                            devolucoes:
                              - id: 123ABC
                                rtrId: Dxxxxxxxx202009091221kkkkkkkkkkk
                                valor: '10.00'
                                horario:
                                  solicitacao: '2020-09-09T20:15:00.358Z'
                                status: EM_PROCESSAMENTO
                      - calendario:
                          criacao: '2021-02-27T17:35:30Z'
                          dataDeVencimento: '2021-12-25'
                          validadeAposVencimento: 10
                        txid: '000000000000000000000000000000095'
                        devedor:
                          cpf: '12345678901'
                          nome: jose da silva
                          email: user@example.com
                          logradouro: Rua Bela Cintra
                          cidade: Sao Paulo
                          uf: SP
                          cep: '12345678'
                        revisao: 0
                        recebedor:
                          cnpj: '12345678909876'
                          nome: Nome Comerciante
                          nomeFantasia: Nome Fantasia
                          logradouro: Rua Agua verde
                          cidade: Curitiba
                          uf: PR
                          cep: '88888333'
                        status: ATIVA
                        valor:
                          original: '100.00'
                          multa:
                            modalidade: 1
                            valorPerc: '10.00'
                          juros:
                            modalidade: 5
                            valorPerc: '1.00'
                          abatimento:
                            modalidade: 1
                            valorPerc: '2.00'
                          desconto:
                            modalidade: 4
                            descontoDataFixa:
                              - data: '2021-10-16'
                                valorPerc: '20.00'
                              - data: '2021-10-16'
                                valorPerc: '20.00'
                              - data: '2021-10-16'
                                valorPerc: '20.00'
                        chave: '+552197993512412'
                        solicitacaoPagador: string
                        infoAdicionais:
                          - nome: string
                            valor: string
                        pix:
                          - endToEndId: E12345678202009091221kkkkkkkkkkk
                            txid: 655dfdb1-a451-4b8f-bb58-254b958913fb
                            valor: '110.00'
                            horario: '2020-09-09T20:15:00.358Z'
                            infoPagador: '0123456789'
                            devolucoes:
                              - id: 123ABC
                                rtrId: Dxxxxxxxx202009091221kkkkkkkkkkk
                                valor: '10.00'
                                horario:
                                  solicitacao: '2020-09-09T20:15:00.358Z'
                                status: EM_PROCESSAMENTO
          description: Collection list.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: get-bacen-pix-api-cobv
      summary: Query debt collection due date list V2.x
      description: Endpoint to query debt collections through parameters such as start, end, cpf, cnpj and status.
  /pix-api/v2.x/cobv/{txid}:
    get:
      tags:
        - PixBacenCobDueDateV2.x
      parameters:
        - name: Revisao
          description: Allows to recover previous revisions of a debt. In the absence of this parameter, the debt collection will always be returned as it was in its last revision.
          schema:
            $ref: '#/components/schemas/Revisao'
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixBacenCobDueDateReponseWithPix'
              examples:
                Example 1:
                  value:
                    calendario:
                      criacao: '2021-02-27T19:31:24Z'
                      dataDeVencimento: '2021-12-16'
                      validadeAposVencimento: 10
                    txid: '000000000000000000000000000000093'
                    devedor:
                      cpf: '12345678901'
                      nome: jose da silva
                      email: user@example.com
                      logradouro: avenida paulista
                      cidade: sao paulo
                      uf: SP
                      cep: '12345678'
                    revisao: 5
                    recebedor:
                      cnpj: '12345678909876'
                      nome: Nome Comerciante
                      nomeFantasia: Nome Fantasia
                      logradouro: Rua Agua verde
                      cidade: Curitiba
                      uf: PR
                      cep: '88888333'
                    loc:
                      id: 100
                      locationUrl: api.dev.developer.btgpactual.com/qr/v2/cobv/ce8afe6f2a4a414e8b03d769c609d132
                      locationType: COBV
                      criacao: '2021-01-12T18:08:31.849Z'
                    status: ATIVA
                    valor:
                      original: '100.00'
                      multa:
                        modalidade: 1
                        valorPerc: '10.00'
                      juros:
                        modalidade: 5
                        valorPerc: '1.00'
                      abatimento:
                        modalidade: 1
                        valorPerc: '2.00'
                      desconto:
                        modalidade: 1
                        descontoDataFixa:
                          - data: '2021-11-16'
                            valorPerc: '20.00'
                          - data: '2021-11-16'
                            valorPerc: '20.00'
                          - data: '2021-11-16'
                            valorPerc: '20.00'
                    chave: '+552197993512412'
                    solicitacaoPagador: string
                    infoAdicionais:
                      - nome: string
                        valor: string
                Example 2:
                  value:
                    calendario:
                      criacao: '2021-02-27T19:31:24Z'
                      dataDeVencimento: '2021-12-16'
                      validadeAposVencimento: 10
                    txid: '000000000000000000000000000000093'
                    devedor:
                      cpf: '12345678901'
                      nome: jose da silva
                      email: user@example.com
                      logradouro: avenida paulista
                      cidade: sao paulo
                      uf: SP
                      cep: '12345678'
                    revisao: 5
                    recebedor:
                      cnpj: '12345678909876'
                      nome: Nome Comerciante
                      nomeFantasia: Nome Fantasia
                      logradouro: Rua Agua verde
                      cidade: Curitiba
                      uf: PR
                      cep: '88888333'
                    loc:
                      id: 100
                      locationUrl: api.dev.developer.btgpactual.com/qr/v2/cobv/ce8afe6f2a4a414e8b03d769c609d132
                      locationType: COBV
                      criacao: '2021-01-12T18:08:31.849Z'
                    status: ATIVA
                    valor:
                      original: '100.00'
                      multa:
                        modalidade: 1
                        valorPerc: '10.00'
                      juros:
                        modalidade: 5
                        valorPerc: '1.00'
                      abatimento:
                        modalidade: 1
                        valorPerc: '2.00'
                      desconto:
                        modalidade: 1
                        descontoDataFixa:
                          - data: '2021-11-16'
                            valorPerc: '20.00'
                          - data: '2021-11-16'
                            valorPerc: '20.00'
                          - data: '2021-11-16'
                            valorPerc: '20.00'
                    chave: '+552197993512412'
                    solicitacaoPagador: string
                    infoAdicionais:
                      - nome: string
                        valor: string
                    pix:
                      - endToEndId: E12345678202009091221kkkkkkkkkkk
                        txid: 655dfdb1-a451-4b8f-bb58-254b958913fb
                        valor: '110.00'
                        horario: '2020-09-09T20:15:00.358Z'
                        infoPagador: '0123456789'
                        devolucoes:
                          - id: 123ABC
                            rtrId: Dxxxxxxxx202009091221kkkkkkkkkkk
                            valor: '10.00'
                            horario:
                              solicitacao: '2020-09-09T20:15:00.358Z'
                            status: EM_PROCESSAMENTO
          description: Debt collection due date data.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-api-bacen-cobv-txid
      summary: Consult debt collection due date V2.x
      description: Endpoint to consult a debt collection due date through a certain TxID.
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixBacenCobDueDateCreateRequest'
            examples:
              pix-request-cob-duedate:
                value:
                  calendario:
                    dataDeVencimento: '2021-12-16'
                    validadeAposVencimento: 0
                  loc:
                    id: 5999751217993605000
                  devedor:
                    cpf: '12345678901'
                    nome: jose da silva
                  valor:
                    original: '122.33'
                    multa:
                      modalidade: 1
                      valorPerc: '1.00'
                    juros:
                      modalidade: 8
                      valorPerc: '1.00'
                    abatimento:
                      modalidade: 1
                      valorPerc: '20.00'
                    desconto:
                      modalidade: 2
                      descontoDataFixa:
                        - data: '2021-10-16'
                          valorPerc: '20.00'
                        - data: '2021-10-16'
                          valorPerc: '20.00'
                        - data: '2021-10-16'
                          valorPerc: '20.00'
                  chave: '+5521979935124'
                  solicitacaoPagador: string
                  infoAdicionais:
                    - nome: string
                      valor: string
        required: true
      tags:
        - PixBacenCobDueDateV2.x
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixBacenCobDueDateReponse'
              examples:
                pix-response-cob-duedate-put:
                  value:
                    calendario:
                      criacao: '2021-02-27T18:46:28Z'
                      dataDeVencimento: '2021-12-16'
                      validadeAposVencimento: 0
                    txid: '00000000000000000000000000000091'
                    devedor:
                      cpf: '12345678901'
                      nome: jose da silva
                    revisao: 0
                    recebedor:
                      cnpj: '12345678909123'
                      nome: EMERSON MERCHANT COBV FISICA
                      nomeFantasia: MERCHANT FANTASIA
                      logradouro: Rua Bela Cintra cobv
                      cidade: Jundiai
                      uf: SP
                      cep: '87654321'
                    loc:
                      id: 5999751217993605000
                      location: api.d.developer.btgpactual.com/v1/p/v2/cobv/f83d4785e0fb43e78fde6d9cfa0dbb71
                      tipoCob: COBV
                      criacao: '2021-02-27T18:46:03.033Z'
                    status: ATIVA
                    valor:
                      original: '122.33'
                      multa:
                        modalidade: 1
                        valorPerc: '1.00'
                      juros:
                        modalidade: 8
                        valorPerc: '1.00'
                      abatimento:
                        modalidade: 1
                        valorPerc: '20.00'
                      desconto:
                        modalidade: 2
                        descontoDataFixa:
                          - data: '2021-10-16'
                            valorPerc: '20.00'
                          - data: '2021-10-16'
                            valorPerc: '20.00'
                          - data: '2021-10-16'
                            valorPerc: '20.00'
                    chave: '+5521979935124'
                    solicitacaoPagador: string
                    infoAdicionais:
                      - nome: string
                        valor: string
          description: Debt collection due date created
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: put-pix-api-bacen-cobv-txid
      summary: Create debt collection due date V2.x
      description: Endpoint to create a debt collection due date.
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixBacenCobDueDatePatchRequest'
            examples:
              example 1:
                value:
                  calendario:
                    dataDeVencimento: '2021-12-16'
                    validadeAposVencimento: 0
                  loc:
                    id: 5999751217993605000
                  devedor:
                    cpf: '12345678901'
                    nome: jose da silva
                  valor:
                    original: '122.33'
                    multa:
                      modalidade: 1
                      valorPerc: '1.00'
                    juros:
                      modalidade: 8
                      valorPerc: '1.00'
                    abatimento:
                      modalidade: 1
                      valorPerc: '20.00'
                    desconto:
                      modalidade: 2
                      descontoDataFixa:
                        - data: '2021-10-16'
                          valorPerc: '20.00'
                        - data: '2021-10-16'
                          valorPerc: '20.00'
                        - data: '2021-10-16'
                          valorPerc: '20.00'
                  chave: '+5521979935124'
                  solicitacaoPagador: string
                  infoAdicionais:
                    - nome: string
                      valor: string
              example 2:
                value:
                  status: REMOVIDA_PELO_USUARIO_RECEBEDOR
        required: true
      tags:
        - PixBacenCobDueDateV2.x
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixBacenCobDueDateReponse'
              examples:
                pix-response-patch-cob-duedate:
                  value:
                    calendario:
                      criacao: '2021-02-27T18:46:28Z'
                      dataDeVencimento: '2021-12-16'
                      validadeAposVencimento: 0
                    txid: '00000000000000000000000000000091'
                    devedor:
                      cpf: '12345678901'
                      nome: jose da silva
                    revisao: 0
                    recebedor:
                      cnpj: '12345678909123'
                      nome: EMERSON MERCHANT COBV FISICA
                      nomeFantasia: MERCHANT FANTASIA
                      logradouro: Rua Bela Cintra cobv
                      cidade: Jundiai
                      uf: SP
                      cep: '87654321'
                    loc:
                      id: 5999751217993605000
                      location: api.d.developer.btgpactual.com/v1/p/v2/cobv/f83d4785e0fb43e78fde6d9cfa0dbb71
                      tipoCob: COBV
                      criacao: '2021-02-27T18:46:03.033Z'
                    status: ATIVA
                    valor:
                      original: '122.33'
                      multa:
                        modalidade: 1
                        valorPerc: '1.00'
                      juros:
                        modalidade: 8
                        valorPerc: '1.00'
                      abatimento:
                        modalidade: 1
                        valorPerc: '20.00'
                      desconto:
                        modalidade: 2
                        descontoDataFixa:
                          - data: '2021-10-16'
                            valorPerc: '20.00'
                          - data: '2021-10-16'
                            valorPerc: '20.00'
                          - data: '2021-10-16'
                            valorPerc: '20.00'
                    chave: '+5521979935124'
                    solicitacaoPagador: string
                    infoAdicionais:
                      - nome: string
                        valor: string
          description: Revised debt collection. The revision should be increased by 1.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: path-pix-api-bacen-cobv-txid
      summary: Review debt collection due date V2.x
      description: Endpoint to updated a debt collection due date.
    parameters:
      - name: txid
        schema:
          $ref: '#/components/schemas/TxId'
        in: path
        required: true
  /pix-api/v2.x/cob/{txid}:
    get:
      tags:
        - PixCobV2.x
      parameters:
        - name: revisao
          description: Allows to recover previous revisions of a debt. In the absence of this parameter, the debt collection will always be returned as it was in its last revision.
          schema:
            $ref: '#/components/schemas/Revisao'
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobCompletaV2X'
              examples:
                Exemplo1:
                  value:
                    calendario:
                      criacao: '2019-08-24T14:15:22Z'
                      expiracao: '3600'
                    status: ATIVA
                    txid: b44f5080b71947c3b1e1d8fd0211b3f6
                    revisao: 0
                    location: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
                    loc:
                      id: 789
                      location: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
                      tipoCob: COB
                      criacao: '2019-08-24T13:15:22Z'
                    devedor:
                      cpf: '12345678901'
                      nome: Teste
                    valor:
                      original: '1.23'
                      modalidadeAlteracao: 0
                    chave: teste@teste.com
                    solicitacaoPagador: Pergunta de teste
                    infoAdicionais:
                      - nome: chave
                        valor: valor
          description: Debt collection data.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-api-cob-txid-v2.x
      summary: Consult a debt collection V2.x
      description: Endpoint to consult a debt collection through a certain TxID.
    put:
      requestBody:
        $ref: '#/components/requestBodies/PixCobBodyV2X'
      tags:
        - PixCobV2.x
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobGeradaV2X'
              examples:
                Exemplo1:
                  value:
                    calendario:
                      criacao: '2019-08-24T14:15:22Z'
                      expiracao: '3600'
                    status: ATIVA
                    txid: b44f5080b71947c3b1e1d8fd0211b3f6
                    revisao: 0
                    location: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
                    loc:
                      id: 789
                      location: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
                      tipoCob: COB
                      criacao: '2019-08-24T13:15:22Z'
                    devedor:
                      cpf: '12345678901'
                      nome: Teste
                    valor:
                      original: '1.23'
                      modalidadeAlteracao: 0
                    chave: teste@teste.com
                    solicitacaoPagador: Pergunta de teste
                    infoAdicionais:
                      - nome: chave
                        valor: valor
          description: Debt collection created.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: put-pix-api-cob-txid-v2.x
      summary: Create debt collection V2.x
      description: Endpoint to create a debt passing a txid.
    patch:
      requestBody:
        $ref: '#/components/requestBodies/PixCobBodyRevisadaV2X'
      tags:
        - PixCobV2.x
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobGeradaV2X'
              examples:
                Exemplo1:
                  value:
                    calendario:
                      criacao: '2019-08-24T14:15:22Z'
                      expiracao: '3600'
                    status: ATIVA
                    txid: b44f5080b71947c3b1e1d8fd0211b3f6
                    revisao: 0
                    location: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
                    loc:
                      id: 789
                      location: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
                      tipoCob: COB
                      criacao: '2019-08-24T13:15:22Z'
                    devedor:
                      cpf: '12345678901'
                      nome: Teste
                    valor:
                      original: '1.23'
                      modalidadeAlteracao: 0
                    chave: teste@teste.com
                    solicitacaoPagador: Pergunta de teste
                    infoAdicionais:
                      - nome: chave
                        valor: valor
          description: Revised debt collection. The revision should be increased by 1.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: path-pix-api-cob-txid-v2.x
      summary: Review debt V2.x
      description: Endpoint to update an existent debt passing a txid.
    parameters:
      - name: txid
        schema:
          $ref: '#/components/schemas/TxId'
        in: path
        required: true
  /pix-api/v2.x/loc:
    get:
      tags:
        - PixLocV2.x
      parameters:
        - $ref: '#/components/parameters/inicio'
        - $ref: '#/components/parameters/fim'
        - name: txIdPresente
          description: Flag to return data with txId in response or not.
          schema:
            type: boolean
          in: query
        - name: tipoCob
          description: Type of locations to return in response.
          schema:
            enum:
              - cob
              - cobv
            type: string
          in: query
        - $ref: '#/components/parameters/paginaAtual'
        - $ref: '#/components/parameters/itensPorPagina'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixLocConsultadasV2X'
          description: OK
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
      operationId: get-pix-api-location-v2.x
      summary: Query location list V2.x
      description: Endpoint to consult registered locations.
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixLocSolicitadaV2X'
        required: true
      tags:
        - PixLocV2.x
      responses:
        '201':
          headers:
            location:
              schema:
                format: uri
                title: Location Identifier of location created.
                description: Payload location to be informed when creating the charge.
                type: string
                example: api.dev.developer.btgpactual.com/qr/v2/cabe4117ead3455dbfab4f7400cbc9c1
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixBacenLocWithoutTxid'
          description: OK
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
      operationId: post-pix-api-location-v2.x
      summary: Create location for a payload V2.x
      description: Endpoint to create location for a payload.
  /pix-api/v2.x/loc/{id}:
    get:
      tags:
        - PixLocV2.x
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixBacenLoc'
          description: OK
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
      operationId: get-pix-api-loc-id-v2.x
      summary: Recover the payload location V2.x
      description: Recovers the payload location.
    parameters:
      - examples:
          Exemplo1:
            value: '1'
        name: id
        description: Identifier of the location to be informed when creating the charge.
        schema:
          type: number
        in: path
        required: true
  /pix-api/v2.x/loc/{id}/txid:
    delete:
      tags:
        - PixLocV2.x
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixBacenLocWithoutTxid'
          description: OK
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
      operationId: delete-pix-api-loc-id-v2.x
      summary: Unlink a collection from a location V2.x
      description: Endpoint used to unlink a collection from a location. If executed successfully, the loc entity will no longer present a txid, it presented itself before the call. Additionally, the cob or cobv entity associated to the disconnected txid will also no longer present a location. This operation does not change the status of the cob or cobv in question.
    parameters:
      - examples:
          Exemplo1:
            value: '1'
        name: id
        description: Identifier for location.
        schema:
          type: number
        in: path
        required: true
  /pix-api/v2.x/pix:
    get:
      tags:
        - PixIncomingV2.x
      parameters:
        - $ref: '#/components/parameters/inicio'
        - $ref: '#/components/parameters/fim'
        - name: txId
          schema:
            $ref: '#/components/schemas/TxId'
          in: query
        - name: txIdPresente
          description: ''
          schema:
            type: boolean
          in: query
        - name: devolucaoPresente
          description: ''
          schema:
            type: boolean
          in: query
        - name: cpf
          schema:
            allOf:
              - $ref: '#/components/schemas/CPF'
              - description: Filter by the CPF of the payer. It cannot be used at the same time as the CNPJ.
          in: query
        - name: cnpj
          schema:
            allOf:
              - $ref: '#/components/schemas/CNPJ'
              - description: Filter by the payer's CNPJ. It cannot be used at the same time as the CPF.
          in: query
        - $ref: '#/components/parameters/paginaAtual'
        - $ref: '#/components/parameters/itensPorPagina'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixIncomingConsultadosV2X'
              examples:
                getCobs1:
                  $ref: '#/components/examples/getPix1V2X'
          description: List of Pix received according to the search criteria.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-api-pix-v2x
      summary: Query Pix received V2.X
      description: Endpoint to query received Pix V2.X.
  /pix-api/v2.x/pix/{e2eid}:
    get:
      tags:
        - PixIncomingV2.x
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobV2XGet'
              examples:
                retorno1:
                  summary: Exemplo 1
                  value:
                    endToEndId: E12345678202009091221abcdef12345
                    txid: cd1fe328c875481285a6f233ae41b662
                    valor: '100.00'
                    horario: '2020-09-10T13:03:33.902Z'
                    infoPagador: Reforma da casa
                    devolucoes:
                      - id: 000AAA111
                        rtrId: D12345678202009091000abcde123456
                        valor: '11.00'
                        horario:
                          solicitacao: '2020-09-10T13:03:33.902Z'
                        status: EM_PROCESSAMENTO
                retorno2:
                  summary: Exemplo 2
                  value:
                    endToEndId: E12345678202009091221ghijk78901234
                    txid: 5b933948f3224266b1050ac54319e775
                    valor: '200.00'
                    horario: '2020-09-10T13:03:33.902Z'
                    infoPagador: Revisão do carro
          description: Data of the Pix effected.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-api-pix-e2eid-v2x
      summary: Query Pix Incoming V2.X
      description: Endpoint to query a Pix by e2eid V.2X.
    parameters:
      - name: e2eid
        schema:
          $ref: '#/components/schemas/EndToEndId'
        in: path
        required: true
  /pix-api/v2.x/pix/{e2eid}/devolucao/{id}:
    get:
      tags:
        - PixIncomingV2.x
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobV2XDevolucao'
              examples:
                retorno1:
                  $ref: '#/components/examples/retorno7'
          description: Reversal Data.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-api-pix-e2eid-devolucao-id-v2x
      summary: Query Reversal V2.X
      description: Endpoint to view a reversal by an e2eId of the Pix and the reversal id V2.X.
    put:
      requestBody:
        description: Data for reversal order.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixDevolucaoRequest'
              properties:
                valor:
                  allOf:
                    - $ref: '#/components/schemas/PixCobValor'
                    - description: Amount requested for reversal. The sum of the values of all the reversals may not exceed the total amount of the charge.
            example:
              valor: '7.89'
        required: true
      tags:
        - PixIncomingV2.x
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobV2XDevolucao'
              examples:
                retorno1:
                  $ref: '#/components/examples/retorno7'
          description: Reversal Data.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: put-pix-api-pix-e2eid-devolucao-id-v2x
      summary: Request Pix Refund V2.x
      description: Endpoint to request a reversal by an e2eId of the Pix and the reversal id V2.X.
    parameters:
      - name: e2eid
        schema:
          $ref: '#/components/schemas/EndToEndId'
        in: path
        required: true
      - name: id
        schema:
          $ref: '#/components/schemas/DevolucaoId'
        in: path
        required: true
  /pix-api/v2.x/cob:
    get:
      tags:
        - PixCobV2.x
      parameters:
        - $ref: '#/components/parameters/inicio'
        - $ref: '#/components/parameters/fim'
        - name: cpf
          schema:
            allOf:
              - $ref: '#/components/schemas/CPF'
              - description: Filter by the CPF of the payer. It cannot be used at the same time as the CNPJ.
          in: query
        - name: cnpj
          schema:
            allOf:
              - $ref: '#/components/schemas/CNPJ'
              - description: Filter by the payer's CNPJ. It cannot be used at the same time as the CPF.
          in: query
        - name: status
          schema:
            allOf:
              - $ref: '#/components/schemas/PixCobStatus'
              - description: Filter by debt collection status.
          in: query
        - $ref: '#/components/parameters/paginaAtual'
        - $ref: '#/components/parameters/itensPorPagina'
        - name: locationPresente
          description: Filter all collection by the existence of the location.
          schema:
            type: boolean
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobsConsultadasV2X'
              examples:
                Exemplo1:
                  value:
                    parametros:
                      inicio: '2020-04-01T00:00:00Z'
                      fim: '2020-04-02T10:00:00Z'
                      paginacao:
                        paginaAtual: 0
                        itensPorPagina: 100
                        quantidadeDePaginas: 1
                        quantidadeTotalDeItens: 2
                    cobs:
                      - status: ATIVA
                        calendario:
                          criacao: '2020-09-09T20:15:00.358Z'
                          expiracao: '3600'
                        location: pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25
                        loc:
                          id: 789
                          location: pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25
                          tipoCob: COB
                          criacao: '2020-09-09T19:15:00.358Z'
                        txid: 7978c0c97ea847e78e8849634473c1f1
                        revisao: 1
                        devedor:
                          cnpj: '12345678000195'
                          nome: Empresa de Serviços SA
                        valor:
                          original: '567.89'
                          modalidadeAlteracao: 0
                        chave: a1f4102e-a446-4a57-bcce-6fa48899c1d1
                        solicitacaoPagador: Informar cartão fidelidade
                      - status: CONCLUIDA
                        calendario:
                          criacao: '2020-09-09T20:15:00.358Z'
                          expiracao: '3600'
                        location: pix.example.com/qr/1dd7f893a58e417287028dc33e21a403
                        loc:
                          id: 790
                          location: pix.example.com/qr/1dd7f893a58e417287028dc33e21a403
                          tipoCob: COB
                          criacao: '2020-09-09T18:15:00.358Z'
                        txid: 655dfdb1a4514b8fbb58254b958913fb
                        revisao: 1
                        devedor:
                          cnpj: '12345678000195'
                          nome: Empresa de Serviços SA
                        valor:
                          original: '100.00'
                          modalidadeAlteracao: 1
                        chave: 40a0932d-1918-4eee-845d-35a2da1690dc
                        solicitacaoPagador: Informar cartão fidelidade
                        pix:
                          - endToEndId: E12345678202009091221kkkkkkkkkkk
                            txid: 655dfdb1a4514b8fbb58254b958913fb
                            valor: '110.00'
                            horario: '2020-09-09T20:15:00.358Z'
                            infoPagador: '0123456789'
                            devolucoes:
                              - id: 123ABC
                                rtrId: Dxxxxxxxx202009091221kkkkkkkkkkk
                                valor: '10.00'
                                horario:
                                  solicitacao: '2020-09-09T20:15:00.358Z'
                                status: EM_PROCESSAMENTO
                Exemplo2:
                  value:
                    parametros:
                      inicio: '2020-04-01T00:00:00Z'
                      fim: '2020-04-01T23:59:59Z'
                      paginacao:
                        paginaAtual: 0
                        itensPorPagina: 100
                        quantidadeDePaginas: 1
                        quantidadeTotalDeItens: 1
                    cobs:
                      - status: ATIVA
                        calendario:
                          criacao: '2020-09-09T20:15:00.358Z'
                          expiracao: '3600'
                        location: pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25
                        loc:
                          id: 789
                          location: pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25
                          tipoCob: COB
                          criacao: '2020-09-09T19:15:00.358Z'
                        txid: 7978c0c97ea847e78e8849634473c1f1
                        revisao: 1
                        devedor:
                          cnpj: '12345678000195'
                          nome: Empresa de Serviços SA
                        valor:
                          original: '567.89'
                          modalidadeAlteracao: 0
                        chave: a1f4102e-a446-4a57-bcce-6fa48899c1d1
                        solicitacaoPagador: Informar cartão fidelidade
          description: Collection list.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-api-cob-v2.x
      summary: Query debt collection list V2.x
      description: Endpoint to query debt collections through parameters such as start, end, cpf, cnpj, status and locationPresente.
    post:
      requestBody:
        $ref: '#/components/requestBodies/PixCobBodyV2X'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCobSolicitadaV2X'
            examples:
              Example:
                value:
                  calendario:
                    expiracao: '3600'
                  loc:
                    id: 100
                  devedor:
                    cpf: '11122233344'
                    nome: Teste
                  valor:
                    original: '1.23'
                  chave: teste@teste.com
                  solicitacaoPagador: Pergunta de teste?
                  infoAdicionais:
                    - nome: chave
                      valor: valor
              Change Example:
                value:
                  calendario:
                    expiracao: '3600'
                  loc:
                    id: 100
                  devedor:
                    cpf: '11122233344'
                    nome: Teste
                  valor:
                    original: '11.23'
                    modalideAlteracao: 0
                    retirada:
                      valor: '10.00'
                      modalidadeAlteracao: 0
                      modalidadeAgente: AGPSS
                      prestadorDoServicoDeSaque: '12345678'
                  chave: teste@teste.com
                  solicitacaoPagador: Pergunta de teste?
                  infoAdicionais:
                    - nome: chave
                      valor: valor
      tags:
        - PixCobV2.x
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobGeradaV2X'
              examples:
                Exemplo1:
                  value:
                    calendario:
                      criacao: '2019-08-24T14:15:22Z'
                      expiracao: '3600'
                    status: ATIVA
                    txid: b44f5080b71947c3b1e1d8fd0211b3f6
                    revisao: 0
                    location: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
                    loc:
                      id: 789
                      location: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
                      tipoCob: COB
                      criacao: '2019-08-24T13:15:22Z'
                    devedor:
                      cpf: '12345678901'
                      nome: Teste
                    valor:
                      original: '1.23'
                      modalidadeAlteracao: 0
                    chave: teste@teste.com
                    solicitacaoPagador: Pergunta de teste
                    infoAdicionais:
                      - nome: chave
                        valor: valor
                Example Change:
                  value:
                    calendario:
                      criacao: '2021-10-09T14:15:22Z'
                      expiracao: '3600'
                    status: ATIVA
                    txid: c56f5080b71947c3b1e1d8fd0211b3f6
                    revisao: 0
                    location: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
                    loc:
                      id: 654
                      location: pix.example.com/qr/2353c790eefb11eaadc10242ac120547
                      tipoCob: COB
                      criacao: '2021-10-08T13:15:22Z'
                    devedor:
                      cpf: '12345678901'
                      nome: Teste
                    valor:
                      original: '11.23'
                      modalidadeAlteracao: 0
                      retirada:
                        valor: '10.00'
                        modalidadeAlteracao: 0
                        modalidadeAgente: AGPSS
                        prestadorDoServicoDeSaque: '12345678'
                    chave: teste@teste.com
                    solicitacaoPagador: Pergunta de teste
                    infoAdicionais:
                      - nome: chave
                        valor: valor
          description: Debt collection created
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: post-pix-api-cob
      summary: Create debt collection V2.x
      description: Endpoint to create a debt.
  /pix-api/v2.x/bulkcobv/{id}:
    get:
      tags:
        - PixBacenBulkCobDueDateV2.x
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixBacenBulkCobvGet'
              examples:
                Example 1:
                  value:
                    id: 31
                    descricao: Lote teste de Carga 2021-06-29:19:18:37
                    criacao: '2021-06-24T18:51:14Z'
                    cobsv:
                      - txid: '10000000000000000000000000000112'
                        status: EM_PROCESSAMENTO
                      - txid: '10000000000000000000000000000111'
                        status: EM_PROCESSAMENTO
                Example 2:
                  value:
                    id: 31
                    descricao: Lote teste de Carga 2021-06-29:19:18:37
                    criacao: '2021-06-29T19:18:37Z'
                    cobsv:
                      - txid: '20210629191836000000001415252170'
                        status: CRIADA
                        criacao: '2021-06-29T20:14:13Z'
                      - txid: '20210629191836000000001753442581'
                        status: CRIADA
                        criacao: '2021-06-29T20:13:40Z'
                      - txid: '20210629191836000000000591373901'
                        status: CRIADA
                        criacao: '2021-06-29T20:13:48Z'
                Example 3:
                  value:
                    id: 30
                    descricao: Lote teste de Carga 2021-06-29:19:18:37
                    criacao: '2021-06-29T11:02:53Z'
                    cobsv:
                      - txid: '000000000000000000000000000000011'
                        status: NEGADA
                        problema:
                          type: https://pix.bcb.gov.br/api/v2/error/AcessoNegado
                          title: Acesso Negado
                          status: 403
                          detail: Requisição de participante autenticado que viola alguma regra de autorização.
                          correlationId: f79d5608-da44-49bb-b959-fa1f2de2fb1b
                          violations:
                            - reason: o location referenciado por cobv.loc.id já está sendo utilizado por outra cobrança.
                              property: cobv.loc.id
                      - txid: '000000000000000000000000000000021'
                        status: NEGADA
                        problema:
                          type: https://pix.bcb.gov.br/api/v2/error/AcessoNegado
                          title: Acesso Negado
                          status: 403
                          detail: Requisição de participante autenticado que viola alguma regra de autorização.
                          correlationId: b45b2102-864c-49a9-a308-c11bfe713b25
                          violations:
                            - reason: o location referenciado por cobv.loc.id já está sendo utilizado por outra cobrança.
                              property: cobv.loc.id
          description: Bulk collection due date data.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-api-bacen-bulk-cobv-id
      summary: Consult a specific Bulk of collection due date
      description: Endpoint to query a bulk of collection due date.
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixBacenBulkCobDueDatePUTRequest'
            examples:
              pix-request-bulk-cob-duedate:
                value:
                  descricao: Criação lote com vencimento
                  cobsv:
                    - txid: '000000000000000000000000000000011'
                      calendario:
                        dataDeVencimento: '2021-12-16'
                        validadeAposVencimento: 0
                      loc:
                        id: 8193397764286823000
                      devedor:
                        cpf: '12345678901'
                        nome: jose da silva soares
                      valor:
                        original: '122.50'
                        multa:
                          modalidade: 1
                          valorPerc: '1.00'
                        juros:
                          modalidade: 8
                          valorPerc: '1.00'
                        abatimento:
                          modalidade: 1
                          valorPerc: '20.00'
                        desconto:
                          modalidade: 2
                          descontoDataFixa:
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                      chave: agushikem@gmail.com
                      solicitacaoPagador: string
                      infoAdicionais:
                        - nome: Cob1
                          valor: Teste Cobv 1
                    - txid: '000000000000000000000000000000021'
                      calendario:
                        dataDeVencimento: '2021-12-16'
                        validadeAposVencimento: 0
                      loc:
                        id: 8193397764286823000
                      devedor:
                        cpf: '12345678901'
                        nome: jose da silva
                      valor:
                        original: '150.00'
                        multa:
                          modalidade: 1
                          valorPerc: '1.00'
                        juros:
                          modalidade: 8
                          valorPerc: '1.00'
                        abatimento:
                          modalidade: 1
                          valorPerc: '20.00'
                        desconto:
                          modalidade: 2
                          descontoDataFixa:
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                      chave: agushikem@gmail.com
                      solicitacaoPagador: string
                      infoAdicionais:
                        - nome: Teste
                          valor: Teste criaçao cobrança
        required: true
      tags:
        - PixBacenBulkCobDueDateV2.x
      responses:
        '202':
          description: Bulk collection with requested due date for creation.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: put-pix-api-bacen-bulk-cobv-id
      summary: Create/Change Bulk collection due date
      description: |-
        Endpoint used to create or change a bulk of collection due date.
        For the collection change use case, the array to be assigned in the request
        must be composed of the exact requests to create collections that
        contained in the array assigned in the originating request.

        You cannot use this endpoint to _change_ a bulk of collections due date
        adding or removing existing collection within the collection of charges
        created in the requisition originating from the batch.

        In other words, if you originally created a bulk, for example, with collections
        [`a`, `b` and `c`], you cannot _change_ this original set of collection than the
        bulk represents for [`a`, `b`, `c`, `d`], or for [`a`, `b`].
        On the other hand, you can change, _batch_ the collections [`a`, `b`, `c`],
        as originally contained in the original bulk requisition.

        A billing __creation__ request with status "IN_PROCESSING" or "DENIED"
        is associated with a charge does not _exist_ in fact, so it will not be
        listed in `GET /cobv` or `GET /cobv/{txid}`.
        A collection, once created via `PUT /cobv/{txid}`,
        cannot be associated with a bulk later.
        A collection, once created via `PUT /bulkcobv/{id}`,
        cannot be associated with a new bulk later.
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixBacenBulkCobDueDatePATCHRequest'
            examples:
              example 1:
                value:
                  descricao: Alteração lote com vencimento
                  cobsv:
                    - txid: '000000000000000000000000000000011'
                      valor:
                        original: '122.50'
                        multa:
                          modalidade: 1
                          valorPerc: '1.00'
                        juros:
                          modalidade: 8
                          valorPerc: '1.00'
                        abatimento:
                          modalidade: 1
                          valorPerc: '20.00'
                        desconto:
                          modalidade: 2
                          descontoDataFixa:
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                    - txid: '000000000000000000000000000000021'
                      calendario:
                        dataDeVencimento: '2021-12-16'
                        validadeAposVencimento: 0
                      valor:
                        original: '150.00'
                        multa:
                          modalidade: 1
                          valorPerc: '1.00'
                        juros:
                          modalidade: 8
                          valorPerc: '1.00'
                        abatimento:
                          modalidade: 1
                          valorPerc: '20.00'
                        desconto:
                          modalidade: 2
                          descontoDataFixa:
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                            - data: '2021-10-16'
                              valorPerc: '20.00'
                            - data: '2021-10-16'
                              valorPerc: '20.00'
        required: true
      tags:
        - PixBacenBulkCobDueDateV2.x
      responses:
        '202':
          description: Bulk collection review request forwarded for processing.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: path-pix-api-bacen-bulk-cobv-id
      summary: Used to review specific collection within a due Bulk collection
      description: |-
        Endpoint used to review specific collections within a bulk of collections due date.
        The difference between this endpoint and the related PUT endpoint is that this endpoint supports an array
        `cobsv` with fewer requests to create or change collections than the array assigned in requisition originating from the batch.
        You cannot, however, use this endpoint to aggregate or remove requests from
        alteration or creation of collections as stated in the original requisition of the bulk.
    parameters:
      - examples:
          Exemplo:
            value: '1'
        name: id
        description: Bulk id
        schema:
          format: int64
          type: integer
        in: path
        required: true
  /pix-api/v2.x/bulkcobv:
    get:
      tags:
        - PixBacenBulkCobDueDateV2.x
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixBacenBulksDueDateConsultadas'
              examples:
                Example:
                  value:
                    parametros:
                      inicio: '2021-06-29T00:00:00'
                      fim: '2021-07-20T23:59:59'
                      paginacao:
                        paginaAtual: 3
                        itensPorPagina: 2
                        quantidadeDePaginas: 10
                        quantidadeTotalDeItens: 100
                    lotes:
                      - id: 29
                        descricao: Lote teste de Carga 2021-06-29:19:18:35
                        criacao: '2021-06-29T22:18:35Z'
                        cobsv:
                          - txid: '20210629191835000000000002827962'
                            status: CRIADA
                            criacao: '2021-06-29T23:14:14Z'
                          - txid: '20210629191835000000000031802900'
                            status: CRIADA
                            criacao: '2021-06-29T23:14:13Z'
                      - id: 30
                        descricao: Criação lote 05 atualizado
                        criacao: '2021-06-29T14:02:53Z'
                        cobsv:
                          - txid: '000000000000000000000000000000011'
                            status: NEGADA
                            problema:
                              type: https://pix.bcb.gov.br/api/v2/error/AcessoNegado
                              title: Acesso Negado
                              status: 403
                              detail: Requisição de participante autenticado que viola alguma regra de autorização.
                              correlationId: f79d5608-da44-49bb-b959-fa1f2de2fb1b
                              violations:
                                - reason: o location referenciado por cobv.loc.id já está sendo utilizado por outra cobrança.
                                  property: cobv.loc.id
                          - txid: '000000000000000000000000000000021'
                            status: NEGADA
                            problema:
                              type: https://pix.bcb.gov.br/api/v2/error/AcessoNegado
                              title: Acesso Negado
                              status: 403
                              detail: Requisição de participante autenticado que viola alguma regra de autorização.
                              correlationId: b45b2102-864c-49a9-a308-c11bfe713b25
                              violations:
                                - reason: o location referenciado por cobv.loc.id já está sendo utilizado por outra cobrança.
                                  property: cobv.loc.id
          description: Bulks Collection list.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: get-bacen-pix-api-bulkcobv
      summary: Query Bulk collection due date list
      description: Endpoint to query bulk collections through parameters such as start and end.
    parameters:
      - $ref: '#/components/parameters/inicio'
      - $ref: '#/components/parameters/fim'
      - $ref: '#/components/parameters/paginaAtual'
      - $ref: '#/components/parameters/itensPorPagina'
  /pix/merchant/payment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantRequestPayload'
            examples:
              Example:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  creditParty:
                    account: '1000'
                    name: Beltrano de Tal
                    taxId: '22222222222'
                    accountType: CACC
                    branch: '1'
                    bank: '30306294'
                  tags:
                    - abc
                    - def
                  remittanceInformation: Informação para ser apresentada
                  paymentType: IMMEDIATE
                  transactionType: CHANGE
                  vlcpAmount: '5.01'
                  vldnAmount: '5.00'
              Example with DICT key:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  creditParty:
                    account: '1000'
                    name: Beltrano de Tal
                    taxId: '22222222222'
                    accountType: CACC
                    branch: '1'
                    bank: '30306294'
                    key: fulano@gmail.com
                  tags:
                    - abc
                    - def
                  paymentType: FRAUD
                  transactionType: WITHDRAWAL
                  vldnAmount: '10.01'
        required: true
      tags:
        - Merchant
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentResponse'
              examples:
                PixPaymentResponseFull:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Credit example name
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: abcd0000000001
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: CHANGE
                        initiationType: MANUAL
                        urgency: HIGH
                        vlcpAmount: 5.01
                        vldnAmount: 5.01
                      tags:
                        - abc
                PixPaymentFullResponseDictKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Credit example name
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: CHANGE
                        initiationType: MANUAL
                        urgency: HIGH
                        vlcpAmount: 5.01
                        vldnAmount: 5.01
                      tags:
                        - abc
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment
      summary: Send a Pix Payment as a Transactional Customer
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment. The amount will be debited from your account marked as default. 

        Rules based on the transactionType value:

        |TransactionType|Property|Rule|
        |----------|:-------------|------|
        |TRANSFER|'vlcpAmount' and 'vldnAmount'|These properties cannot be inserted.|
        |CHANGE|'vlcpAmount' and 'vldnAmount'|These properties are required.|
        |CHANGE|'amount'|This property must be the sum of the 'vlcpAmount' and 'vldnAmount' properties.|
        |WITHDRAWAL|'vldnAmount'|This property is required.|
        |WITHDRAWAL|'vlcpAmount'|This property cannot be inserted.|
        |WITHDRAWAL|'amount'|This property must be the same of 'vldnAmount' property.|
        |WITHDRAWAL and CHANGE|'withdrawalAgentMode' and 'withdrawalServiceProvider'|These properties are required.|

        Rules based on the initiationType value:

        |InitiationType|Property|Rule|
        |----------|:-------------|------|
        |MANUAL|'creditParty.key'|This property cannot be inserted.|
        |MANUAL or DICT|'transactionIdentification'|This property cannot be inserted.|
        |DICT, STATIC_QRCODE, DYNAMIC_QRCODE|'creditParty.key'|This property is required.|
        |STATIC_QRCODE|'transactionIdentification'|This property is required when 'transactionIdentification' (txId) is present on QRCODE.|
        |DYNAMIC_QRCODE|'transactionIdentification'|This property is required and length must be between 26 and 35 characters.|
        |PAYMENT_INITIATOR|'taxIdPaymentInitiator'|This property is required and needs to be a CNPJ.|
        |PAYMENT_INITIATOR|'creditParty.key'|This property is required if a query was previously made in DICT.|
        |PAYMENT_INITIATOR|'transactionIdentification'|This property is required, length must be up to 25 characters.|

        Rules based on the paymentType value:

        |PaymentType|Property|Rule|
        |----------|:-------------|------|
        |SCHEDULED|'urgency'|This property will have NORMAL value. Otherwise, this property will have the HIGH value.|
  /pix/merchant/payment/confirm/{pactualId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantConfirmRequest'
      tags:
        - Merchant
      parameters:
        - examples:
            PactualIdExample:
              value: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
          name: pactualId
          description: The initiated transaction's pactualId.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentResponse'
              examples:
                PixPaymentResponseFullDictKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                      tags:
                        - abc
          description: Sucessful response.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-key-confirm
      summary: Confirm a Pix Payment started by Transactional Customer
      description: |-
        This endpoint must be used by transactional clients that wish to confirm an existent Pix Payment, passing your pactualId.

        > This endpoint must not be used by Pix Indirect Participants.
  /pix/merchant/payment/confirmed/{key}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantAmountRequestDictKeyPayload'
            examples:
              Example without remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  paymentType: IMMEDIATE
                  transactionType: WITHDRAWAL
                  vldnAmount: '10.01'
              Example with remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  remittanceInformation: Informação para ser apresentada
                  paymentType: IMMEDIATE
                  transactionType: WITHDRAWAL
                  vldnAmount: '10.01'
        required: true
      tags:
        - Merchant
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentResponse'
              examples:
                PixPaymentResponseFullDictKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Credit example name
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: WITHDRAWAL
                        initiationType: DICT
                        urgency: NORMAL
                        vldnAmount: 10.01
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-key-confirmed
      summary: Send a confirmed Pix Payment as a Transactional Customer using a key
      description: |-
        This endpoint must be used by transactional clients that wish to request a confirmed Pix Payment, passing your key. Since this endpoint creates a confirmed payment, there is no need to confirm afterwards. The amount will be debited from your account marked as default. 

        Rules based on the transactionType value:

        |TransactionType|Property|Rule|
        |----------|:-------------|------|
        |TRANSFER|'vlcpAmount' and 'vldnAmount'|These properties cannot be inserted.|
        |CHANGE|'vlcpAmount' and 'vldnAmount'|These properties are required.|
        |CHANGE|'amount'|This property must be the sum of the 'vlcpAmount' and 'vldnAmount' properties.|
        |WITHDRAWAL|'vldnAmount'|This property is required.|
        |WITHDRAWAL|'vlcpAmount'|This property cannot be inserted.|
        |WITHDRAWAL|'amount'|This property must be the same of 'vldnAmount' property.|
        |WITHDRAWAL and CHANGE|'withdrawalAgentMode' and 'withdrawalServiceProvider'|These properties are required.|

        Rules based on the initiationType value:

        |InitiationType|Property|Rule|
        |----------|:-------------|------|
        |MANUAL or DICT|'transactionIdentification'|This property cannot be inserted.|
        |STATIC_QRCODE|'transactionIdentification'|This property is required and length must be up to 25 characters.|
        |DYNAMIC_QRCODE|'transactionIdentification'|This property is required and length must be between 26 and 35 characters.|
        |PAYMENT_INITIATOR|'taxIdPaymentInitiator'|This property is required and needs to be a CNPJ.|
        |PAYMENT_INITIATOR|'transactionIdentification'|This property is required, length must be up to 25 characters.|

        Rules based on the paymentType value:

        |PaymentType|Property|Rule|
        |----------|:-------------|------|
        |SCHEDULED|'urgency'|This property will have NORMAL value.|
    parameters:
      - examples:
          Key example:
            value: fulano@gmail.com
        name: key
        description: The destination DICT key.
        schema:
          maxLength: 77
          type: string
        in: path
        required: true
  /pix/merchant/payment/initiate/{key}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantRequestDictKeyPayload'
            examples:
              Example without remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  paymentType: IMMEDIATE
                  transactionType: CHANGE
                  vlcpAmount: '5.01'
                  vldnAmount: '5.00'
              Example with remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  remittanceInformation: Informação para ser apresentada
                  paymentType: IMMEDIATE
                  transactionType: CHANGE
                  vlcpAmount: '5.01'
                  vldnAmount: '5.00'
        required: true
      tags: []
      parameters:
        - examples:
            Key example:
              value: fulano@gmail.com
          name: key
          description: The destination DICT key.
          schema:
            maxLength: 77
            type: string
          in: path
          required: true
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentMerchantResponseEnvelope'
              examples:
                PixPaymentResponseKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
                      clientRequestId: 45143f4e-15ff-413d-808d-8837652ebdc6
                      createTimestamp: '2020-08-08T20:17:32.7971743+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:32.7971743+00:00'
                      entity: PixPayment
                      status: INITIATED
                      body:
                        amount: '10.01'
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: fulano@gmail.com
                          bank: '30306294'
                          branch: '20'
                          account: '416834'
                          name: Beltrano de Tal
                          taxId: '2310708'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808195101608910248
                        paymentType: IMMEDIATE
                        transactionType: CHANGE
                        initiationType: DICT
                        urgency: HIGH
                        vlcpAmount: '5.01'
                        vldnAmount: '5.00'
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-key
      summary: Initiate a Pix Payment as a Transactional Customer using a key
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment, passing your key. The amount will be debited from your account marked as default.

        Confirm transaction [here](#operation/pix-merchant-payment-key-confirm)

        Rules based on the transactionType value:

        |TransactionType|Property|Rule|
        |----------|:-------------|------|
        |TRANSFER|'vlcpAmount' and 'vldnAmount'|These properties cannot be inserted.|
        |CHANGE|'vlcpAmount' and 'vldnAmount'|These properties are required.|
        |CHANGE|'amount'|This property must be the sum of the 'vlcpAmount' and 'vldnAmount' properties.|
        |WITHDRAWAL|'vldnAmount'|This property is required.|
        |WITHDRAWAL|'vlcpAmount'|This property cannot be inserted.|
        |WITHDRAWAL|'amount'|This property must be the same of 'vldnAmount' property.|
        |WITHDRAWAL and CHANGE|'withdrawalAgentMode' and 'withdrawalServiceProvider'|These properties are required.|

        Rules based on the initiationType value:

        |InitiationType|Property|Rule|
        |----------|:-------------|------|
        |MANUAL or DICT|'transactionIdentification'|This property cannot be inserted.|
        |STATIC_QRCODE|'transactionIdentification'|This property is required and length must be up to 25 characters.|
        |DYNAMIC_QRCODE|'transactionIdentification'|This property is required and length must be between 26 and 35 characters.|
        |PAYMENT_INITIATOR|'taxIdPaymentInitiator'|This property is required and needs to be a CNPJ.|
        |PAYMENT_INITIATOR|'transactionIdentification'|This property is required, length must be up to 25 characters.|

        Rules based on the paymentType value:

        |PaymentType|Property|Rule|
        |----------|:-------------|------|
        |SCHEDULED|'urgency'|This property will have NORMAL value. Otherwise, this property will have the HIGH value.|
    parameters:
      - examples:
          Key example:
            value: fulano@gmail.com
        name: key
        description: The destination DICT key.
        schema:
          maxLength: 77
          type: string
        in: path
        required: true
  /pix/merchant/payment/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantRequestPayload'
            examples:
              Example:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  creditParty:
                    account: '1000'
                    name: Credit example name
                    taxId: '22222222222'
                    accountType: CACC
                    branch: '1'
                    bank: '30306294'
                  tags:
                    - abc
                    - def
                  remittanceInformation: Informação para ser apresentada
                  paymentType: IMMEDIATE
                  transactionType: WITHDRAWAL
                  vldnAmount: '10.01'
              Example with DICT key:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  creditParty:
                    account: '1000'
                    name: Credit example name
                    taxId: '22222222222'
                    accountType: CACC
                    branch: '1'
                    bank: '30306294'
                    key: credit@gmail.com
                  tags:
                    - abc
                    - def
                  paymentType: IMMEDIATE
                  transactionType: WITHDRAWAL
                  vldnAmount: '10.01'
        required: true
      tags:
        - MerchantUsingAccountId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentResponse'
              examples:
                PixPaymentResponseFull:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Credit example name
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: abcd0000000001
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: WITHDRAWAL
                        initiationType: MANUAL
                        urgency: HIGH
                        vldnAmount: 10.01
                      tags:
                        - abc
                PixPaymentFullResponseDictKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: credit@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Credit example name
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: TRANSFER
                        initiationType: DICT
                        urgency: HIGH
                        vldnAmount: 10.01
                      tags:
                        - abc
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-accountid
      summary: Send a Pix Payment by Account Id as a Transactional Customer
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment, passing an accountId. 

        Rules based on the transactionType value:

        |TransactionType|Property|Rule|
        |----------|:-------------|------|
        |TRANSFER|'vlcpAmount' and 'vldnAmount'|These properties cannot be inserted.|
        |CHANGE|'vlcpAmount' and 'vldnAmount'|These properties are required.|
        |CHANGE|'amount'|This property must be the sum of the 'vlcpAmount' and 'vldnAmount' properties.|
        |WITHDRAWAL|'vldnAmount'|This property is required.|
        |WITHDRAWAL|'vlcpAmount'|This property cannot be inserted.|
        |WITHDRAWAL|'amount'|This property must be the same of 'vldnAmount' property.|
        |WITHDRAWAL and CHANGE|'withdrawalAgentMode' and 'withdrawalServiceProvider'|These properties are required.|

        Rules based on the initiationType value:

        |InitiationType|Property|Rule|
        |----------|:-------------|------|
        |MANUAL|'creditParty.key'|This property cannot be inserted.|
        |MANUAL or DICT|'transactionIdentification'|This property cannot be inserted.|
        |DICT, STATIC_QRCODE, DYNAMIC_QRCODE |'creditParty.key'|This property is required.|
        |STATIC_QRCODE|'transactionIdentification'|This property is required and length must be up to 25 characters.|
        |DYNAMIC_QRCODE |'transactionIdentification'|This property is required and length must be between 26 and 35 characters.|
        |PAYMENT_INITIATOR|'taxIdPaymentInitiator'|This property is required and needs to be a CNPJ.|
        |PAYMENT_INITIATOR|'creditParty.key'|This property is required if a query was previously made in DICT.|
        |PAYMENT_INITIATOR|'transactionIdentification'|This property is required, length must be up to 25 characters and needs to be from a STATIC_QRCODE.|

        Rules based on the paymentType value:

        |PaymentType|Property|Rule|
        |----------|:-------------|------|
        |SCHEDULED|'urgency'|This property will have NORMAL value. Otherwise, this property will have the HIGH value.|
    parameters:
      - examples:
          AccountIdExample:
            value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
        name: accountId
        description: The unique identifier for account.
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/{accountId}/confirmed/{key}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantAmountRequestDictKeyPayload'
            examples:
              Example without remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  paymentType: IMMEDIATE
                  transactionType: CHANGE
                  vlcpAmount: '5.01'
                  vldnAmount: '5.00'
              Example with remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  remittanceInformation: Informação para ser apresentada
                  paymentType: IMMEDIATE
                  transactionType: CHANGE
                  vlcpAmount: '5.01'
                  vldnAmount: '5.00'
        required: true
      tags:
        - MerchantUsingAccountId
      parameters:
        - examples:
            AccountIdExample:
              value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
          name: accountId
          description: The unique identifier for account.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentResponse'
              examples:
                PixPaymentResponseFullDictKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: TRANSFER
                        initiationType: DICT
                        urgency: NORMAL
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-key-confirmed-accountid
      summary: Send a confirmed Pix Payment as a Transactional Customer using an accountId and key
      description: |-
        This endpoint must be used by transactional clients that wish to request a confirmed Pix Payment, passing an accountId and a DICT key. Since this endpoint creates a confirmed payment, there is no need to confirm afterwards. 

        Rules based on the transactionType value:

        |TransactionType|Property|Rule|
        |----------|:-------------|------|
        |TRANSFER|'vlcpAmount' and 'vldnAmount'|These properties cannot be inserted.|
        |CHANGE|'vlcpAmount' and 'vldnAmount'|These properties are required.|
        |CHANGE|'amount'|This property must be the sum of the 'vlcpAmount' and 'vldnAmount' properties.|
        |WITHDRAWAL|'vldnAmount'|This property is required.|
        |WITHDRAWAL|'vlcpAmount'|This property cannot be inserted.|
        |WITHDRAWAL|'amount'|This property must be the same of 'vldnAmount' property.|
        |WITHDRAWAL and CHANGE|'withdrawalAgentMode' and 'withdrawalServiceProvider'|These properties are required.|

        Rules based on the initiationType value:

        |InitiationType|Property|Rule|
        |----------|:-------------|------|
        |MANUAL or DICT|'transactionIdentification'|This property cannot be inserted.|
        |STATIC_QRCODE|'transactionIdentification'|This property is required and length must be up to 25 characters.|
        |DYNAMIC_QRCODE |'transactionIdentification'|This property is required and length must be between 26 and 35 characters.|
        |PAYMENT_INITIATOR|'taxIdPaymentInitiator'|This property is required and needs to be a CNPJ.|
        |PAYMENT_INITIATOR|'transactionIdentification'|This property is required, length must be up to 25 characters and needs to be from a STATIC_QRCODE.|

        Rules based on the paymentType value:

        |PaymentType|Property|Rule|
        |----------|:-------------|------|
        |SCHEDULED|'urgency'|This property will have NORMAL value.|
    parameters:
      - examples:
          Key example:
            value: fulano@gmail.com
        name: key
        description: The destination DICT key.
        schema:
          maxLength: 77
          type: string
        in: path
        required: true
      - examples:
          AccountIdExample:
            value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
        name: accountId
        description: The unique identifier for account.
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/{accountId}/initiate/{key}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantRequestDictKeyPayload'
            examples:
              Example without remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  paymentType: IMMEDIATE
                  transactionType: WITHDRAWAL
                  vldnAmount: '10.01'
              Example with remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  remittanceInformation: Informação para ser apresentada
                  paymentType: IMMEDIATE
                  transactionType: WITHDRAWAL
                  vldnAmount: '10.01'
        required: true
      tags: []
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentMerchantResponseEnvelope'
              examples:
                PixPaymentResponseKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
                      clientRequestId: 45143f4e-15ff-413d-808d-8837652ebdc6
                      createTimestamp: '2020-08-08T20:17:32.7971743+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:32.7971743+00:00'
                      entity: PixPayment
                      status: INITIATED
                      body:
                        amount: '10.01'
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: fulano@gmail.com
                          bank: '30306294'
                          branch: '20'
                          account: '416834'
                          name: Beltrano de Tal
                          taxId: '2310708'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808195101608910248
                        paymentType: IMMEDIATE
                        transactionType: TRANSFER
                        initiationType: DICT
                        urgency: HIGH
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-initiate-key-accountid
      summary: Initiate a Pix Payment as a Transactional Customer using an accountId and key
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment, passing an accountId and a DICT key. 

        Confirm transaction [here](#operation/pix-merchant-payment-key-confirm)

        Rules based on the transactionType value:

        |TransactionType|Property|Rule|
        |----------|:-------------|------|
        |TRANSFER|'vlcpAmount' and 'vldnAmount'|These properties cannot be inserted.|
        |CHANGE|'vlcpAmount' and 'vldnAmount'|These properties are required.|
        |CHANGE|'amount'|This property must be the sum of the 'vlcpAmount' and 'vldnAmount' properties.|
        |WITHDRAWAL|'vldnAmount'|This property is required.|
        |WITHDRAWAL|'vlcpAmount'|This property cannot be inserted.|
        |WITHDRAWAL|'amount'|This property must be the same of 'vldnAmount' property.|
        |WITHDRAWAL and CHANGE|'withdrawalAgentMode' and 'withdrawalServiceProvider'|These properties are required.|

        Rules based on the initiationType value:

        |InitiationType|Property|Rule|
        |----------|:-------------|------|
        |MANUAL or DICT|'transactionIdentification'|This property cannot be inserted.|
        |STATIC_QRCODE|'transactionIdentification'|This property is required and length must be up to 25 characters.|
        |DYNAMIC_QRCODE |'transactionIdentification'|This property is required and length must be between 26 and 35 characters.|
        |PAYMENT_INITIATOR|'taxIdPaymentInitiator'|This property is required and needs to be a CNPJ.|
        |PAYMENT_INITIATOR|'transactionIdentification'|This property is required, length must be up to 25 characters and needs to be from a STATIC_QRCODE.|

        Rules based on the paymentType value:

        |PaymentType|Property|Rule|
        |----------|:-------------|------|
        |SCHEDULED|'urgency'|This property will have NORMAL value. Otherwise, this property will have the HIGH value.|
    parameters:
      - examples:
          Key example:
            value: fulano@gmail.com
        name: key
        description: The destination DICT key.
        schema:
          maxLength: 77
          type: string
        in: path
        required: true
      - examples:
          AccountIdExample:
            value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
        name: accountId
        description: The unique identifier for account.
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/qrcode/confirmed:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantQrCodeConfirmedPayload'
        required: true
      tags:
        - Merchant
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentResponse'
              examples:
                PixPaymentResponseFullDictKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Credit example name
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: STATIC_QRCODE
                        initiationType: TRANSFER
                        urgency: NORMAL
                      tags:
                        - abc
                PixPaymentResponseDynamic:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: '20.01'
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: DYNAMIC_QRCODE
                        initiationType: TRANSFER
                        urgency: NORMAL
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-qrcode-confirmed
      summary: Send a confirmed Pix Payment as a Transactional Customer using an EMV string
      description: |-
        This endpoint must be used by transactional clients that wish to request a confirmed Pix Payment, passing an EMV string. Since this endpoint creates a confirmed payment, there is no need to confirm afterwards. The amount will be debited from your account marked as default. 

        The urgency of the PIX will be set to NORMAL. 

        The initiationType will be set to STATIC_QRCODE or DYNAMIC_QRCODE based on sent EMV. Or it will be set as PAYMENT_INITIATOR, if there is a value in the taxIdPaymentInitiator property.
  /pix/merchant/payment/qrcode/initiate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantQrCodeInitiatePayload'
        required: true
      tags: []
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentMerchantResponseEnvelope'
              examples:
                PixPaymentResponseKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: INITIATED
                      body:
                        amount: '10.01'
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808195101608910248
                        paymentType: IMMEDIATE
                        transactionType: STATIC_QRCODE
                        initiationType: TRANSFER
                        urgency: HIGH
                      tags:
                        - abc
                PixPaymentResponseDynamic:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: INITIATED
                      body:
                        amount: '10.01'
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808195101608910248
                        paymentType: IMMEDIATE
                        transactionType: DYNAMIC_QRCODE
                        initiationType: TRANSFER
                        urgency: HIGH
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-qrcode-initiate
      summary: Initiate a Pix Payment as a Transactional Customer using an EMV string
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment, passing an EMV string. The amount will be debited from your account marked as default. 

        Confirm transaction [here](#operation/pix-merchant-payment-key-confirm)

        The urgency of the PIX will be set to HIGH. 

        The value of property 'paymentType' will be set to IMMEDIATE. 

        The value of property 'initiationType' will be set to STATIC_QRCODE or DYNAMIC_QRCODE based on sent EMV. Or it will be set as PAYMENT_INITIATOR, if there is a value in the taxIdPaymentInitiator property.
  /pix/merchant/payment/{accountId}/qrcode/initiate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantQrCodeInitiatePayload'
        required: true
      tags: []
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentMerchantResponseEnvelope'
              examples:
                PixPaymentResponseKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: INITIATED
                      body:
                        amount: '10.01'
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808195101608910248
                        paymentType: IMMEDIATE
                        transactionType: TRANSFER
                        initiationType: STATIC_QRCODE
                        urgency: HIGH
                      tags:
                        - abc
                PixPaymentResponseDynamic:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: INITIATED
                      body:
                        amount: '10.01'
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808195101608910248
                        paymentType: IMMEDIATE
                        transactionType: TRANSFER
                        initiationType: DYNAMIC_QRCODE
                        urgency: HIGH
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-qrcode-initiate-account-id
      summary: Initiate a Pix Payment by Account Id as a Transactional Customer using an EMV string
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment, passing an accountId and an EMV string.

        Confirm transaction [here](#operation/pix-merchant-payment-key-confirm)

        The urgency of the PIX will be set to HIGH. 

        The value of property 'paymentType' will be set to IMMEDIATE. 

        The value of property 'initiationType' will be set to STATIC_QRCODE or DYNAMIC_QRCODE based on sent EMV. Or it will be set as PAYMENT_INITIATOR, if there is a value in the taxIdPaymentInitiator property.
    parameters:
      - examples:
          AccountIdExample:
            value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
        name: accountId
        description: The unique identifier for account.
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/{accountId}/qrcode/confirmed:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantQrCodeConfirmedPayload'
        required: true
      tags:
        - MerchantUsingAccountId
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentResponse'
              examples:
                PixPaymentResponseFullDictKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: credit@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Credit example name
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: TRANSFER
                        initiationType: STATIC_QRCODE
                        urgency: NORMAL
                      tags:
                        - abc
                PixPaymentResponseDynamic:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 20.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: credit@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Credit example name
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: TRANSFER
                        initiationType: DYNAMIC_QRCODE
                        urgency: NORMAL
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-qrcode-confirmed-account-id
      summary: Send a confirmed Pix Payment by Account Id as a Transactional Customer using an EMV string
      description: |-
        This endpoint must be used by transactional clients that wish to request a confirmed Pix Payment, passing an accountId and an EMV string. Since this endpoint creates a confirmed payment, there is no need to confirm afterwards. 

        The urgency of the PIX will be set to NORMAL. 

        The initiationType will be set to STATIC_QRCODE or DYNAMIC_QRCODE based on sent EMV. Or it will be set as PAYMENT_INITIATOR, if there is a value in the taxIdPaymentInitiator property.
    parameters:
      - examples:
          AccountIdExample:
            value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
        name: accountId
        description: The unique identifier for account.
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/reversal/inbound/end-to-end/{endToEndId}:
    get:
      tags:
        - MerchantReversalSearch
      parameters:
        - name: endToEndId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReversalInboundListResponse'
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-merchant-payment-reversal-inbound-endtoendid
      summary: Get a Pix Merchant Reversal Inbound by EndToEndId
      description: This method returns information about an inbound reversal transaction from an EndToEndId.
    parameters:
      - name: endToEndId
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/reversal/inbound/search/to-scroll:
    get:
      tags:
        - MerchantReversalSearch
      parameters:
        - name: tags
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReversalSearchResponse'
          description: The search response.
      security:
        - BaaSAuthorizer: []
      operationId: pix-payment-rev-in-se-to-scroll
      summary: Pix Payment Reversal Inbound search (only more then 10,000 hits)
      description: |-
        Use to search pix merchant payment reversal inbound transactions. (use this operation to page through more than 10,000 hits. For less, use the /pix/merchant/payment/reversal/inbound/search)

        After the search request, use scroll (/pix/merchant/payment/reversal/inbound/search/scroll) to request the next batch of results. The time between each request must be less than 2 minutes.
  /pix/merchant/payment/reversal/inbound/search/scroll:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScrollRequest'
      tags:
        - MerchantReversalSearch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReversalSearchResponse'
          description: The search response.
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-rev-in-se-scroll
      summary: Next batch of results (Pix Merchant Payment Reversal Inbound search)
      description: |-
        Retrieves the next batch of results of Pix Merchant Payment Reversal Inbound search (/pix/merchant/payment/reversal/inbound/search/to-scroll).

        The time between each request must be less than 2 minutes.

        The results that are returned from a scroll request reflect the state of the data at the time that the initial search request. Subsequent changes will only affect later search requests.
  /pix/merchant/payment/reversal/inbound/search:
    get:
      tags:
        - MerchantReversalSearch
      parameters:
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            start:
              value: '0'
          name: start
          description: 'The position of first returned item. Default: 0.'
          schema:
            type: integer
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - name: tags
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReversalSearchResponse'
              examples:
                Example PixPaymentReversalInbound:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      totalFound: 1
                      totalReturned: 1
                      startingFrom: 0
                      items:
                        - pactualId: 7bf2a93f-296e-42ac-a265-63a206121950
                          clientRequestId: D10000002202001011112s33445555AB
                          createTimestamp: '2020-01-01T00:00:00.5922967+00:00'
                          lastUpdateTimestamp: '2020-01-01T00:00:00.5922967+00:00'
                          entity: PixReversalInbound
                          status: CONFIRMED
                          body:
                            reason: MD06
                            amount: 0.01
                            originalEndToEndId: E0000000120200101112233445566778
                            originalPactualId: 75bd25bb-5fd7-4eb8-8e0b-271bac55c06c
                            returnIdentification: D00000002202001011112s33445555AB
                            movementId: '0000001'
                          tags: []
          description: The search response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-rev-in-search
      summary: Pix Merchant Payment Reversal Inbound search (max 10,000 hits)
      description: Use to search your pix payment reversal inbound. (you cannot page through more than 10,000 hits)
  /pix/merchant/payment/reversal/inbound/return-identification/{returnIdentification}:
    get:
      tags:
        - MerchantReversalSearch
      parameters:
        - name: returnIdentification
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReversalInboundEnvelopeResponse'
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-merchant-payment-reversal-inbound-return-identification
      summary: Get a Pix Merchant Reversal Inbound by ReturnIdentification
      description: This method returns information about an inbound reversal transaction from an ReturnIdentification.
    parameters:
      - name: returnIdentification
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/end-to-end/{endToEndId}:
    get:
      tags:
        - MerchantPaymentSearch
      parameters:
        - name: endToEndId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentGetResponse'
              examples:
                PixPaymentOutExample:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 2b5ba1e4-1680-4fac-a202-3b391ec36332
                      clientRequestId: 2e84fd53-0414-4888-b0fb-0f91f0d49fd4
                      createTimestamp: '2021-10-14T15:00:30.9478314+00:00'
                      lastUpdateTimestamp: '2021-10-18T15:00:39.5724435+00:00'
                      entity: PixPayment
                      status: CONFIRMED
                      body:
                        amount: 2
                        debitParty:
                          bank: '12345678'
                          branch: '30'
                          account: '1234567'
                          name: BTG TESTE LTDA
                          taxId: '14296602000190'
                          personType: LEGAL_PERSON
                          accountType: CACC
                        creditParty:
                          bank: '12345677'
                          branch: '30'
                          account: '1234577'
                          name: BTG TESTE INTERNO LTDA
                          taxId: '12345678909876'
                          personType: LEGAL_PERSON
                          accountType: CACC
                        movementId: '27753019'
                        movementIds:
                          - '27753019'
                        endToEndId: E1234567820211014150001417863040
                        paymentType: IMMEDIATE
                        initiationType: MANUAL
                        transactionType: TRANSFER
                        urgency: HIGH
                      tags: []
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-merchant-payment-endtoendid
      summary: Get a Pix Merchant Payment Inbound by EndToEndId
      description: This method returns information about a Pix Payment.
    parameters:
      - name: endToEndId
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/end-to-end/in-out/{endToEndId}:
    get:
      tags:
        - MerchantPaymentSearch
      parameters:
        - name: endToEndId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentGetResponse'
              examples:
                PixPaymentInExample:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 2b5ba1e4-1680-4fac-a202-3b391ec36332
                      clientRequestId: 2e84fd53-0414-4888-b0fb-0f91f0d49fd4
                      createTimestamp: '2021-10-14T15:00:30.9478314+00:00'
                      lastUpdateTimestamp: '2021-10-18T15:00:39.5724435+00:00'
                      entity: PixPaymentInbound
                      status: CONFIRMED
                      body:
                        amount: 2
                        debitParty:
                          bank: '12345678'
                          branch: '30'
                          account: '1234567'
                          name: BTG TESTE LTDA
                          taxId: '14296602000190'
                          personType: LEGAL_PERSON
                          accountType: CACC
                        creditParty:
                          bank: '12345677'
                          branch: '30'
                          account: '1234577'
                          name: BTG TESTE INTERNO LTDA
                          taxId: '12345678909876'
                          personType: LEGAL_PERSON
                          accountType: CACC
                        movementId: '27753019'
                        movementIds:
                          - '27753019'
                        endToEndId: E1234567820211014150001417863040
                        paymentType: IMMEDIATE
                        initiationType: MANUAL
                        transactionType: TRANSFER
                        urgency: HIGH
                      tags: []
                PixPaymentOutExample:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 2b5ba1e4-1680-4fac-a202-3b391ec36332
                      clientRequestId: 2e84fd53-0414-4888-b0fb-0f91f0d49fd4
                      createTimestamp: '2021-10-14T15:00:30.9478314+00:00'
                      lastUpdateTimestamp: '2021-10-18T15:00:39.5724435+00:00'
                      entity: PixPayment
                      status: CONFIRMED
                      body:
                        amount: 2
                        debitParty:
                          bank: '12345678'
                          branch: '30'
                          account: '1234567'
                          name: BTG TESTE LTDA
                          taxId: '14296602000190'
                          personType: LEGAL_PERSON
                          accountType: CACC
                        creditParty:
                          bank: '12345677'
                          branch: '30'
                          account: '1234577'
                          name: BTG TESTE INTERNO LTDA
                          taxId: '12345678909876'
                          personType: LEGAL_PERSON
                          accountType: CACC
                        movementId: '27753019'
                        movementIds:
                          - '27753019'
                        endToEndId: E1234567820211014150001417863040
                        paymentType: IMMEDIATE
                        initiationType: MANUAL
                        transactionType: TRANSFER
                        urgency: HIGH
                      tags: []
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-merchant-payment-in-out-endtoendid
      summary: Get a Pix Merchant Payment In/Out by EndToEndId
      description: This method returns informations about a Pix Payment Inbound or Pix Payment.
    parameters:
      - name: endToEndId
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/search:
    get:
      tags:
        - MerchantPaymentSearch
      parameters:
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            start:
              value: '0'
          name: start
          description: 'The position of first returned item. Default: 0.'
          schema:
            type: integer
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - name: tags
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentSearchResponse'
              examples:
                PixPaymentSearchResponse:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      totalFound: 1
                      totalReturned: 1
                      startingFrom: 0
                      items:
                        - pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                          clientRequestId: bc18f2f4-57b5-46cc-8c5e-4e4287dbe878
                          createTimestamp: '2020-01-01T00:00:00.7807113+00:00'
                          lastUpdateTimestamp: '2020-01-01T00:00:00.7807113+00:00'
                          entity: PixPayment
                          status: CONFIRMED
                          body:
                            amount: 0.01
                            debitParty:
                              bank: '12345678'
                              branch: '10'
                              account: '12340'
                              name: Client Test
                              taxId: '11122233344'
                              personType: LEGAL_PERSON
                              accountType: CACC
                            creditParty:
                              key: test@test.com
                              bank: '87654321'
                              branch: '10'
                              account: '43210'
                              name: User Test
                              taxId: '44433322211'
                              personType: NATURAL_PERSON
                              accountType: CACC
                            movementId: '0000001'
                            endToEndId: E00038166201907261559y6j6mt9l0pi
                          tags:
                            - tag_test
          description: The search response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-search
      summary: Pix Merchant Payment search (max 10,000 hits)
      description: Use to search your pix merchant payment. (you cannot page through more than 10,000 hits. To page through more hits, use the /pix/merchant/payment/search/to-scroll.)
  /pix/merchant/payment/search/scroll:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScrollRequest'
      tags:
        - MerchantPaymentSearch
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentSearchResponse'
          description: The search response.
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-search-scroll
      summary: Next batch of results (Pix Payment search)
      description: |-
        Retrieves the next batch of results of Pix Merchant Payment search (/pix/merchant/payment/search/to-scroll).

        The time between each request must be less than 2 minutes.

        The results that are returned from a scroll request reflect the state of the data at the time that the initial search request. Subsequent changes will only affect later search requests.
  /pix/merchant/payment/search/to-scroll:
    get:
      tags:
        - MerchantPaymentSearch
      parameters:
        - name: tags
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentSearchResponse'
          description: The search response.
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-search-to-scroll
      summary: Pix Merchant Payment search (only more then 10,000 hits)
      description: |-
        Use to search pix merchant payment transactions. (use this operation to page through more than 10,000 hits. For less, use the /pix/merchant/payment/search)

        After the search request, use scroll (/pix/merchant/payment/search/scroll) to request the next batch of results. The time between each request must be less than 2 minutes.
  /pix/merchant/payment/transaction-identification/{transactionIdentification}:
    get:
      tags:
        - MerchantPaymentSearch
      parameters:
        - name: transactionIdentification
          description: The transactionIdentification representation of a collection that was paid.
          schema:
            type: string
          in: path
          required: true
        - examples:
            In:
              value: In
            Out:
              value: Out
          name: flow
          description: Used to set wich payment flow is returned
          schema: {}
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentGetResponse'
              examples:
                Example:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: fulano@gmail.com
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                      tags:
                        - abc
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-merchant-payment-transactionidentification
      summary: Get a Pix Merchant Payment by transactionIdentification
      description: This method returns the information regarding a submitted pix payment.
    parameters:
      - name: transactionIdentification
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/pactual-id/{pactualId}:
    get:
      tags:
        - MerchantPaymentSearch
      parameters:
        - name: pactualId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentGetResponse'
              examples:
                Example:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: fulano@gmail.com
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                      tags:
                        - abc
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-merchant-pactual-id-payment
      summary: Get a Pix Merchant Payment
      description: This method returns the information regarding a submitted pix payment.
  /pix/merchant/payment/reversal/inbound/{pactualId}:
    get:
      tags:
        - MerchantReversalSearch
      parameters:
        - name: pactualId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReversalInboundEnvelopeResponse'
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-merchant-payment-reversal-inbound-pactualid
      summary: Get a Pix Merchant Reversal Inbound by PactualId
      description: This method returns information about an inbound reversal transaction from an PactualId.
    parameters:
      - name: pactualId
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/client-request-id/{clientRequestId}:
    get:
      tags:
        - MerchantPaymentSearch
      parameters:
        - name: clientRequestId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentGetResponse'
              examples:
                Example:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: fulano@gmail.com
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                      tags:
                        - abc
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-merchant-payment-clientRequestId
      summary: Get a Pix Merchant Payment by ClientRequestId
      description: This method returns the information regarding a submitted pix payment.
    parameters:
      - name: clientRequestId
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/reversal/return-identification/{returnIdentification}:
    get:
      tags:
        - MerchantReversalSearch
      parameters:
        - name: returnIdentification
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReversalEnvelopeResponse'
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-merchant-payment-reversal-return-identification
      summary: Get a Pix Merchant Reversal by Return Identification
      description: This method returns the information regarding a submitted pix reversal.
    parameters:
      - name: returnIdentification
        schema:
          type: string
        in: path
        required: true
  /pix/brcode/static/{pactualId}:
    get:
      tags:
        - StaticBRCode
      parameters:
        - examples:
            Guid:
              value: 4a801b0d-5b5f-4fa0-96ca-cf1a7cfad73d
          name: pactualId
          description: The resource's unique identificator on BTG Pactual systems.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixStaticBRCodeResponse'
              examples:
                PixStaticBRCode:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      payloadFormatIndicator: '01'
                      merchantAccountInformation:
                        gui: br.gov.bcb.pix
                        key: fulano@gmail.com
                        additionalInformation: Obrigado por comprar
                        withdrawalServiceProvider: '12345678'
                      merchantCategoryCode: 5842
                      transactionCurrency: 986
                      transactionAmount: 10.55
                      countryCode: BR
                      merchantName: Pipocas RJ
                      merchantCity: Rio de Janeiro
                      postalCode: '20770000'
                      transactionIdentification: YUbBYsRdtUyD2HG4AlZzHQ
                      emvqrcps: 00020126620014br.gov.bcb.pix0116fulano@gmail.com0220Obrigado por comprar520458425303986540510.555802BR5910Pipocas RJ6014Rio de Janeiro61082077000062260522YUbBYsRdtUyD2HG4AlZzHQ6304D8F1
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      security:
        - BaaSAuthorizer: []
      operationId: pix-brcode-static-pactualId
      summary: Get PIX static BR code information
      description: This endpoint returns the PIX static BR code information of the given pactualId passed as a parameter.
  /pix/brcode/static/{pactualId}/base64:
    get:
      tags:
        - StaticBRCode
      parameters:
        - examples:
            Guid:
              value: 4a801b0d-5b5f-4fa0-96ca-cf1a7cfad73d
          name: pactualId
          description: The resource's unique identificator on BTG Pactual systems.
          schema:
            type: string
          in: path
          required: true
        - examples:
            pixelsPerModule:
              value: '20'
          name: pixelsPerModule
          description: |-
            The number of pixels to use per QRCode module.
            Default: 20
          schema:
            type: integer
          in: query
          required: false
        - name: imageType
          description: 'The image type: Gif, Jpeg or Png. Default: Png'
          schema:
            enum:
              - Gif
              - Jpeg
              - Png
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-brcode-static-pactualId-base64
      summary: Get PIX static BR code image base64 contents
      description: This endpoint returns the static BR code image base64 contents.
  /pix/brcode/static/{pactualId}/emv:
    get:
      tags:
        - StaticBRCode
      parameters:
        - examples:
            Guid:
              value: 4a801b0d-5b5f-4fa0-96ca-cf1a7cfad73d
          name: pactualId
          description: The resource's unique identificator on BTG Pactual systems.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
              examples:
                EMVQRCPS:
                  value: 00020126620014br.gov.bcb.pix0116fulano@gmail.com0220Obrigado por comprar520458425303986540510.505802BR5910Pipocas RJ6014Rio de Janeiro61082077000062260522LZmIC7IyvUChxJhe5y/jDw6304A4DF
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-brcode-static-pactualId-emv
      summary: Get PIX static BR code EMVQRCPS content
      description: This endpoint returns the static BR code instance EMVQRCPS contents.
  /pix/brcode/static/{pactualId}/svg:
    get:
      tags:
        - StaticBRCode
      parameters:
        - examples:
            Guid:
              value: 4a801b0d-5b5f-4fa0-96ca-cf1a7cfad73d
          name: pactualId
          description: The resource's unique identificator on BTG Pactual systems.
          schema:
            type: string
          in: path
          required: true
        - examples:
            pixelsPerModule:
              value: '20'
          name: pixelsPerModule
          description: |-
            The number of pixels to use per QRCode module.
            Default: 20
          schema:
            type: integer
          in: query
          required: false
      responses:
        '200':
          content:
            image/svg+xml:
              schema:
                type: string
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-brcode-static-pactualId-svg
      summary: Get PIX static BR code svg image
      description: This endpoint returns the static BR code svg image.
  /pix/brcode/static/search:
    get:
      tags:
        - StaticBRCode
      parameters:
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            start:
              value: '0'
          name: start
          description: 'The position of first returned item. Default: 0.'
          schema:
            type: integer
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - name: tags
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixStaticBRCodeSearchResponse'
              examples:
                PixStaticBRCodeSearchResponse:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      totalFound: 1
                      totalReturned: 1
                      startingFrom: 0
                      items:
                        - pactualId: 2363ceb3-926e-4129-a561-a464b9124fe2
                          clientRequestId: 4a801b0d-5b5f-4fa0-96ca-cf1a7cfad73d
                          createTimestamp: '2020-07-20T15:07:46.461Z'
                          lastUpdateTimestamp: '2020-07-20T15:07:46.461Z'
                          entity: StaticBRCode
                          status: CREATED
                          body:
                            payloadFormatIndicator: '01'
                            merchantAccountInformation:
                              key: mvleandro@gmail.com
                              additionalInformation: Obrigado por comprar
                              withdrawalServiceProvider: '12345678'
                            merchantCategoryCode: 5499
                            transactionCurrency: 986
                            transactionAmount: 10.25
                            countryCode: BR
                            merchantName: Capas BR
                            merchantCity: Rio de Janeiro
                            postalCode: '20200300'
                            transactionIdentification: s85jI26SKUGlYaRkuRJP4g
                            emvqrcps: 00020126650014br.gov.bcb.pix0119mvleandro@gmail.com0220Obrigado por comprar520454995303986540510.255802BR5908Capas BR6014Rio de Janeiro61082020030062260522s85jI26SKUGlYaRkuRJP4g63044A32
                          tags:
                            - capaiphone7
          description: The search response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-brcode-static-search
      summary: Static BRCode search
      description: Use to search your generated Static BRCodes.
  /pix/brcode/static:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixStaticBRCodeCreateRequest'
            examples:
              Complete:
                value:
                  clientRequestId: bc0bc832-ca05-425e-95d4-a1bf48ada1cc
                  transactionIdentification: churrasco
                  key: e9df7396-21cc-4e39-b154-77109689646b
                  amount: '50.55'
                  additionalInformation: Obrigado pela presença.
                  merchant:
                    name: Fulano de Tal
                    city: Rio de Janeiro
                    postalCode: '20100200'
                    merchantCategoryCode: 5812
              Complete without value:
                value:
                  clientRequestId: bc0bc832-ca05-425e-95d4-a1bf48ada1cc
                  transactionIdentification: churrasco
                  key: e9df7396-21cc-4e39-b154-77109689646b
                  additionalInformation: Obrigado pela presença.
                  merchant:
                    name: Fulano de Tal
                    city: Rio de Janeiro
                    postalCode: '20100200'
                    merchantCategoryCode: 5812
              Short without value:
                value:
                  clientRequestId: bc0bc832-ca05-425e-95d4-a1bf48ada1cc
                  key: e9df7396-21cc-4e39-b154-77109689646b
                  merchant:
                    name: Fulano de Tal
                    city: Rio de Janeiro
              Short with value:
                value:
                  clientRequestId: bc0bc832-ca05-425e-95d4-a1bf48ada1cc
                  key: e9df7396-21cc-4e39-b154-77109689646b
                  amount: '50.55'
                  merchant:
                    name: Fulano de Tal
                    city: Rio de Janeiro
              WithdrawalServiceProvider:
                value:
                  clientRequestId: bc0bc832-ca05-425e-95d4-a1bf48ada1cc
                  transactionIdentification: churrasco
                  key: e9df7396-21cc-4e39-b154-77109689646b
                  amount: '50.55'
                  additionalInformation: Obrigado pela presença.
                  merchant:
                    name: Fulano de Tal
                    city: Rio de Janeiro
                    postalCode: '20100200'
                    merchantCategoryCode: 5812
                  withdrawalServiceProvider: '12345678'
        required: true
      tags:
        - StaticBRCode
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixStaticBRCodeResponse'
              examples:
                PixStaticBRCodeResponseExample:
                  value:
                    version: 1.0.0
                    status: 201
                    body:
                      pactualId: e329d16c-7104-493c-a698-de08da574bae
                      clientRequestId: bc0bc832-ca05-425e-95d4-a1bf48ada1cc
                      createTimestamp: '2020-10-16T21:24:11.2917507+00:00'
                      lastUpdateTimestamp: '2020-10-16T21:24:11.2917507+00:00'
                      entity: StaticBRCode
                      status: CREATED
                      body:
                        payloadFormatIndicator: '01'
                        merchantAccountInformation:
                          key: e9df7396-21cc-4e39-b154-77109689646b
                          additionalInformation: Obrigado pela presença.
                          withdrawalServiceProvider: '12345678'
                        merchantCategoryCode: 5812
                        transactionCurrency: 986
                        transactionAmount: 50.55
                        countryCode: BR
                        merchantName: Fulano de Tal
                        merchantCity: Rio de Janeiro
                        postalCode: '20100200'
                        transactionIdentification: churrasco
                        emvqrcps: 00020126850014br.gov.bcb.pix0136e9df7396-21cc-4e39-b154-77109689646b0223Obrigado pela presença.520458125303986540550.555802BR5913Fulano de Tal6014Rio de Janeiro61082010020062130509churrasco6304CDA5
                      tags: []
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      security:
        - BaaSAuthorizer: []
      operationId: pix-brcode-static
      summary: Create a new Static BR code
      description: Create a new Static BR code.
  /pix/merchant/collection/location/{txId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCollectionLocationCreateRequest'
            examples:
              "Collection Change\t":
                value:
                  calendar:
                    expiration: 86400
                  debtor:
                    cpf: '11122233344'
                    name: Teste
                  amount:
                    original: '15.23'
                    changeType: 0
                    change:
                      vlcpAmount: '5.23'
                      vldnAmount: '10.00'
                  key: teste@teste.com
                  payerQuestion: Pergunta de teste?
                  additionalInformation:
                    - key: chave
                      value: valor
              "Collection Withdrawal\t":
                value:
                  calendar:
                    expiration: 86400
                  debtor:
                    cpf: '11122233344'
                    name: Teste
                  amount:
                    original: '0.00'
                    changeType: 0
                    withdrawal:
                      vldnAmount: '10.00'
                      changeType: 0
                      agentMode: AGPSS
                      withdrawalServiceProvider: '12345678'
                  key: teste@teste.com
                  payerQuestion: Pergunta de teste?
                  additionalInformation:
                    - key: chave
                      value: valor
              Collection:
                value:
                  calendar:
                    expiration: 86400
                  debtor:
                    cpf: '11122233344'
                    name: Teste
                  amount:
                    original: '1.23'
                  key: teste@teste.com
                  payerQuestion: Pergunta de teste?
                  additionalInformation:
                    - key: chave
                      value: valor
        required: true
      parameters:
        - examples:
            txId:
              value: "5a028e0a5fe1497c97b4c0743bcdd78f\t\r\n"
          name: txId
          description: The unique transaction identification given by the client side.
          schema:
            type: string
          in: path
          required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobBodyResponse'
              examples:
                Collection with location:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
                      clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
                      createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      entity: PixImmediateCollection
                      status: ACTIVE
                      body:
                        revision: 0
                        calendar:
                          expiration: 86400
                        location: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
                        debtor:
                          cpf: '11122233344'
                          name: Teste
                        loc:
                          pactualId: 2be3aafe-9afa-4b0b-913f-073dc0060302
                          clientRequestId: 30752427285f416d99c264b8b7dd64d4
                          createTimestamp: '2021-01-01T00:00:00.5158219+00:00'
                          lastUpdateTimestamp: '2021-01-01T00:00:00.5158219+00:00'
                          entity: QrCodeLocation
                          status: CREATED
                          body:
                            merchant:
                              name: Teste
                              city: Teste
                              postalCode: '12345678'
                              merchantCategoryCode: 0
                            url: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
                            emv: 00020101021226930014br.gov.bcb.pix2571api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc00603025204000053039865802BR5905Teste6005Teste61082000000062360532cabe4117ead3455dbfab4f7400cbc8b063042BEF
                            type: COB
                            id: 798
                          tags: []
                        amount:
                          original: '1.22'
                          changeType: 0
                        key: teste@teste.com.br
                        payerQuestion: Pergunta de teste
                        additionalInformation:
                          - key: chave
                            value: valor
                      tags:
                        - tag_1
                        - tag_2
                Collection Change:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
                      clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
                      createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      entity: PixImmediateCollection
                      status: ACTIVE
                      body:
                        revision: 0
                        calendar:
                          expiration: 86400
                        debtor:
                          cpf: '11122233344'
                          name: Teste
                        amount:
                          original: '15.23'
                          changeType: 0
                          change:
                            changeType: 0
                            vlcpAmount: '5.23'
                            vldnAmount: '10.00'
                        key: teste@teste.com.br
                        payerQuestion: Pergunta de teste
                        additionalInformation:
                          - key: chave
                            value: valor
                      tags:
                        - tag_1
                        - tag_2
                "Collection Withdrawal\t":
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
                      clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
                      createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      entity: PixImmediateCollection
                      status: ACTIVE
                      body:
                        revision: 0
                        calendar:
                          expiration: 86400
                        debtor:
                          cpf: '11122233344'
                          name: Teste
                        amount:
                          original: '0.00'
                          changeType: 0
                          withdrawal:
                            changeType: 0
                            vldnAmount: '10.00'
                            agentMode: AGPSS
                            withdrawalServiceProvider: '12345678'
                        key: teste@teste.com.br
                        payerQuestion: Pergunta de teste
                        additionalInformation:
                          - key: chave
                            value: valor
                      tags:
                        - tag_1
                        - tag_2
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      security:
        - BaaSAuthorizer: []
      operationId: pix-collection-location
      summary: Create an immediate collection without location informations
      description: Use this endpoint to create a QRCode without sending location id (in this endpoint, it is not necessary to create a location before to create a collection).
    parameters:
      - name: txId
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/collection-due-date/location/{txId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCollectionDueDateLocationCreateRequest'
            examples:
              pix-collection-due-date-request:
                value:
                  calendar:
                    dueDate: '2021-12-25'
                    expirationAfterPayment: 10
                  debtor:
                    cpf: '12345678901'
                    name: jose da silva
                    email: user@example.com
                    publicArea: Rua Bela Cintra
                    city: Sao Paulo
                    state: SP
                    postalCode: '12345678'
                  amount:
                    original: '100.00'
                    fine:
                      modality: FIXED_VALUE
                      amountPerc: '10.00'
                    interest:
                      modality: VALUE_WORKING_DAYS
                      amountPerc: '1.00'
                    abatement:
                      modality: FIXED_VALUE
                      amountPerc: '2.00'
                    discount:
                      modality: AMOUNT_ADVANCE_BUSINESS_DAY
                      amountPerc: '1.00'
                  key: '+552197993512412'
                  payerQuestion: string
                  additionalInformation:
                    - key: string
                      value: string
              pix-collection-due-date-request-discount:
                value:
                  calendar:
                    dueDate: '2021-12-25'
                    expirationAfterPayment: 10
                  debtor:
                    cpf: '12345678901'
                    name: jose da silva
                    email: user@example.com
                    publicArea: Rua Bela Cintra
                    city: Sao Paulo
                    state: SP
                    postalCode: '12345678'
                  amount:
                    original: '100.00'
                    fine:
                      modality: FIXED_VALUE
                      amountPerc: '10.00'
                    interest:
                      modality: VALUE_WORKING_DAYS
                      amountPerc: '1.00'
                    abatement:
                      modality: FIXED_VALUE
                      amountPerc: '2.00'
                    discount:
                      modality: FIXED_VALUE_UNTIL_THE_DATES_INFORMED
                      discountDateFixed:
                        - date: '2021-06-26'
                          amountPerc: '10.00'
                  key: '+552197993512412'
                  payerQuestion: string
                  additionalInformation:
                    - key: string
                      value: string
        required: true
      parameters:
        - examples:
            txId:
              value: "5a028e0a5fe1497c97b4c0743bcdd78f\t\r\n"
          name: txId
          description: "The unique transaction identification given by the client side.\r\n"
          schema:
            type: string
          in: path
          required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCollectionDueDateResponseEnvelope'
              examples:
                Collection with location:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
                      clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
                      createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      entity: PixImmediateCollection
                      status: ACTIVE
                      body:
                        revision: 0
                        calendar:
                          expiration: 86400
                        location: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
                        debtor:
                          cpf: '11122233344'
                          name: Teste
                        loc:
                          pactualId: 2be3aafe-9afa-4b0b-913f-073dc0060302
                          clientRequestId: 30752427285f416d99c264b8b7dd64d4
                          createTimestamp: '2021-01-01T00:00:00.5158219+00:00'
                          lastUpdateTimestamp: '2021-01-01T00:00:00.5158219+00:00'
                          entity: QrCodeLocation
                          status: CREATED
                          body:
                            merchant:
                              name: Teste
                              city: Teste
                              postalCode: '12345678'
                              merchantCategoryCode: 0
                            url: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
                            emv: 00020101021226930014br.gov.bcb.pix2571api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc00603025204000053039865802BR5905Teste6005Teste61082000000062360532cabe4117ead3455dbfab4f7400cbc8b063042BEF
                            type: COB
                            id: 798
                          tags: []
                        amount:
                          original: '1.22'
                          changeType: 0
                        key: teste@teste.com.br
                        payerQuestion: Pergunta de teste
                        additionalInformation:
                          - key: chave
                            value: valor
                      tags:
                        - tag_1
                        - tag_2
                Collection Change:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
                      clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
                      createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      entity: PixImmediateCollection
                      status: ACTIVE
                      body:
                        revision: 0
                        calendar:
                          expiration: 86400
                        debtor:
                          cpf: '11122233344'
                          name: Teste
                        amount:
                          original: '15.23'
                          changeType: 0
                          change:
                            changeType: 0
                            vlcpAmount: '5.23'
                            vldnAmount: '10.00'
                        key: teste@teste.com.br
                        payerQuestion: Pergunta de teste
                        additionalInformation:
                          - key: chave
                            value: valor
                      tags:
                        - tag_1
                        - tag_2
                "Collection Withdrawal\t":
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
                      clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
                      createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
                      entity: PixImmediateCollection
                      status: ACTIVE
                      body:
                        revision: 0
                        calendar:
                          expiration: 86400
                        debtor:
                          cpf: '11122233344'
                          name: Teste
                        amount:
                          original: '0.00'
                          changeType: 0
                          withdrawal:
                            changeType: 0
                            vldnAmount: '10.00'
                            agentMode: AGPSS
                            withdrawalServiceProvider: '12345678'
                        key: teste@teste.com.br
                        payerQuestion: Pergunta de teste
                        additionalInformation:
                          - key: chave
                            value: valor
                      tags:
                        - tag_1
                        - tag_2
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      security:
        - BaaSAuthorizer: []
      operationId: pix-collection-due-date-location
      summary: Create an due date collection without location informations
      description: Use this endpoint to create a due date collection without sending location id (in this endpoint, it is not necessary to create a location before to create a collection).
    parameters:
      - name: txId
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/customer:
    get:
      parameters:
        - name: limit
          description: The maximum quantity of items that will be returned.
          schema:
            default: 20
            type: integer
          in: query
        - name: page
          description: The page that the list will be started.
          schema:
            default: 1
            type: integer
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCustomerListResponse'
              examples:
                List Merchant customer:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      - merchantCustomerId: string
                        name: string
                        taxId: string
                        createTimestamp: string
                        lastUpdateTimestamp: string
                        status: string
                        additionalData: string
          description: List of Dict Hub Merchant Customer informations.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: merchant-customer-list
      summary: List  merchant customers
      description: Get a list of merchant customer informations.
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCustomerCreateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCustomerCreateResponse'
              examples:
                PixDICTClaimResponse:
                  value:
                    version: 1.0.0
                    status: 201
                    body:
                      merchantCustomerId: string
                      name: string
                      taxId: string
                      createTimestamp: string
                      lastUpdateTimestamp: string
                      status: string
                      additionalData:
                        - string
                        - string
          description: The successful response with the created Dict Hub Merchant Customer.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      security:
        - BaaSAuthorizer: []
      operationId: merchant-customer-create
      summary: Create a new merchant customer entry
      description: Endpoint that create a new merchant customer identification.
  /pix/merchant/customer/{merchantCustomerId}:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCustomerCreateResponse'
              examples:
                GetMerchantCustomer:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      merchantCustomerId: string
                      name: string
                      taxId: string
                      createTimestamp: string
                      lastUpdateTimestamp: string
                      status: string
                      additionalData: string
          description: The Dict Hub Merchant Customer informations.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: merchant-customer-get-id
      summary: Get merchant customer informations
      description: Get a merchant customer information by id.
    delete:
      responses:
        '204':
          description: NoContent Response
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: merchant-customer-delete-id
      summary: Delete Merchant Customer
      description: Delete a merchant customer by id.
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MerchantCustomerUpdateRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCustomerCreateResponse'
          description: The merchant customer informations.
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The merchant customer informations.
        '401':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The merchant customer informations.
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The merchant customer informations.
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The merchant customer informations.
      security:
        - BaaSAuthorizer: []
      operationId: merchant-customer-update-id
      summary: Update Merchant Customer
      description: Update a merchant customer by id.
    parameters:
      - name: merchantCustomerId
        description: The unique id that identify the merchant customer
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/customer/tax-id/{taxId}:
    get:
      parameters:
        - name: limit
          description: The maximum quantity of items that will be returned.
          schema:
            default: 20
            type: integer
          in: query
        - name: page
          description: The page that the list will be started.
          schema:
            default: 1
            type: integer
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MerchantCustomerListResponse'
              examples:
                List Merchant customer:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      - merchantCustomerId: string
                        name: string
                        taxId: string
                        createTimestamp: string
                        lastUpdateTimestamp: string
                        status: string
                        additionalData: string
          description: List of Dict Hub Merchant Customer informations.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: merchant-customer-list-taxId
      summary: List  Merchant Customer by taxId
      description: Get a list of merchant customer informations by taxId
    parameters:
      - name: taxId
        description: The merchant customer TaxId.
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/limit-validator/payment:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantLimitValidatorRequestPayload'
        required: true
      tags:
        - MerchantLimitValidator
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentLimitValidatorResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-limit-validator
      summary: Send a Pix Payment Limit Validator as a Transactional Customer
      description: This endpoint must be used by transactional clients that wish to request a Pix Payment passing through a limit validator. The amount will be debited from your account marked as default.
  /pix/merchant/limit-validator/payment/initiate/{key}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantLimitValidatorInitiateRequest'
        required: true
      tags:
        - MerchantLimitValidator
      parameters:
        - examples:
            "Key example\t":
              value: "fulano@gmail.com\t\r\n"
          name: key
          description: "The destination DICT key.\r\n"
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentLimitValidatorResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-limit-validator-initiate-key
      summary: Initiate a Pix Payment Limit Validator using key
      description: This endpoint must be used by transactional clients that wish to request a Pix Payment passing through a limit validator. The amount will be debited from your account marked as default.
  /pix/merchant/limit-validator/payment/confirm/{pactualId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantConfirmRequest'
      tags:
        - MerchantLimitValidator
      parameters:
        - examples:
            PactualIdExample:
              value: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
          name: pactualId
          description: The initiated transaction's pactualId.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentResponse'
              examples:
                PixPaymentResponseFullDictKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                      tags:
                        - abc
          description: Sucessful response.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-limit-validator-key-confirm
      summary: Confirm a Pix Payment Limit Validator started by key
      description: |-
        This endpoint must be used by transactional clients that wish to confirm an existent Pix Payment, passing your pactualId.

        > This endpoint must not be used by Pix Indirect Participants.
  /pix-api/v2.x/cob/abs/{txid}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCobLocationSolicitadaV2X'
        required: true
      tags:
        - PixCobV2.x
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobLocationGeradaV2X'
          description: Abstracted debt collection created
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: post-pix-api-cob-abstracted-location
      summary: Create abstracted location debt collection V2.x
      description: Endpoint to create an abstracted debt collection. In this endpoint there is no need to create a location beforehand.
    parameters:
      - name: txid
        schema:
          $ref: '#/components/schemas/TxId'
        in: path
        required: true
  /pix-api/v2.x/cobv/abs/{txid}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixBacenCobLocationDueDateCreateRequest'
            examples:
              Example:
                value:
                  calendario:
                    dataDeVencimento: '2021-12-16'
                    validadeAposVencimento: 0
                  devedor:
                    cpf: '12345678901'
                    nome: jose da silva
                  valor:
                    original: '122.33'
                    multa:
                      modalidade: 1
                      valorPerc: '1.00'
                    juros:
                      modalidade: 8
                      valorPerc: '1.00'
                    abatimento:
                      modalidade: 1
                      valorPerc: '20.00'
                    desconto:
                      modalidade: 2
                      descontoDataFixa:
                        - data: '2021-10-16'
                          valorPerc: '20.00'
                        - data: '2021-10-16'
                          valorPerc: '20.00'
                        - data: '2021-10-16'
                          valorPerc: '20.00'
                  chave: '+5521979935124'
                  solicitacaoPagador: string
                  infoAdicionais:
                    - nome: string
                      valor: string
        required: true
      tags:
        - PixBacenCobDueDateV2.x
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixBacenCobLocationDueDateResponse'
              examples:
                Example:
                  value:
                    calendario:
                      dataDeVencimento: '2021-12-16'
                      validadeAposVencimento: 0
                    loc:
                      criacao: '2021-01-12T15:08:31.849Z'
                      id: 100
                      location: api.dev.developer.btgpactual.com/qr/v2/cobv/ce8afe6f2a4a414e8b03d769c609d132
                      tipoCob: COBV
                      pactualId: dd8e783e-f9aa-4b79-b555-d7096b2840c1
                    devedor:
                      cpf: '12345678901'
                      nome: jose da silva
                    valor:
                      original: '122.33'
                      multa:
                        modalidade: 1
                        valorPerc: '1.00'
                      juros:
                        modalidade: 8
                        valorPerc: '1.00'
                      abatimento:
                        modalidade: 1
                        valorPerc: '20.00'
                      desconto:
                        modalidade: 2
                        descontoDataFixa:
                          - data: '2021-10-16'
                            valorPerc: '20.00'
                          - data: '2021-10-16'
                            valorPerc: '20.00'
                          - data: '2021-10-16'
                            valorPerc: '20.00'
                    chave: '+5521979935124'
                    solicitacaoPagador: string
                    infoAdicionais:
                      - nome: string
                        valor: string
          description: Abstracted debt collection due date data.
        '400':
          $ref: '#/components/responses/BacenBadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: post-pix-api-bacen-abstracted-location-cobv-txid
      summary: Create abstracted location debt collection due date V2.x
      description: Endpoint to create an abstracted debt collection due date. In this endpoint there is no need to create a location beforehand.
    parameters:
      - name: txid
        schema:
          $ref: '#/components/schemas/TxId'
        in: path
        required: true
  /pix-api/v2.x/webhook/{chave}:
    description: Endpoint for configuration of the notifications service regarding received Pix transactions. Only Pix transactions associated with a txid will be notified.
    get:
      tags:
        - BacenWebhook
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BacenWebhookResponse'
          description: The response
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: get-bacen-webhook
      summary: Get webhook informations for the provided key.
      description: Endpoint for get the notifications service regarding received Pix transactions. Only Pix transactions associated with a txid will be notified.
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BacenWebhookRequest'
        required: true
      tags:
        - BacenWebhook
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BacenWebhookResponse'
          description: 'The response '
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: put-bacen-webhook
      summary: Set up the webhook for the provided key.
      description: Endpoint for configuration of the notifications service regarding received Pix transactions. Only Pix transactions associated with a txid will be notified.
    delete:
      tags:
        - BacenWebhook
      responses:
        '204':
          description: 'The response '
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: delete-bacen-webhook
      summary: Endpoint for webhook cancellation.
      description: Use this endpoint to cancel webhook
    parameters:
      - examples:
          chave:
            value: fulano@gmail.com
        name: chave
        description: The DICT key.
        schema:
          type: string
        in: path
        required: true
  /pix-api/v2.x/webhook:
    get:
      tags:
        - BacenWebhook
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BacenWebhookListResponse'
          description: The response
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/BacenForbidden'
        '404':
          $ref: '#/components/responses/BacenNotFound'
        '500':
          $ref: '#/components/responses/BacenInternalServer'
        '503':
          $ref: '#/components/responses/BacenServiceUnavailable'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: list-bacen-webhook
      summary: Endpoint for querying registered webhooks.
      description: Endpoint for querying registered webhooks.
    parameters:
      - name: inicio
        description: Start Date informed to return all webhooks.
        schema:
          format: date-time
          type: string
        in: query
      - name: fim
        description: End Date informed to get all webhooks.
        schema:
          format: date-time
          type: string
        in: query
      - name: paginacao.paginaAtual
        description: The page number of pagination
        schema:
          type: integer
        in: query
      - name: paginacao.itensPorPagina
        description: The number of items per page
        schema:
          type: integer
        in: query
  /pix/merchant/limit-validator/payment/{accountId}/initiate/{key}/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantLimitValidatorInitiateRequest'
        required: true
      tags:
        - MerchantLimitValidator
      parameters:
        - examples:
            "Key example\t":
              value: "fulano@gmail.com\t\r\n"
          name: key
          description: "The destination DICT key.\r\n"
          schema:
            type: string
          in: path
          required: true
        - examples:
            AccountIdExample:
              value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
          name: accountId
          description: "\r\nThe unique identifier for account."
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentLimitValidatorResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-limit-validator-account-initiate-key
      summary: Initiate a Pix Payment Limit Validator by accountId using key
      description: This endpoint must be used by transactional clients that wish to request a Pix Payment passing through a limit validator. The amount will be debited from account you pass in the route.
  /pix/merchant/limit-validator/payment/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantLimitValidatorRequestPayload'
        required: true
      tags:
        - MerchantLimitValidator
      parameters:
        - name: accountId
          description: The unique identifier for account.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentLimitValidatorResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment--accountId-limit-validator
      summary: Send a Pix Payment Limit Validator by accountId as a Transactional Customer
      description: This endpoint must be used by transactional clients that wish to request a Pix Payment passing through a limit validator. The amount will be debited from account you pass in the route.
  /pix/merchant/limit-validator/reversal/{pactualId}/return:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentReturnRequest'
            examples:
              Example:
                value:
                  clientRequestId: AC0FE8DE561349669746087BC3CBC103
                  reason: SL02
                  amount: 10.02
                  additionalInformation: Lorem ipsum dolor sit amet.
                  tags:
                    - abc
                    - def
              Example full information:
                value:
                  additionalInformation: Lorem ipsum dolor sit amet.
                  amount: 10.02
                  clientRequestId: AC0FE8DE561349669746087BC3CBC103
                  reason: BE08
                  tags:
                    - abc
                    - def
                  nature: ORIGINAL
                  reversalDescription: You sent too much money. I am returning the excess amount.
        required: true
      tags:
        - MerchantLimitValidator
      parameters:
        - examples:
            Example:
              value: e03353bd-1ae6-46ba-81aa-193c6627f689
          name: pactualId
          description: 'Unique identifier of the Pix made. '
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReturnResponse'
              examples:
                Example:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      clientRequestId: AC0FE8DE561349669746087BC3CBC103
                      pactualId: 45fe6866-21a5-4f6d-84c2-950a2a1df8e7
                      entity: PixReversal
                      status: PROCESSING
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      body:
                        returnIdentification: D3030629420200808185300887639654
                        reason: BE08
                        additionalInformation: Lorem ipsum dolor sit amet.
                        amount: 10.02
                        originalPactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      tags:
                        - abc
                        - def
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: pix-payment-limit-validator-return
      summary: Refund a Pix Payment By PactualID
      description: "This method handles the refund of Pix Payments passing through a limit validator. The amount passed is the value to be returned regarding an already submitted Pix Payment. More than one refund can be made for the same submitted Pix Payment, however, the sum of all refunds cannot exceed the payment's original amount.\r\n\r\n\r\nThe possible reasons for the return are listed on the table bellow and are required with each new requisition. \r\n\r\n\r\n| Reason|Error Name|Error Description|\r\n|----------|:-------------|------|\r\n|BE08|BankError|Returned as a result of a bank error.|\r\n|FR01|Fraud|Returned as a result of fraud.|\r\n|MD06|RefundRequestByEndCustomer|Return of funds requested by end customer.|\r\n|SL02|SpecificServiceOfferedByCreditorAgent|Return of cash value due to an error related to PixWithdrawal or PixChange.|\r\n"
  /pix/merchant/limit-validator/reversal/end-to-end/{endToEndId}/return:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentReturnRequest'
            examples:
              example:
                value:
                  clientRequestId: AC0FE8DE561349669746087BC3CBC103
                  reason: SL02
                  amount: 10.02
                  additionalInformation: Lorem ipsum dolor sit amet.
                  tags:
                    - abc
                    - def
              full example:
                value:
                  additionalInformation: Lorem ipsum dolor sit amet.
                  amount: 10.02
                  clientRequestId: AC0FE8DE561349669746087BC3CBC103
                  reason: BE08
                  tags:
                    - abc
                    - def
                  nature: ORIGINAL
                  reversalDescription: You sent too much money. I am returning the excess amount.
        required: true
      tags:
        - MerchantLimitValidator
      parameters:
        - examples:
            endToEndId:
              value: "E3030629420211221000001944854508\t"
          name: endToEndId
          description: 'end to end identifier of the Pix made. '
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReturnResponse'
              examples:
                example:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      clientRequestId: AC0FE8DE561349669746087BC3CBC103
                      pactualId: 45fe6866-21a5-4f6d-84c2-950a2a1df8e7
                      entity: PixReversal
                      status: PROCESSING
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      body:
                        returnIdentification: D3030629420200808185300887639654
                        reason: BE08
                        additionalInformation: Lorem ipsum dolor sit amet.
                        amount: 10.02
                        originalPactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      tags:
                        - abc
                        - def
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: pix-payment-return-e2e
      summary: Refund a Pix Payment By EndToEndId
      description: "This method handles the refund of Pix Payments passing through a limit validator. The amount passed is the value to be returned regarding an already submitted Pix Payment. More than one refund can be made for the same submitted Pix Payment, however, the sum of all refunds cannot exceed the payment's original amount.\r\n\r\n\r\nThe possible reasons for the return are listed on the table bellow and are required with each new requisition. \r\n\r\n\r\n| Reason|Error Name|Error Description|\r\n|----------|:-------------|------|\r\n|BE08|BankError|Returned as a result of a bank error.|\r\n|FR01|Fraud|Returned as a result of fraud.|\r\n|MD06|RefundRequestByEndCustomer|Return of funds requested by end customer.|\r\n|SL02|SpecificServiceOfferedByCreditorAgent|Return of cash value due to an error related to PixWithdrawal or PixChange.|\r\n"
  /pix/merchant/limit-validator/collection/location/{txId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCollectionLocationLimitValidatorCreateRequest'
        required: true
      tags:
        - MerchantLimitValidator
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobLimitValidatorBodyContent'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      deprecated: true
      security:
        - BaaSAuthorizer: []
      operationId: pix-collection-limit-validator-location
      summary: Create an immediate collection limit validator without location informations
      description: Use this endpoint to create a immediate collection, that will pass through a limit validator, without sending location id (in this endpoint, it is not necessary to create a location before to create a collection).
    parameters:
      - examples:
          txid:
            value: 5a028e0a5fe1497c97b4c0743bcdd78f
        name: txId
        schema:
          $ref: '#/components/schemas/TxId'
        in: path
        required: true
  /pix/merchant/limit-validator/collection/v2/{txId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCollectionLocationLimitValidatorCreateRequest'
        required: true
      tags:
        - MerchantLimitValidator
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobLimitValidatorBodyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      security:
        - BaaSAuthorizer: []
      operationId: pix-collection-limit-validator
      summary: Create an immediate collection limit validator without location informations
      description: Use this endpoint to create a immediate collection, that will pass through a limit validator, without sending location id (in this endpoint, it is not necessary to create a location before to create a collection).
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCollectionLocationLimitValidatorUpdateRequest'
      tags:
        - MerchantLimitValidator
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobLimitValidatorBodyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      operationId: update-pix-collection-limit-validator
      summary: Update an immediate collection limit validator
      description: Use this endpoint to update a immediate collection, that will pass through a limit validator.
    parameters:
      - examples:
          txid:
            value: 5a028e0a5fe1497c97b4c0743bcdd78f
        name: txId
        schema:
          $ref: '#/components/schemas/TxId'
        in: path
        required: true
  /pix/merchant/limit-validator-v2/collection/{txId}/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCollectionLocationLimitValidatorV2CreateRequest'
        required: true
      tags:
        - MerchantLimitValidatorV2
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobLimitValidatorBodyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      security:
        - BaaSAuthorizer: []
      operationId: pix-collection-limit-validator-v2
      summary: Create an immediate collection limit validator without location informations
      description: Use this endpoint to create a immediate collection, that will pass through a limit validator, without sending location id (in this endpoint, it is not necessary to create a location before to create a collection).
    patch:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCollectionLocationLimitValidatorUpdateRequest'
      tags:
        - MerchantLimitValidatorV2
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobLimitValidatorBodyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      operationId: update-pix-collection-limit-validator-v2
      summary: Update an immediate collection limit validator
      description: Use this endpoint to update a immediate collection, that will pass through a limit validator.
    parameters:
      - examples:
          txid:
            value: 5a028e0a5fe1497c97b4c0743bcdd78f
        name: txId
        schema:
          $ref: '#/components/schemas/TxId'
        in: path
        required: true
  /pix/merchant/limit-validator-v2/collection/debtor-account/{txId}/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixCollectionLocationLimitValidatorDebtorAccountCreateRequest'
        required: true
      tags:
        - MerchantLimitValidatorV2
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixCobLimitValidatorBodyResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '429':
          description: Too many requests. Try wait and call again later.
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          description: Received a timeout of an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
      security:
        - BaaSAuthorizer: []
      operationId: pix-collection-debtor-account-limit-validator-v2
      summary: Create an immediate collection limit validator with debtor account informations
      description: Use this endpoint to create a immediate collection, that will pass through a limit validator, without sending location id (in this endpoint, it is not necessary to create a location before to create a collection), pass the debtor account to verify if the received cash-in matches the registered account.
    parameters:
      - examples:
          txid:
            value: 5a028e0a5fe1497c97b4c0743bcdd78f
        name: txId
        schema:
          $ref: '#/components/schemas/TxId'
        in: path
        required: true
  /pix/merchant/v2/payment/{accountId}/initiate/{key}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantRequestDictKeyPayload'
            examples:
              Example without remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  paymentType: IMMEDIATE
                  transactionType: WITHDRAWAL
                  vldnAmount: '10.01'
              Example with remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  remittanceInformation: Informação para ser apresentada
                  paymentType: IMMEDIATE
                  transactionType: WITHDRAWAL
                  vldnAmount: '10.01'
        required: true
      tags:
        - MerchantUsingAccountId
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentMaskedInformationResponseEnvelope'
              examples:
                PixPaymentResponseKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
                      clientRequestId: 45143f4e-15ff-413d-808d-8837652ebdc6
                      createTimestamp: '2020-08-08T20:17:32.7971743+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:32.7971743+00:00'
                      entity: PixPayment
                      status: INITIATED
                      body:
                        amount: 10.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: credit@gmail.com
                          bank: '30306294'
                          name: Credit example name
                          taxId: '***222333**'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808195101608910248
                        paymentType: IMMEDIATE
                        transactionType: TRANSFER
                        initiationType: DICT
                        urgency: HIGH
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-v2-payment-initiate-key-accountid
      summary: Initiate a Pix Payment as a Transactional Customer using an accountId and key V2
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment, passing an accountId and a DICT key. 

        Confirm transaction [here](#operation/pix-merchant-payment-key-confirm)

        Rules based on the transactionType value:

        |TransactionType|Property|Rule|
        |----------|:-------------|------|
        |TRANSFER|'vlcpAmount' and 'vldnAmount'|These properties cannot be inserted.|
        |CHANGE|'vlcpAmount' and 'vldnAmount'|These properties are required.|
        |CHANGE|'amount'|This property must be the sum of the 'vlcpAmount' and 'vldnAmount' properties.|
        |WITHDRAWAL|'vldnAmount'|This property is required.|
        |WITHDRAWAL|'vlcpAmount'|This property cannot be inserted.|
        |WITHDRAWAL|'amount'|This property must be the same of 'vldnAmount' property.|
        |WITHDRAWAL and CHANGE|'withdrawalAgentMode' and 'withdrawalServiceProvider'|These properties are required.|

        Rules based on the initiationType value:

        |InitiationType|Property|Rule|
        |----------|:-------------|------|
        |MANUAL or DICT|'transactionIdentification'|This property cannot be inserted.|
        |STATIC_QRCODE|'transactionIdentification'|This property is required and length must be up to 25 characters.|
        |DYNAMIC_QRCODE|'transactionIdentification'|This property is required and length must be between 26 and 35 characters.|
        |PAYMENT_INITIATOR|'taxIdPaymentInitiator'|This property is required and needs to be a CNPJ.|
        |PAYMENT_INITIATOR|'transactionIdentification'|This property is required, length must be up to 25 characters and needs to be from a STATIC_QRCODE.|

        Rules based on the paymentType value:

        |PaymentType|Property|Rule|
        |----------|:-------------|------|
        |SCHEDULED|'urgency'|This property will have NORMAL value. Otherwise, this property will have the HIGH value.|
    parameters:
      - examples:
          Key example:
            value: fulano@gmail.com
        name: key
        description: The destination DICT key.
        schema:
          maxLength: 77
          type: string
        in: path
        required: true
      - examples:
          AccountIdExample:
            value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
        name: accountId
        description: The unique identifier for account.
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/v2/payment/{accountId}/qrcode/initiate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantQrCodeInitiatePayload'
        required: true
      tags:
        - MerchantUsingAccountId
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentMerchantMaskedInformationResponseEnvelope'
              examples:
                PixPaymentResponseKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: INITIATED
                      body:
                        amount: 10.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: credit@gmail.com
                          bank: '30306294'
                          name: Credit example name
                          taxId: '***222333**'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808195101608910248
                        paymentType: IMMEDIATE
                        transactionType: TRANSFER
                        initiationType: STATIC_QRCODE
                        urgency: HIGH
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-v2-payment-qrcode-initiate-account-id
      summary: Initiate a Pix Payment by Account Id as a Transactional Customer using an EMV string V2
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment, passing an accountId and an EMV string.

        Confirm transaction [here](#operation/pix-merchant-payment-key-confirm)

        The urgency of the PIX will be set to HIGH. 

        The value of property 'paymentType' will be set to IMMEDIATE. 

        The value of property 'initiationType' will be set to STATIC_QRCODE or DYNAMIC_QRCODE based on sent EMV. Or it will be set as PAYMENT_INITIATOR, if there is a value in the taxIdPaymentInitiator property.
    parameters:
      - examples:
          AccountIdExample:
            value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
        name: accountId
        description: The unique identifier for account.
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/v2/payment/initiate/{key}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantRequestDictKeyPayload'
            examples:
              Example without remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  paymentType: IMMEDIATE
                  transactionType: CHANGE
                  vlcpAmount: '5.01'
                  vldnAmount: '5.00'
              Example with remittanceInformation:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  tags:
                    - abc
                    - def
                  remittanceInformation: Informação para ser apresentada
                  paymentType: IMMEDIATE
                  transactionType: CHANGE
                  vlcpAmount: '5.01'
                  vldnAmount: '5.00'
        required: true
      tags:
        - Merchant
      parameters:
        - examples:
            Key example:
              value: fulano@gmail.com
          name: key
          description: The destination DICT key.
          schema:
            maxLength: 77
            type: string
          in: path
          required: true
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentMaskedInformationResponseEnvelope'
              examples:
                PixPaymentResponseKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
                      clientRequestId: 45143f4e-15ff-413d-808d-8837652ebdc6
                      createTimestamp: '2020-08-08T20:17:32.7971743+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:32.7971743+00:00'
                      entity: PixPayment
                      status: INITIATED
                      body:
                        amount: 10.02
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: credit@gmail.com
                          bank: '30306294'
                          name: Credit example name
                          taxId: '***222333**'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808195101608910248
                        paymentType: IMMEDIATE
                        transactionType: CHANGE
                        initiationType: DICT
                        urgency: HIGH
                        vlcpAmount: 5.01
                        vldnAmount: 5.01
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-v2-payment-key
      summary: Initiate a Pix Payment as a Transactional Customer using a key V2
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment, passing your key. The amount will be debited from your account marked as default.

        Confirm transaction [here](#operation/pix-merchant-payment-key-confirm)

        Rules based on the transactionType value:

        |TransactionType|Property|Rule|
        |----------|:-------------|------|
        |TRANSFER|'vlcpAmount' and 'vldnAmount'|These properties cannot be inserted.|
        |CHANGE|'vlcpAmount' and 'vldnAmount'|These properties are required.|
        |CHANGE|'amount'|This property must be the sum of the 'vlcpAmount' and 'vldnAmount' properties.|
        |WITHDRAWAL|'vldnAmount'|This property is required.|
        |WITHDRAWAL|'vlcpAmount'|This property cannot be inserted.|
        |WITHDRAWAL|'amount'|This property must be the same of 'vldnAmount' property.|
        |WITHDRAWAL and CHANGE|'withdrawalAgentMode' and 'withdrawalServiceProvider'|These properties are required.|

        Rules based on the initiationType value:

        |InitiationType|Property|Rule|
        |----------|:-------------|------|
        |MANUAL or DICT|'transactionIdentification'|This property cannot be inserted.|
        |STATIC_QRCODE|'transactionIdentification'|This property is required and length must be up to 25 characters.|
        |DYNAMIC_QRCODE |'transactionIdentification'|This property is required and length must be between 26 and 35 characters.|
        |PAYMENT_INITIATOR|'taxIdPaymentInitiator'|This property is required and needs to be a CNPJ.|
        |PAYMENT_INITIATOR|'transactionIdentification'|This property is required, length must be up to 25 characters.|

        Rules based on the paymentType value:

        |PaymentType|Property|Rule|
        |----------|:-------------|------|
        |SCHEDULED|'urgency'|This property will have NORMAL value. Otherwise, this property will have the HIGH value.|
    parameters:
      - examples:
          Key example:
            value: fulano@gmail.com
        name: key
        description: The destination DICT key.
        schema:
          maxLength: 77
          type: string
        in: path
        required: true
  /pix/merchant/v2/payment/qrcode/initiate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantQrCodeInitiatePayload'
        required: true
      tags:
        - Merchant
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentMerchantMaskedInformationResponseEnvelope'
              examples:
                PixPaymentResponseKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: INITIATED
                      body:
                        amount: 10.02
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: credit@gmail.com
                          bank: '30306294'
                          name: Credit example name
                          taxId: '***222333**'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808195101608910248
                        paymentType: IMMEDIATE
                        transactionType: STATIC_QRCODE
                        initiationType: TRANSFER
                        urgency: HIGH
                      tags:
                        - abc
          description: Sucessful response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-v2-payment-qrcode-initiate
      summary: Initiate a Pix Payment as a Transactional Customer using an EMV string V2
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment, passing an EMV string. The amount will be debited from your account marked as default. 

        Confirm transaction [here](#operation/pix-merchant-payment-key-confirm)

        The urgency of the PIX will be set to HIGH. 

        The value of property 'paymentType' will be set to IMMEDIATE. 

        The value of property 'initiationType' will be set to STATIC_QRCODE or DYNAMIC_QRCODE based on sent EMV. Or it will be set as PAYMENT_INITIATOR, if there is a value in the taxIdPaymentInitiator property.
  /pix/merchant/limit-validator-v2/payment/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantLimitValidatorRequestPayload'
        required: true
      tags:
        - MerchantLimitValidatorV2
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentLimitValidatorResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-limit-validator-v2
      summary: Send a Pix Payment Limit Validator as a Transactional Customer
      description: This endpoint must be used by transactional clients that wish to request a Pix Payment passing through a limit validator. The amount will be debited from your account marked as default.
  /pix/merchant/limit-validator-v2/payment/{accountId}/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantLimitValidatorRequestPayload'
        required: true
      tags:
        - MerchantLimitValidatorV2
      parameters:
        - name: accountId
          description: The unique identifier for account.
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentLimitValidatorResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment--accountId-limit-validator-v2
      summary: Send a Pix Payment Limit Validator by accountId as a Transactional Customer
      description: This endpoint must be used by transactional clients that wish to request a Pix Payment passing through a limit validator. The amount will be debited from account you pass in the route.
  /pix/merchant/limit-validator-v2/payment/{accountId}/initiate/{key}/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantLimitValidatorInitiateRequest'
        required: true
      tags:
        - MerchantLimitValidatorV2
      parameters:
        - examples:
            "Key example\t":
              value: "fulano@gmail.com\t\r\n"
          name: key
          description: "The destination DICT key.\r\n"
          schema:
            type: string
          in: path
          required: true
        - examples:
            AccountIdExample:
              value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
          name: accountId
          description: "\r\nThe unique identifier for account."
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentLimitValidatorHiddenTaxIdResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-limit-validator-account-initiate-key-v2
      summary: Initiate a Pix Payment Limit Validator by accountId using key
      description: This endpoint must be used by transactional clients that wish to request a Pix Payment passing through a limit validator. The amount will be debited from account you pass in the route.
  /pix/merchant/limit-validator-v2/payment/confirm/{pactualId}/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantConfirmRequest'
      tags:
        - MerchantLimitValidatorV2
      parameters:
        - examples:
            PactualIdExample:
              value: 375c4e63-fa7e-45f3-9719-f58d5d6f75da
          name: pactualId
          description: The initiated transaction's pactualId.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentResponse'
              examples:
                PixPaymentResponseFullDictKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Fulano de Tal
                          taxId: '11111111111'
                          personType: NATURAL_TYPE
                          accountType: CACC
                        creditParty:
                          key: beltrano@gmail.com
                          bank: 30306294
                          branch: 10
                          account: 10
                          name: Beltrano de Tal
                          taxId: '22222222222'
                          personType: NATURAL_TYPE
                          accountType: CACC
                        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                      tags:
                        - abc
          description: Sucessful response.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-limit-validator-v2-key-confirm
      summary: Confirm a Pix Payment Limit Validator started by key
      description: |-
        This endpoint must be used by transactional clients that wish to confirm an existent Pix Payment, passing your pactualId.

        > This endpoint must not be used by Pix Indirect Participants.
  /pix/merchant/limit-validator-v2/payment/initiate/{key}/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantLimitValidatorInitiateRequest'
        required: true
      tags:
        - MerchantLimitValidatorV2
      parameters:
        - examples:
            "Key example\t":
              value: "fulano@gmail.com\t\r\n"
          name: key
          description: "The destination DICT key.\r\n"
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          headers:
            TokenBucket:
              schema:
                $ref: '#/components/schemas/tokenBucketHeaders'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentLimitValidatorHiddenTaxIdResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFoundTokenBucket'
        '429':
          $ref: '#/components/responses/TooManyRequestsRetryAfter'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-limit-validator-initiate-key-v2
      summary: Initiate a Pix Payment Limit Validator using key
      description: This endpoint must be used by transactional clients that wish to request a Pix Payment passing through a limit validator. The amount will be debited from your account marked as default.
  /pix/merchant/limit-validator-v2/reversal/{pactualId}:
    get:
      tags:
        - MerchantLimitValidatorV2
      parameters:
        - name: pactualId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReversalEnvelopeResponse'
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-payment-reversal-pactualid
      summary: Get a Pix Reversal by PactualId
      description: This method returns the information regarding a submitted pix reversal.
    parameters:
      - name: pactualId
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/limit-validator-v2/reversal/client-request-id/{clientRequestId}:
    get:
      tags:
        - MerchantLimitValidatorV2
      parameters:
        - name: clientRequestId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReversalEnvelopeResponse'
          description: Example
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-pix-payment-reversal-client-request-id
      summary: Get a Pix Reversal by ClientRequestId
      description: This method returns the information regarding a submitted pix reversal.
    parameters:
      - name: clientRequestId
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/limit-validator-v2/reversal/{pactualId}/return/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentReturnRequest'
            examples:
              Example:
                value:
                  clientRequestId: AC0FE8DE561349669746087BC3CBC103
                  reason: SL02
                  amount: 10.02
                  additionalInformation: Lorem ipsum dolor sit amet.
                  tags:
                    - abc
                    - def
              Example full information:
                value:
                  additionalInformation: Lorem ipsum dolor sit amet.
                  amount: 10.02
                  clientRequestId: AC0FE8DE561349669746087BC3CBC103
                  reason: BE08
                  tags:
                    - abc
                    - def
                  nature: ORIGINAL
                  reversalDescription: You sent too much money. I am returning the excess amount.
        required: true
      tags:
        - MerchantLimitValidatorV2
      parameters:
        - examples:
            Example:
              value: e03353bd-1ae6-46ba-81aa-193c6627f689
          name: pactualId
          description: 'Unique identifier of the Pix made. '
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReturnResponse'
              examples:
                Example:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      clientRequestId: AC0FE8DE561349669746087BC3CBC103
                      pactualId: 45fe6866-21a5-4f6d-84c2-950a2a1df8e7
                      entity: PixReversal
                      status: PROCESSING
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      body:
                        returnIdentification: D3030629420200808185300887639654
                        reason: BE08
                        additionalInformation: Lorem ipsum dolor sit amet.
                        amount: 10.02
                        originalPactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      tags:
                        - abc
                        - def
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: pix-payment-limit-validator-v2-return
      summary: Refund a Pix Payment By PactualID
      description: "This method handles the refund of Pix Payments passing through a limit validator. The amount passed is the value to be returned regarding an already submitted Pix Payment. More than one refund can be made for the same submitted Pix Payment, however, the sum of all refunds cannot exceed the payment's original amount.\r\n\r\n\r\nThe possible reasons for the return are listed on the table bellow and are required with each new requisition. \r\n\r\n\r\n| Reason|Error Name|Error Description|\r\n|----------|:-------------|------|\r\n|BE08|BankError|Returned as a result of a bank error.|\r\n|FR01|Fraud|Returned as a result of fraud.|\r\n|MD06|RefundRequestByEndCustomer|Return of funds requested by end customer.|\r\n|SL02|SpecificServiceOfferedByCreditorAgent|Return of cash value due to an error related to PixWithdrawal or PixChange.|\r\n"
  /pix/merchant/limit-validator-v2/reversal/end-to-end/{endToEndId}/return/:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentReturnRequest'
            examples:
              example:
                value:
                  clientRequestId: AC0FE8DE561349669746087BC3CBC103
                  reason: SL02
                  amount: 10.02
                  additionalInformation: Lorem ipsum dolor sit amet.
                  tags:
                    - abc
                    - def
              full example:
                value:
                  additionalInformation: Lorem ipsum dolor sit amet.
                  amount: 10.02
                  clientRequestId: AC0FE8DE561349669746087BC3CBC103
                  reason: BE08
                  tags:
                    - abc
                    - def
                  nature: ORIGINAL
                  reversalDescription: You sent too much money. I am returning the excess amount.
        required: true
      tags:
        - MerchantLimitValidatorV2
      parameters:
        - examples:
            endToEndId:
              value: "E3030629420211221000001944854508\t"
          name: endToEndId
          description: 'end to end identifier of the Pix made. '
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentReturnResponse'
              examples:
                example:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      clientRequestId: AC0FE8DE561349669746087BC3CBC103
                      pactualId: 45fe6866-21a5-4f6d-84c2-950a2a1df8e7
                      entity: PixReversal
                      status: PROCESSING
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      body:
                        returnIdentification: D3030629420200808185300887639654
                        reason: BE08
                        additionalInformation: Lorem ipsum dolor sit amet.
                        amount: 10.02
                        originalPactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      tags:
                        - abc
                        - def
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: pix-payment-limit-validator-v2return-e2e
      summary: Refund a Pix Payment By EndToEndId
      description: "This method handles the refund of Pix Payments passing through a limit validator. The amount passed is the value to be returned regarding an already submitted Pix Payment. More than one refund can be made for the same submitted Pix Payment, however, the sum of all refunds cannot exceed the payment's original amount.\r\n\r\n\r\nThe possible reasons for the return are listed on the table bellow and are required with each new requisition. \r\n\r\n\r\n| Reason|Error Name|Error Description|\r\n|----------|:-------------|------|\r\n|BE08|BankError|Returned as a result of a bank error.|\r\n|FR01|Fraud|Returned as a result of fraud.|\r\n|MD06|RefundRequestByEndCustomer|Return of funds requested by end customer.|\r\n|SL02|SpecificServiceOfferedByCreditorAgent|Return of cash value due to an error related to PixWithdrawal or PixChange.|\r\n"
  /pix/merchant/limit-validator-v2/authorized-participants:
    get:
      tags:
        - MerchantLimitValidatorV2
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpiAuthorizedParticipantsListResponse'
              examples:
                AuthorizedParticipantsList:
                  value:
                    status: 200
                    version: 1.0.0
                    body:
                      items:
                        - shortName: Participant Name IP
                          ispb: '12345678'
                          taxId: '84349820000183'
                          institutionType: MicroEntrepreneurCreditSociety
                          authorized: true
                          participationTypeOnSpi: Direct
                          participationTypeOnPix: Optional
                          participationModalityOnPix: TransactionalAccountProvider
                          productionStatus: ActiveInRestrictedOperation
                          isPaymentInitiator: true
                          isWithDrawalServiceProvider: true
                        - shortName: Participant Name IP
                          ispb: '12345678'
                          taxId: '29797811000147'
                          institutionType: MicroEntrepreneurCreditSociety
                          authorized: true
                          participationTypeOnSpi: Direct
                          participationTypeOnPix: Optional
                          participationModalityOnPix: TransactionalAccountProvider
                          joiningStatus: WaitingStartOfRestrictedOperationStage
          description: The search response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-limit-validator-v2-authorized-participants-today-list
      summary: List SPI authorized participants today.
      description: Use to retrieave a list of authorized participants status today.
  /pix/merchant/limit-validator-v2/client-id/list/{clientId}:
    get:
      tags:
        - MerchantLimitValidatorV2
      parameters:
        - name: clientId
          description: The unique id that identifies the client
          schema:
            type: string
          in: path
          required: true
        - name: limit
          description: The maximum quantity of items that will be returned.
          schema:
            default: 20
            type: integer
          in: query
        - name: page
          description: The page that the list will be started.
          schema:
            type: integer
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictHubMerchantCustomerListResponse'
              examples:
                List Merchant customer:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      - merchantCustomerId: string
                        name: string
                        taxId: string
                        createTimestamp: string
                        lastUpdateTimestamp: string
                        status: string
                        additionalData: string
          description: List of Dict Hub Merchant Customer informations.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      deprecated: false
      security:
        - BaaSAuthorizer: []
      operationId: merchant-dict-hub-customer-list-v2
      summary: List Merchant Customer By ClientId
      description: Get a list of customers informations associated to a clientId
  /pix/merchant/limit-validator-v2/customer/{merchantCustomerId}:
    get:
      tags:
        - MerchantLimitValidatorV2
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictHubMerchantCustomerCreateResponse'
              examples:
                GetMerchantCustomer:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      merchantCustomerId: string
                      name: string
                      taxId: string
                      createTimestamp: string
                      lastUpdateTimestamp: string
                      status: string
                      additionalData: string
          description: The Dict Hub Merchant Customer informations.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      deprecated: false
      security:
        - BaaSAuthorizer: []
      operationId: merchant-dict-hub-customer-get-id-v2
      summary: Get Customer Informations By MerchantCustomerId
      description: Get a merchant customer information
    parameters:
      - name: merchantCustomerId
        description: The unique id that identify the merchant customer
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/limit-validator-v2/customer/tax-id/{taxId}:
    get:
      tags:
        - MerchantLimitValidatorV2
      parameters:
        - name: limit
          description: The maximum quantity of items that will be returned.
          schema:
            default: 20
            type: integer
          in: query
        - name: page
          description: The page that the list will be started.
          schema:
            type: integer
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DictHubMerchantCustomerListResponse'
              examples:
                List Merchant customer:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      - merchantCustomerId: string
                        name: string
                        taxId: string
                        createTimestamp: string
                        lastUpdateTimestamp: string
                        status: string
                        additionalData: string
          description: List of Dict Hub Merchant Customer informations.
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '429':
          $ref: '#/components/responses/TooManyRequests'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      deprecated: false
      security:
        - BaaSAuthorizer: []
      operationId: merchant-dict-hub-customer-list-taxId-v2
      summary: List Merchant Customer By TaxId
      description: Get a list of customer informations filter by taxId
    parameters:
      - name: taxId
        description: The merchant customer TaxId
        schema:
          type: string
        in: path
        required: true
  /pix/merchant/payment/destination-validate/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentMerchantDestinationAccountRequestPayload'
            examples:
              Example:
                value:
                  clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
                  amount: '10.01'
                  creditParty:
                    account: '1000'
                    name: Beltrano de Tal
                    taxId: '22222222222'
                    accountType: CACC
                    branch: '1'
                    bank: '30306294'
                  tags:
                    - abc
                    - def
                  remittanceInformation: Informação para ser apresentada
                  paymentType: IMMEDIATE
                  transactionType: TRANSFER
        required: true
      tags:
        - MerchantUsingAccountId
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PixPaymentResponse'
              examples:
                PixPaymentResponseFull:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Credit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        transactionIdentification: abcd0000000001
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: WITHDRAWAL
                        initiationType: MANUAL
                        urgency: HIGH
                        vldnAmount: 10.01
                      tags:
                        - abc
                PixPaymentFullResponseDictKey:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
                      clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
                      createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
                      entity: PixPayment
                      status: PROCESSING
                      body:
                        amount: 10.01
                        debitParty:
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Debit example name
                          taxId: '11111111111'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        creditParty:
                          key: credit@gmail.com
                          bank: '30306294'
                          branch: '10'
                          account: '10'
                          name: Credit example name
                          taxId: '22222222222'
                          personType: NATURAL_PERSON
                          accountType: CACC
                        endToEndId: E3030629420200808185300887639654
                        remittanceInformation: Information...
                        paymentType: IMMEDIATE
                        transactionType: WITHDRAWAL
                        initiationType: MANUAL
                        urgency: HIGH
                        vldnAmount: '10.01'
                      tags:
                        - abc
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '504':
          $ref: '#/components/responses/GatewayTimeout'
      security:
        - BaaSAuthorizer: []
      operationId: pix-merchant-payment-destination-account
      summary: Send a Pix Payment by Account Id as a Transactional Customer to destination account
      description: |-
        This endpoint must be used by transactional clients that wish to request a Pix Payment, passing an accountId to destination account. 

        Rules based on the initiationType value:

        |InitiationType|Property|Rule|
        |----------|:-------------|------|
        |MANUAL|'creditParty.key'|This property cannot be inserted.|


        Rules based on the paymentType value:

        |PaymentType|Property|Rule|
        |----------|:-------------|------|
        |SCHEDULED|'urgency'|This property will have NORMAL value. Otherwise, this property will have the HIGH value.|
    parameters:
      - examples:
          AccountIdExample:
            value: fbe01cde-5d47-4cd4-b1e0-9125442346b4
        name: accountId
        description: The unique identifier for account.
        schema:
          type: string
        in: path
        required: true
components:
  schemas:
    SingleResponseBody:
      description: The response body of request of single resource.
      required:
        - clientRequestId
        - pactualId
      type: object
      properties:
        clientRequestId:
          description: Unique resource identificator given by the client.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
      example:
        clientRequestId: 4a068fe4-97c2-4c58-9abb-76f94d293ad0
        pactualId: 8cde0465-1579-4e1c-8cae-07096ebd7fcc
    ErrorResponse:
      title: PactualErrorResponse
      description: Default response body in case of any errors.
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          description: Http status code.
          type: string
        errors:
          description: Array of errors.
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
              message:
                type: string
      example:
        version: 1.0.0
        status: 400
        errors:
          - errorCode: PCE001
            message: The field 'name' is required.
          - errorCode: PCE002
            message: The field 'taxId' is incorrect.
    SingleResponse:
      title: PactualSingleResponse
      description: Default response body for create single resource apis.
      required:
        - body
        - version
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/SingleResponseBody'
          description: Body with clientRequestId and pactualId.
          properties:
            clientRequestId:
              type: string
            pactualId:
              type: string
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
      example:
        version: '1.0'
        status: 200
        body:
          clientRequestId: daf17267-f26d-43e5-baef-074bb67c95c8
          pactualId: ad21c1a9-feb5-43b2-8b82-1e93b7cf5d50
    EntityEnvelopBase:
      description: ''
      required:
        - pactualId
        - clientRequestId
        - createTimestamp
        - lastUpdateTimestamp
        - status
        - entity
        - tags
      type: object
      properties:
        pactualId:
          description: ''
          type: string
        clientRequestId:
          description: ''
          type: string
        createTimestamp:
          format: date-time
          description: Respects the GMT timezone
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: ''
          type: string
        status:
          description: ''
          type: string
        entity:
          description: ''
          type: string
        tags:
          description: ''
          type: array
          items:
            type: string
        errorCode:
          description: ''
          type: string
        errorDescription:
          description: ''
          type: string
      example:
        pactualId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
        clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
        createTimestamp: '2020-07-15T19:26:10.703Z'
        lastUpdateTimestamp: '2020-07-15T19:26:10.703Z'
        status: some text
        entity: some text
        tags:
          - some text
          - some text
        errorCode: PCE001
        errorDescription: some text
    EmptyOKResponse:
      title: Root Type for EmptyOKResponse
      description: ''
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          format: int32
          description: The HTTP response code.
          type: integer
      example:
        version: 1.0.0
        status: 200
    EntityEnvelopeCustom:
      description: ''
      required:
        - pactualId
        - clientRequestId
        - createTimestamp
        - lastUpdateTimestamp
        - status
        - entity
        - tags
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          format: date-time
          description: Entity's creation timestamp.
          type: string
        entity:
          description: The entity's name.
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: Entity's last update timestamp.
          type: string
        pactualId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        status:
          description: Transaction's current status.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
    BacenErrorResponse:
      title: Root Type for BacenErrorResponse
      description: ''
      required:
        - status
        - title
        - type
      type: object
      properties:
        type:
          description: Reference URI that identifies the type of problem. According to RFC 7807.
          type: string
        title:
          description: Short description of problem.
          type: string
        status:
          format: int32
          description: Http status code.
          type: integer
        detail:
          description: Complete description of problem.
          type: string
        violations:
          description: List of violations found.
          type: array
          items:
            $ref: '#/components/schemas/BacenViolation'
        correlationId:
          description: Problem correlation identifier for support purposes.
          type: string
      example:
        type: https://pix.bcb.gov.br/api/v2/error/CobOperacaoInvalida
        title: Cobrança inválida.
        status: 400
        detail: A requisição que busca alterar ou criar uma cobrança para pagamento imediato não respeita o schema ou está semanticamente errada.
        correlationId: 3ec10393-04da-4c50-ae51-a1b66d8ed672
        violations:
          - reason: O campo cob.valor.original não respeita o schema.
            property: cob.valor.original
            value: '0'
    BacenViolation:
      title: Root Type for BacenViolation
      description: ''
      type: object
      properties:
        reason:
          description: Description of error.
          type: string
        property:
          description: Name of property.
          type: string
        value:
          description: Value of property.
          type: string
      example:
        reason: O campo cob.valor.original não respeita o schema.
        property: cob.valor.original
        value: '0'
    CNPJ:
      title: CNPJ
      pattern: /^\d{14}$/
      type: string
    CPF:
      title: CPF
      pattern: /^\d{11}$/
      type: string
    Devolucao:
      title: Reversal
      required:
        - id
        - rtrId
        - valor
        - horario
        - status
      type: object
      properties:
        horario:
          required:
            - solicitacao
          type: object
          properties:
            liquidacao:
              format: date-time
              title: Settlement Time
              description: Time at which the reversal was settled on the PSP.
              type: string
            solicitacao:
              format: date-time
              title: Request Time
              description: Time at which the reversal was requested on PSP.
              type: string
        id:
          $ref: '#/components/schemas/DevolucaoId'
        motivo:
          description: Description of the return status.
          maxLength: 140
          type: string
        rtrId:
          title: RtrId
          description: ReturnIdentification transiting PACS004.
          maxLength: 32
          minLength: 32
          type: string
          example: D12345678202009091000abcde123456
        status:
          title: Status
          description: Reversal Status.
          enum:
            - EM_PROCESSAMENTO
            - DEVOLVIDO
            - NAO_REALIZADO
          type: string
        valor:
          allOf:
            - $ref: '#/components/schemas/PixCobValor'
            - description: Value to return.
    DevolucaoId:
      title: Id of Reversal
      description: Id generated by the client to represent only a reversal.
      pattern: '[A-Za-z0-9-]{1,36}'
      type: string
    ErrorBody:
      title: Root Type for ErrorBody
      description: ''
      required:
        - message
        - errorCode
      type: object
      properties:
        errorCode:
          description: The error code
          type: string
        message:
          description: The error message
          type: string
      example:
        errorCode: string
        message: string
    Location:
      format: uri
      title: Payload Location
      description: Payload location to be informed when creating the charge.
      type: string
      example: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
    ParametrosConsultaBulkDueDate:
      title: Debt Collection Query Parameters
      description: Parameters used to query a debt collection.
      required:
        - inicio
        - fim
        - paginacao
      type: object
      properties:
        fim:
          format: date-time
          title: End Date
          description: End date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T17:00:00Z'
        inicio:
          format: date-time
          title: Initial Date
          description: Initial date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T00:00:00Z'
        paginacao:
          $ref: '#/components/schemas/PixCobPaginacao'
    ParametrosConsultaCob:
      title: Debt Collection Query Parameters
      description: Parameters used to query a debt collection.
      required:
        - inicio
        - fim
        - paginacao
      type: object
      properties:
        cnpj:
          allOf:
            - $ref: '#/components/schemas/CNPJ'
            - description: Filter by the borrower's CNPJ. It cannot be used at the same time as the CPF.
        cpf:
          allOf:
            - $ref: '#/components/schemas/CPF'
            - description: Filter by the borrower's CPF. It cannot be used at the same time as the CNPJ.
        fim:
          format: date-time
          title: End Date
          description: End date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T17:00:00Z'
        inicio:
          format: date-time
          title: Initial Date
          description: Initial date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T00:00:00Z'
        paginacao:
          $ref: '#/components/schemas/PixCobPaginacao'
        status:
          allOf:
            - $ref: '#/components/schemas/PixCobStatus'
            - description: Filter by the status of the debt collections.
    ParametrosConsultaCobDueDate:
      title: Debt Collection Query Parameters
      description: Parameters used to query a debt collection.
      required:
        - inicio
        - fim
        - paginacao
      type: object
      properties:
        cnpj:
          allOf:
            - $ref: '#/components/schemas/CNPJ'
            - description: Filter by the borrower's CNPJ. It cannot be used at the same time as the CPF.
        cpf:
          allOf:
            - $ref: '#/components/schemas/CPF'
            - description: Filter by the borrower's CPF. It cannot be used at the same time as the CNPJ.
        fim:
          format: date-time
          title: End Date
          description: End date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T17:00:00Z'
        inicio:
          format: date-time
          title: Initial Date
          description: Initial date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T00:00:00Z'
        locationPresente:
          description: Collection with location Present
          type: boolean
        paginacao:
          $ref: '#/components/schemas/PixCobPaginacao'
        status:
          allOf:
            - $ref: '#/components/schemas/PixCobStatus'
            - description: Filter by the status of the debt collections due date.
    ParametrosConsultaCobV2X:
      title: Debt Collection Query Parameters
      description: Parameters used to query a debt collection.
      required:
        - inicio
        - fim
        - paginacao
      type: object
      properties:
        cnpj:
          allOf:
            - $ref: '#/components/schemas/CNPJ'
            - description: Filter by the borrower's CNPJ. It cannot be used at the same time as the CPF.
        cpf:
          allOf:
            - $ref: '#/components/schemas/CPF'
            - description: Filter by the borrower's CPF. It cannot be used at the same time as the CNPJ.
        fim:
          format: date-time
          title: End Date
          description: End date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T17:00:00Z'
        inicio:
          format: date-time
          title: Initial Date
          description: Initial date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T00:00:00Z'
        locationPresente:
          description: ''
          type: boolean
        paginacao:
          $ref: '#/components/schemas/PixCobPaginacao'
        status:
          allOf:
            - $ref: '#/components/schemas/PixCobStatus'
            - description: Filter by the status of the debt collections.
    ParametrosConsultaLocV2X:
      title: Root Type for ParametrosConsultaLocV2X
      description: Parameters used to perform a location query.
      required:
        - paginacao
        - fim
        - inicio
      type: object
      properties:
        fim:
          format: date-time
          description: End date used in the query. Respects RFC 3339.
          type: string
        inicio:
          format: date-time
          description: Initial date used in the query. Respects RFC 3339.
          type: string
        paginacao:
          $ref: '#/components/schemas/PixCobPaginacao'
          description: Informations about result pagination.
          properties:
            itensPorPagina:
              format: int32
              type: integer
            paginaAtual:
              format: int32
              type: integer
        tipoCob:
          description: Type of locations to return in response.
          enum:
            - cob
            - cobv
          type: string
        txIdPresente:
          description: Flag to return data with txId in response or not.
          type: boolean
      example:
        fim: '2021-02-05T00:00:00Z'
        inicio: '2021-01-01T00:00:00Z'
        paginacao:
          itensPorPagina: 100
          paginaAtual: 0
          quantidadeDePaginas: 1
          quantidadeTotalDeItens: 1
        tipoCob: cob
        txIdPresente: false
    ParametrosConsultaPixIncoming:
      title: Pix Incoming Query Parameters
      description: Parameters used to perform a debt collection query.
      required:
        - inicio
        - fim
        - paginacao
      type: object
      properties:
        cnpj:
          allOf:
            - $ref: '#/components/schemas/CNPJ'
            - description: Filter by the payer's CNPJ. It cannot be used at the same time as the CPF.
        cpf:
          allOf:
            - $ref: '#/components/schemas/CPF'
            - description: Filter by the CPF of the payer. It cannot be used at the same time as the CNPJ.
        fim:
          format: date-time
          title: End Date
          description: End date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T17:00:00Z'
        inicio:
          format: date-time
          title: Initial Date
          description: Initial date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T00:00:00Z'
        paginacao:
          $ref: '#/components/schemas/PixCobPaginacao'
        txId:
          $ref: '#/components/schemas/TxId'
    ParametrosConsultaPixIncomingV2X:
      title: Pix Incoming Query Parameters
      description: Parameters used to perform a debt collection query.
      required:
        - inicio
        - fim
        - paginacao
      type: object
      properties:
        cnpj:
          allOf:
            - $ref: '#/components/schemas/CNPJ'
            - description: Filter by the payer's CNPJ. It cannot be used at the same time as the CPF.
        cpf:
          allOf:
            - $ref: '#/components/schemas/CPF'
            - description: Filter by the CPF of the payer. It cannot be used at the same time as the CNPJ.
        devolucaoPresente:
          description: ''
          type: boolean
        fim:
          format: date-time
          title: End Date
          description: End date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T17:00:00Z'
        inicio:
          format: date-time
          title: Initial Date
          description: Initial date used in the query. Respects RFC 3339.
          type: string
          example: '2020-04-01T00:00:00Z'
        paginacao:
          $ref: '#/components/schemas/PixCobPaginacao'
        txId:
          $ref: '#/components/schemas/TxId'
        txIdPresente:
          description: ''
          type: boolean
    PixBacenBulkCobDueDate:
      title: Root Type for PixBacenBulkCobDueDate
      description: ''
      required:
        - calendario
        - chave
        - devedor
        - valor
        - txid
      type: object
      allOf:
        - $ref: '#/components/schemas/PixBacenCobDueDateCalendarioRequest'
        - $ref: '#/components/schemas/PixBacenCobDueDateDevedor'
        - type: object
          properties:
            loc:
              $ref: '#/components/schemas/PixBacenCobLocation'
            txid:
              $ref: '#/components/schemas/TxId'
            valor:
              $ref: '#/components/schemas/PixBacenCobDueDateValor'
        - $ref: '#/components/schemas/PixBacenCobDueDateBase'
    PixBacenBulkCobDueDatePATCHRequest:
      description: ''
      required:
        - Descricao
        - Cobsv
      type: object
      properties:
        cobsv:
          description: A list collection due date.
          type: array
          items:
            $ref: '#/components/schemas/PixBacenBulkCobDueDatePatch'
        descricao:
          title: Description bulk
          description: Bulk description.
          type: string
    PixBacenBulkCobDueDatePUTRequest:
      description: ''
      required:
        - Descricao
        - Cobsv
        - descricao
        - cobsv
      type: object
      properties:
        cobsv:
          description: A list collection due date.
          maximum: 24
          minimum: 1
          type: array
          items:
            $ref: '#/components/schemas/PixBacenBulkCobDueDate'
        descricao:
          title: Description bulk
          description: Bulk description.
          type: string
    PixBacenBulkCobDueDatePatch:
      title: Root Type for PixBacenBulkCobDueDatePatch
      description: ''
      type: object
      allOf:
        - $ref: '#/components/schemas/PixBacenCobDueDateCalendarioRequest'
        - $ref: '#/components/schemas/PixBacenCobDueDateDevedor'
        - required:
            - txid
          type: object
          properties:
            loc:
              $ref: '#/components/schemas/PixBacenCobLocation'
            status:
              description: Collection Status
              enum:
                - REMOVIDA_PELO_USUARIO_RECEBEDOR
              type: string
            txid:
              $ref: '#/components/schemas/TxId'
            valor:
              $ref: '#/components/schemas/PixBacenCobDueDateValor'
        - $ref: '#/components/schemas/PixBacenCobDueDateBase'
    PixBacenBulkCobvGet:
      title: Root Type for PixBacenBulkCobvGet
      description: ''
      required:
        - cobsv
        - criacao
        - descricao
        - id
      type: object
      properties:
        cobsv:
          description: A list collection due date.
          type: array
          items:
            $ref: '#/components/schemas/PixBacenBulkCobvGetItems'
        criacao:
          format: date-time
          title: Bulk Creation Date.
          description: Date and time the charge was created. Complies with RFC 3339.
          type: string
          readOnly: true
        descricao:
          title: Bulk Description
          description: Bulk description.
          type: string
        id:
          format: int64
          title: Bulk Id
          description: Bulk id.
          type: integer
      example:
        cobsv:
          - problema:
              correlationId: f79d5608-da44-49bb-b959-fa1f2de2fb1b
              detail: Requisição de participante autenticado que viola alguma regra de autorização.
              status: 403
              title: Acesso Negado
              type: https://pix.bcb.gov.br/api/v2/error/AcessoNegado
              violations:
                - property: cobv.loc.id
                  reason: o location referenciado por cobv.loc.id já está sendo utilizado por outra cobrança.
            status: NEGADA
            txid: '000000000000000000000000000000011'
          - problema:
              correlationId: b45b2102-864c-49a9-a308-c11bfe713b25
              detail: Requisição de participante autenticado que viola alguma regra de autorização.
              status: 403
              title: Acesso Negado
              type: https://pix.bcb.gov.br/api/v2/error/AcessoNegado
              violations:
                - property: cobv.loc.id
                  reason: o location referenciado por cobv.loc.id já está sendo utilizado por outra cobrança.
            status: NEGADA
            txid: '000000000000000000000000000000021'
        criacao: '2021-06-29T11:02:53Z'
        descricao: Criação lote 05 atualizado
        id: 30
    PixBacenBulkCobvGetItems:
      title: Root Type for PixBacenBulkCobvGetItems
      description: ''
      required:
        - status
        - txid
      type: object
      properties:
        criacao:
          format: date-time
          description: Date and time the charge was created. Complies with RFC 3339.
          type: string
        problema:
          $ref: '#/components/schemas/BacenErrorResponse'
        status:
          title: Status of collection creation/change request in bulk creation context
          enum:
            - EM_PROCESSAMENTO
            - CRIADA
            - NEGADA
          type: string
        txid:
          $ref: '#/components/schemas/TxId'
      example:
        problema:
          correlationId: b45b2102-864c-49a9-a308-c11bfe713b25
          detail: Requisição de participante autenticado que viola alguma regra de autorização.
          status: 403
          title: Acesso Negado
          type: https://pix.bcb.gov.br/api/v2/error/AcessoNegado
          violations:
            - property: cobv.loc.id
              reason: o location referenciado por cobv.loc.id já está sendo utilizado por outra cobrança.
        status: NEGADA
        txid: '000000000000000000000000000000021'
    PixBacenBulksDueDateConsultadas:
      title: Bulk Debt Collection Due Date
      required:
        - parametros
        - lotes
      type: object
      properties:
        lotes:
          title: Bulks Debt collection List
          description: A list of bulks.
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PixBacenBulkCobvGet'
              - required:
                  - txid
        parametros:
          $ref: '#/components/schemas/ParametrosConsultaBulkDueDate'
    PixBacenCobDueDateCalendarioBase:
      title: Root Type for CalendarioBase
      description: ''
      required:
        - dataDeVencimento
        - validadeAposVencimento
      type: object
      properties:
        dataDeVencimento:
          format: date
          description: It is a date, in the format `yyyy-mm-dd`, according to ISO 8601. It is the due date of the collection. The charge can be honored up to and including that day, at any time of the day.
          type: string
        validadeAposVencimento:
          format: int32
          description: This is the number of calendar days after the due date on which the charge can be paid. If this period has expired and the charge has not been paid, it will remain ACTIVE.
          default: '30'
          type: integer
      example:
        dataDeVencimento: '2021-12-16'
        validadeAposVencimento: 30
    PixBacenCobDueDateCalendarioBaseResponse:
      title: Root Type for CalendarioBase
      description: ''
      required:
        - criacao
        - dataDeVencimento
        - validadeAposVencimento
      type: object
      properties:
        criacao:
          format: date-time
          description: Timestamp that indicates the moment when the collection was created. Respects the format defined in RFC 3339.
          type: string
        dataDeVencimento:
          format: date
          description: It is a date, in the format `yyyy-mm-dd`, according to ISO 8601. It is the due date of the collection. The charge can be honored up to and including that day, at any time of the day.
          type: string
        validadeAposVencimento:
          format: int32
          description: This is the number of calendar days after the due date on which the charge can be paid. If this period has expired and the charge has not been paid, it will remain ACTIVE.
          default: '30'
          type: integer
      example:
        dataDeVencimento: '2021-12-16'
        validadeAposVencimento: 30
    PixBacenCobDueDateDadosComplementaresPessoa:
      type: object
      properties:
        logradouro:
          title: Logradouro
          description: User address.
          maxLength: 200
          type: string
        cidade:
          title: Cidade
          description: User city.
          maxLength: 200
          type: string
        uf:
          title: UF
          description: User UF.
          maxLength: 2
          type: string
        cep:
          title: CEP
          description: User zip code.
          maxLength: 8
          type: string
    PixBacenCobDueDateCalendarioRequest:
      title: Root Type for Calendar.
      type: object
      properties:
        calendario:
          description: The fields nested under the calendar identifier organize information regarding billing time tracking.
          allOf:
            - $ref: '#/components/schemas/PixBacenCobDueDateCalendarioBase'
      example:
        dataDeVencimento: '2021-12-16'
        validadeAposVencimento: 30
    PixBacenCobDueDateCalendarioResponse:
      title: Root Type for Calendar.
      required:
        - calendario
      type: object
      properties:
        calendario:
          description: The fields nested under the calendar identifier organize information regarding billing time tracking.
          allOf:
            - $ref: '#/components/schemas/PixBacenCobDueDateCalendarioBaseResponse'
      example:
        criacao: '2021-01-13T23:20:24Z'
        dataDeVencimento: '2021-12-16'
        validadeAposVencimento: 30
    PixBacenCobDueDateCreateRequest:
      title: Root Type for PixBacenCobDueDateCreateRequest
      description: ''
      required:
        - calendario
        - chave
        - devedor
        - valor
      type: object
      allOf:
        - $ref: '#/components/schemas/PixBacenCobDueDateCalendarioRequest'
        - $ref: '#/components/schemas/PixBacenCobDueDateDevedor'
        - type: object
          properties:
            loc:
              $ref: '#/components/schemas/PixBacenCobLocation'
            valor:
              $ref: '#/components/schemas/PixBacenCobDueDateValor'
        - $ref: '#/components/schemas/PixBacenCobDueDateBase'
    PixBacenCobDueDateDevedor:
      title: Root Type for Devedor.
      type: object
      properties:
        devedor:
          oneOf:
            - $ref: '#/components/schemas/PessoaFisica'
            - $ref: '#/components/schemas/PessoaJuridica'
          description: The fields nested under the debtor object are optional and identify the debtor, that is, the person or institution to whom the collection is addressed. It does not necessarily identify who will actually make the payment. A CPF may be the debtor of a charge, but another CPF may actually pay the document. The field devedor.cpf and field devedor.cnpj are not allowed to be filled at the same time. If the field devedor.cnpj is filled, then the field devedor.cpf cannot be filled, and vice versa. If the devedor.name field is filled, then either a devedor.cpf or a debtor.cnpj field must be filled in..
          allOf:
            - type: object
              properties:
                email:
                  title: Email
                  description: User email.
                  maxLength: 200
                  type: string
            - $ref: '#/components/schemas/PixBacenCobDueDateDadosComplementaresPessoa'
    PixBacenCobDueDateRecebedor:
      required:
        - logradouro
        - cidade
        - uf
        - cep
      type: object
      properties:
        recebedor:
          oneOf:
            - $ref: '#/components/schemas/PessoaFisica'
            - type: object
              allOf:
                - $ref: '#/components/schemas/PessoaJuridica'
                - type: object
                  properties:
                    nomeFantasia:
                      title: Fantasy name.
                      description: Fantasy name
                      maxLength: 200
                      type: string
          description: The receiving object organizes the information about the collection creditor.
          allOf:
            - $ref: '#/components/schemas/PixBacenCobDueDateDadosComplementaresPessoa'
    PixBacenCobDueDateValor:
      title: Collection amount due.
      description: Monetary values.
      required:
        - original
      type: object
      properties:
        abatimento:
          title: Abatement applied.
          description: Abatement applied to collection.
          required:
            - modalidade
            - valorPerc
          properties:
            modalidade:
              format: int32
              title: Abatement modality.
              description: |
                ##### Abatement modality, according to the domains table.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>Valor Fixo</td><td>1</td></tr><tr><td>Percentual</td><td>2</td></tr></table>
              maximum: 2
              minimum: 1
              type: integer
            valorPerc:
              title: Abatimentos
              description: Abatement or other deductions applied to the document, in absolute or percentage of the original value of the document, according to "valor.abatimento.modalidade".
              pattern: \d{1,10}\.\d{2}
              type: string
        desconto:
          oneOf:
            - type: object
              properties:
                descontoDataFixa:
                  title: Discount List.
                  description: Absolute discounts applied to collection.
                  maxItems: 3
                  minItems: 1
                  uniqueItems: true
                  type: array
                  items:
                    required:
                      - data
                      - valorPerc
                    allOf:
                      - properties:
                          data:
                            format: date
                            title: Deadline for the absolute discount of the charge.
                            description: Discounts for prepayment, with fixed date. Matrix with up to three elements, each element consisting of a pair "date and valuePerc", to establish percentage or absolute discounts, up to that payment date. It is a date, in the format `yyyy-mm-dd`, according to ISO 8601. The discount date must be less than the due date of the collection.
                            type: string
                            example: '2020-04-01'
                      - properties:
                          valorPerc:
                            title: Absolute discount amount.
                            description: Discount in absolute value or percentage per day, working or accrued, as per valor.desconto.modalidade
                            pattern: \d{1,10}\.\d{2}
                            type: string
            - required:
                - valorPerc
              type: object
              properties:
                valorPerc:
                  title: Rebates
                  description: Rebates or other deductions applied to the document, in absolute or percentage of the original value of the document.
                  pattern: \d{1,10}\.\d{2}
                  type: string
          title: Discounts applied.
          description: Discounts applied to the charge.
          required:
            - modalidade
          allOf:
            - type: object
              properties:
                modalidade:
                  format: int32
                  title: Discounts modality.
                  description: |
                    ##### Discount mode, according to the domains table.
                    <table><tr><th>Description</th><th>Domain</th></tr> <tr><td>Valor Fixo até a[s] data[s] informada[s]</td><td>1</td></tr><tr><td>Percentual até a data informada</td><td>2</td></tr><tr><td>Valor por antecipação dia corrido</td><td>3</td></tr><tr><td>Valor por antecipação dia útil</td><td>4</td></tr><tr><td>Percentual por antecipação dia corrido</td><td>5</td></tr><tr><td>Percentual por antecipação dia útil</td><td>6</td></tr></table>
                  maximum: 6
                  minimum: 1
                  type: integer
        juros:
          title: Interest applied.
          description: Interest applied to collection.
          required:
            - modalidade
            - valorPerc
          type: object
          properties:
            modalidade:
              format: int32
              title: Interest modality.
              description: |
                ##### Interest rate, according to the domains table.
                <table> <tr><th>Description</th><th>Domain</th></tr> <tr><td>Valor (dias corridos)</td><td>1</td></tr><tr><td>Percentual ao dia (dias corridos)</td><td>2</td></tr><tr><td>Percentual ao mês (dias corridos)</td><td>3</td></tr><tr><td>Percentual ao ano (dias corridos)</td><td>4</td></tr><tr><td>Valor (dias úteis)</td><td>5</td></tr><tr><td>Percentual ao dia (dias úteis)</td><td>6</td></tr><tr><td>Percentual ao mês (dias úteis)</td><td>7</td></tr><tr><td>Percentual ao ano (dias úteis)</td><td>8</td></tr> </table>
              maximum: 8
              minimum: 1
              type: integer
            valorPerc:
              title: Valor
              description: Interest of the document in absolute or percentage value, according to "valor.juros.modalidade".
              pattern: \d{1,10}\.\d{2}
              type: string
        multa:
          title: Fine applied.
          description: Fine applied to the collection.
          required:
            - modalidade
            - valorPerc
          type: object
          properties:
            modalidade:
              format: int32
              title: Fine modality.
              description: |
                ##### Mode of fine, according to the table of domains.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>Valor Fixo</td><td>1</td></tr><tr><td>Percentual</td><td>2</td></tr></table>
              maximum: 2
              minimum: 1
              type: integer
            valorPerc:
              title: Absolute fine amount.
              description: Fine of the document in absolute or percentage value, according to "valor.multa.modalidade".
              pattern: \d{1,10}\.\d{2}
              type: string
        original:
          title: Valor
          description: Original collection amount.
          pattern: \d{1,10}\.\d{2}
          type: string
    PixBacenCobLocation:
      title: Root Type for Location
      description: Payload location informations.
      required:
        - id
      type: object
      properties:
        id:
          format: int64
          description: Location identifier to be informed when creating the collection.
          type: integer
      example:
        id: 100
    PixBacenCobLocationResponse:
      title: Root Type for LocationResponse
      description: Payload location identifier.
      required:
        - criacao
        - id
        - location
        - tipoCob
        - pactualId
      type: object
      properties:
        criacao:
          format: date-time
          description: Date and time the location was created. Respects RFC 3339.
          type: string
        id:
          format: int64
          description: Location identifier to be informed when creating the collection.
          type: integer
        location:
          description: Payload location to be informed when creating the collection.
          type: string
        tipoCob:
          description: Collection type
          enum:
            - COB
            - COBV
          type: string
        pactualId:
          description: The pactualId identifier to be informed when creating the collection.
          type: string
      example:
        criacao: '2021-01-12T15:08:31.849Z'
        id: 100
        location: api.dev.developer.btgpactual.com/qr/v2/cobv/ce8afe6f2a4a414e8b03d769c609d132
        tipoCob: COB
        pactualId: dd8e783e-f9aa-4b79-b555-d7096b2840c1
    PixBacenCobsDueDateConsultadas:
      title: Debt Collection Due Date
      required:
        - parametros
        - cobs
      type: object
      properties:
        cobs:
          title: Debt collection List
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PixBacenCobDueDateReponseWithPix'
              - required:
                  - status
                  - txid
                  - idCob
        parametros:
          $ref: '#/components/schemas/ParametrosConsultaCobDueDate'
    PixBacenLoc:
      title: Root Type for PixBacenLoc
      description: ''
      required:
        - criacao
        - id
        - location
        - tipoCob
      type: object
      properties:
        criacao:
          format: date-time
          description: Date and time the location was created. Respects RFC 3339.
          type: string
        id:
          format: int32
          description: Identifier of the location to be informed when creating the charge.
          type: integer
        location:
          description: Payload location to be informed when creating the charge.
          maxLength: 77
          type: string
        tipoCob:
          description: Type of locations to return in response.
          enum:
            - cob
            - cobv
          type: string
        txid:
          $ref: '#/components/schemas/TxId'
      example:
        criacao: '2021-01-01T00:00:00Z'
        id: 1
        location: api.dev.developer.btgpactual.com/qr/v2/cabe4117ead3455dbfab4f7400cbc9c1
        tipoCob: cob
        txId: 674b9386de24404b9666ec9d44f511dc
    PixBacenLocWithoutTxid:
      title: Root Type for PixBacenLoc
      description: ''
      required:
        - criacao
        - id
        - location
        - tipoCob
      type: object
      properties:
        criacao:
          format: date-time
          description: Date and time the location was created. Respects RFC 3339.
          type: string
        id:
          format: int32
          description: Identifier of the location to be informed when creating the charge.
          type: integer
        location:
          description: Payload location to be informed when creating the charge.
          maxLength: 77
          type: string
        tipoCob:
          description: Type of locations to return in response.
          enum:
            - cob
            - cobv
          type: string
      example:
        criacao: '2021-01-01T00:00:00Z'
        id: 1
        location: api.dev.developer.btgpactual.com/qr/v2/cabe4117ead3455dbfab4f7400cbc9c1
        tipoCob: cob
    PixCobRevisadaV2X:
      title: Revised Debt Collection
      description: Data sent for debt collection review by Pix API
      type: object
      allOf:
        - type: object
          properties:
            calendario:
              $ref: '#/components/schemas/BacenCobCalendario'
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding debt collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobExpiracao'
            status:
              title: New Debt Collection Status
              description: The only status that can be informed in the review of the Debt Collection is the REMOVIDA_PELO_USUARIO_RECEBEDOR
              enum:
                - ATIVA
                - CONCLUIDA
                - REMOVIDA_PELO_USUARIO_RECEBEDOR
                - REMOVIDA_PELO_PSP
              type: string
              allOf:
                - $ref: '#/components/schemas/PixCobStatus'
            loc:
              $ref: '#/components/schemas/PixBacenCobLocation'
              title: Location
              description: The field nested under the loc to associate this collection to a location.
              allOf:
                - $ref: '#/components/schemas/PixCobLocation'
        - $ref: '#/components/schemas/PixCobBase'
      example:
        calendario:
          expiracao: '3600'
        loc:
          id: 100
        devedor:
          cpf: '11122233344'
          nome: Teste
        valor:
          original: '1.23'
          modalidadeAlteracao: 0
        chave: teste@teste.com
        solicitacaoPagador: Pergunta de teste?
        infoAdicionais:
          - nome: chave
            valor: valor
    PixCobCalendar:
      title: Root Type for PixCobCalendar
      description: The fields nested under the calendar identifier organize information regarding debt collection time control.
      required:
        - expiration
      type: object
      properties:
        expiration:
          format: int32
          description: 'The expiration in seconds. Default: 86400 (1 day).'
          type: integer
      example:
        expiration: 86400
    PixCobValorOriginal:
      title: Root Type for PixCobValorOriginal
      description: ''
      required:
        - original
      type: object
      properties:
        original:
          description: The original value.
          pattern: \d{1,10}\.\d{2}
          type: string
        changeType:
          format: int32
          description: This field determines whether the final amount of the document can be changed by the payer. In the absence of this field, it is assumed that the amount of the dunning document cannot be changed, that is, the value 0 is assumed. If the field is present and has a value of 1, then it is determined that the final dunning amount can be changed by the payer.
          maximum: 1
          minimum: 0
          type: integer
      example:
        original: '1.22'
        changeType: 0
    PixPaymentResponseBodyCreditParty:
      title: Credit Party
      description: ''
      required:
        - bank
        - account
        - taxId
        - personType
        - name
        - accountType
      type: object
      properties:
        key:
          description: The key's value.
          type: string
        bank:
          description: The bank ISPB.
          pattern: \d{8}
          type: string
        branch:
          description: The branch number.
          pattern: \d{1,4}
          type: string
        account:
          description: The account number.
          pattern: \d{1,20}
          type: string
        name:
          description: The person's name.
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
          type: string
        personType:
          description: The person's type
          enum:
            - NATURAL_PERSON
            - LEGAL_PERSON
          type: string
        accountType:
          description: The account type.
          enum:
            - CACC
            - SLRY
            - SVGS
            - TRAN
          type: string
      example:
        key: string
        bank: 0
        branch: 0
        account: 0
        name: string
        taxId: string
        personType: 1
        accountType: 1
    PixPaymentResponseBodyDebitParty:
      title: Credit Party
      description: ''
      required:
        - bank
        - account
        - taxId
        - personType
        - name
        - accountType
      type: object
      properties:
        bank:
          description: The bank ISPB.
          pattern: \d{8}
          type: string
        branch:
          description: The branch number.
          pattern: \d{1,4}
          type: string
        account:
          description: The account number.
          pattern: \d{1,20}
          type: string
        name:
          description: The person's name.
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
          type: string
        personType:
          description: The person's type
          enum:
            - NATURAL_PERSON
            - LEGAL_PERSON
          type: string
        accountType:
          description: The account type.
          enum:
            - CACC
            - SLRY
            - SVGS
            - TRAN
          type: string
      example:
        key: string
        bank: 0
        branch: 0
        account: 0
        name: string
        taxId: string
        personType: 1
        accountType: 1
    PixCobRevisada:
      title: Revised Debt Collection
      description: Data sent for debt collection review by Pix API
      type: object
      allOf:
        - type: object
          properties:
            calendario:
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding debt collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobExpiracao'
            status:
              title: New Debt Collection Status
              description: The only status that can be informed in the review of the Debt Collection is the REMOVIDA_PELO_USUARIO_RECEBEDOR
              allOf:
                - $ref: '#/components/schemas/PixCobStatus'
        - $ref: '#/components/schemas/PixCobBase'
    PixCob:
      title: Pix received
      required:
        - endToEndId
        - valor
        - horario
      type: object
      properties:
        devolucoes:
          title: Devoluções
          type: array
          items:
            $ref: '#/components/schemas/Devolucao'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        horario:
          format: date-time
          title: Horário
          description: Time when Pix was processed on the PSP.
          type: string
        infoPagador:
          title: Free Payer Information.
          maxLength: 140
          type: string
        txid:
          $ref: '#/components/schemas/TxId'
        valor:
          allOf:
            - $ref: '#/components/schemas/PixCobValor'
            - description: Pix value.
    PixCobApresentacao:
      title: Presentation
      required:
        - apresentacao
      type: object
      properties:
        apresentacao:
          format: date-time
          title: QR Code Presentation Timestamp
          description: Timestamp which indicates the time at which the JSON payload representing the debt was recovered. That is, ideally, it is the moment when the user made the capture of the QR Code to verify the payment data. It respects the format defined in RFC 3339.
          type: string
    PixCobBase:
      title: Base Debt Collection
      description: Attributes common to all Debt Collection entities
      type: object
      properties:
        chave:
          title: DICT receiver key
          description: The key field, mandatory, determines the Pix key registered in DICT that will be used for debt collection. This key will be read by the payer's PSP application for consultation with DICT, which will return the information that will identify the receiver of the debt.
          maxLength: 77
          type: string
        devedor:
          oneOf:
            - $ref: '#/components/schemas/PessoaFisica'
            - $ref: '#/components/schemas/PessoaJuridica'
          description: The fields nested under the borrower object are optional and identify the borrower, that is, the person or the institution to which the debt is addressed. It does not necessarily identify who will effectively make the payment. A CPF may be the borrower of a debt, but it may happen of another CPF to effectively pay the document. It is not allowed that the field devedor.cpf and devedor.cnpj field are filled at the same time. If the devedor.cnpj field is then the devedor.cpf field cannot be filled, and vice versa. If the field devedor.nome is filled in, so it must exist either a devedor.cpf or a devedor.cnpj field filled.
        infoAdicionais:
          title: Additional information
          description: Each respective additional information contained in the list (name and value) must be presented to the payer.
          maximum: 50
          type: array
          items:
            required:
              - nome
              - valor
            type: object
            properties:
              nome:
                title: Name
                description: Name Field.
                maxLength: 50
                type: string
              valor:
                title: Value
                description: Data Field.
                maxLength: 200
                type: string
        solicitacaoPagador:
          title: Request to payer
          description: The solicitacaoPagador field, optional, determines a text to be presented to the payer so that he can enter a correlated information, in free format, to be sent to the receiver. This text will be filled in pacs.008 by the payer's PSP in the RemittanceInformation <RmtInf> field. The size of the field <RmtInf> in pacs.008 is limited to 140 characters.
          maxLength: 140
          type: string
        valor:
          $ref: '#/components/schemas/CobrancaValor'
          description: |-
            All fields that indicate monetary values follow the format of ID 54 of the EMV/BR Code specification for QR Codes. The decimal separator is the dot character. The thousand separator is not applicable. Examples of standard values: "0.00", "1.00", "123.99", "123456789.23".

            It is not allowed to fill the objects "change" and "withdrawal" simultaneously.
          required:
            - original
          properties:
            modalidadeAlteracao:
              format: int32
              title: Change Type
              description: This field determines whether the final amount of the document can be changed by the payer. In the absence of this field, it is assumed that the amount of the dunning document cannot be changed, that is, the value 0 is assumed. If the field is present and has a value of 1, then it is determined that the final dunning amount can be changed by the payer.
              maximum: 1
              minimum: 0
              type: integer
            original:
              allOf:
                - $ref: '#/components/schemas/PixCobValor'
                - title: Value
                  description: Original debt amount.
    PixCobBaseResponseV2x:
      title: Base Debt Collection
      description: Attributes common to all Debt Collection entities
      type: object
      properties:
        chave:
          title: DICT receiver key
          description: The key field, mandatory, determines the Pix key registered in DICT that will be used for debt collection. This key will be read by the payer's PSP application for consultation with DICT, which will return the information that will identify the receiver of the debt.
          maxLength: 77
          type: string
        infoAdicionais:
          title: Additional information
          description: Each respective additional information contained in the list (name and value) must be presented to the payer.
          maximum: 50
          type: array
          items:
            required:
              - nome
              - valor
            type: object
            properties:
              nome:
                title: Name
                description: Name Field.
                maxLength: 50
                type: string
              valor:
                title: Value
                description: Data Field.
                maxLength: 200
                type: string
        solicitacaoPagador:
          title: Request to payer
          description: The solicitacaoPagador field, optional, determines a text to be presented to the payer so that he can enter a correlated information, in free format, to be sent to the receiver. This text will be filled in pacs.008 by the payer's PSP in the RemittanceInformation <RmtInf> field. The size of the field <RmtInf> in pacs.008 is limited to 140 characters.
          maxLength: 140
          type: string
        valor:
          $ref: '#/components/schemas/PixCobValorOriginal'
          description: 'All fields that indicate monetary values follow the format of ID 54 of the EMV/BR Code specification for QR Codes. The decimal separator is the dot character. The thousand separator is not applicable. Examples of standard values: "0.00", "1.00", "123.99", "123456789.23".'
          required:
            - original
          properties:
            original:
              allOf:
                - $ref: '#/components/schemas/PixCobValor'
                - title: Value
                  description: Original debt amount.
    PixCobCompleta:
      title: Complete Debt Collection
      allOf:
        - $ref: '#/components/schemas/PixCobGerada'
        - $ref: '#/components/schemas/PixCobSolicitada'
        - title: Cob
          required:
            - status
          type: object
          properties:
            pix:
              title: Pix Received
              type: array
              items:
                $ref: '#/components/schemas/PixCob'
    PixCobCompletaV2X:
      title: Complete Debt Collection
      allOf:
        - $ref: '#/components/schemas/PixCobGeradaV2X'
        - $ref: '#/components/schemas/PixCobSolicitadaV2X'
        - title: Cob
          required:
            - status
          type: object
          properties:
            pix:
              title: Pix Received
              type: array
              items:
                $ref: '#/components/schemas/PixCobV2XGet'
    PixCobCriacao:
      title: Creation
      required:
        - criacao
      type: object
      properties:
        criacao:
          format: date-time
          title: Creation Date
          description: Timestamp that indicates the moment when the collection was created. It respects the format defined in RFC 3339.
          type: string
    PixCobDataDeVencimento:
      title: Expiration Date
      required:
        - dataDeVencimento
        - validadeAposVencimento
      type: object
      properties:
        dataDeVencimento:
          format: date
          title: Collection due date
          description: This is a date, in the format `yyyy-mm-dd`, according to ISO 8601. It is the expiration date of the collection. The collection can be honored until that day, including at any time of the day.
          type: string
          example: '2020-04-01'
        validadeAposVencimento:
          format: int32
          title: Validity after expiry
          description: This is the number of calendar days after the due date when the collection can be paid. Case Once this period has expired and the charge has not been paid, it will remain ACTIVE.
          default: '30'
          type: integer
    PixCobExpiracao:
      title: Expiration
      type: object
      properties:
        expiracao:
          format: int32
          title: Debt collection life time, specified in seconds.
          description: |
            Debt collection life time, specified in seconds from the creation date (Calendario.criacao)  Default: 86400 (1 day)
          type: integer
          example: '3600'
    PixCobGerada:
      title: Generated Debt Collection
      description: Data created or changed from debt collection via API Pix
      required:
        - location
        - txid
        - calendario
        - revisao
        - status
        - valor
        - chave
      type: object
      allOf:
        - type: object
          properties:
            calendario:
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding debt collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobCriacao'
                - $ref: '#/components/schemas/PixCobExpiracao'
            location:
              $ref: '#/components/schemas/Location'
            revisao:
              $ref: '#/components/schemas/Revisao'
            status:
              $ref: '#/components/schemas/PixCobStatus'
            txid:
              $ref: '#/components/schemas/TxId'
        - $ref: '#/components/schemas/PixCobBase'
    PixCobLocation:
      title: Expiration
      required:
        - id
        - location
        - tipoCob
      type: object
      properties:
        id:
          title: Location Unique Identifier.
          description: |
            The location unique identifier
          type: string
          example: 4f1b794d-2308-49ff-891c-cb49baf3632e
        location:
          description: The location's URL (without HTTPS://)
          type: string
          example: pix.example.com/qr/2353c790eefb11eaadc10242ac120002
        tipoCob:
          description: The collection type
          enum:
            - COB
            - COBV
          type: string
          example: COB
    PixCobPaginacao:
      title: Paginação
      required:
        - paginaAtual
        - itensPorPagina
        - quantidadeDePaginas
        - quantidadeTotalDeItens
      type: object
      properties:
        paginaAtual:
          title: Current page
          description: Page number recovered.
          minimum: 0
          type: integer
        itensPorPagina:
          title: Items per page
          description: Number of records returned on page.
          minimum: 1
          type: integer
        quantidadeDePaginas:
          title: Number of pages
          description: Number of pages available for query.
          minimum: 1
          type: integer
        quantidadeTotalDeItens:
          title: Total quantity of items
          description: Total quantity of available items according to the parameters informed.
          minimum: 0
          type: integer
    PixCobPayload:
      title: Payload Json Debt Collection
      description: Debt collection data accessed by Payload Json
      required:
        - txid
        - calendario
        - revisao
        - status
        - valor
        - chave
      type: object
      allOf:
        - type: object
          properties:
            calendario:
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobCriacao'
                - $ref: '#/components/schemas/PixCobApresentacao'
                - $ref: '#/components/schemas/PixCobExpiracao'
            revisao:
              $ref: '#/components/schemas/Revisao'
            status:
              $ref: '#/components/schemas/PixCobStatus'
            txid:
              $ref: '#/components/schemas/TxId'
        - $ref: '#/components/schemas/PixCobBase'
    PixCobPayloadDueDate:
      title: Payload Json Debt Collection
      description: Debt collection data accessed by Payload Json
      required:
        - txid
        - calendario
        - revisao
        - status
        - valor
        - chave
        - devedor
        - recebedor
      type: object
      allOf:
        - type: object
          properties:
            calendario:
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobCriacao'
                - $ref: '#/components/schemas/PixCobApresentacao'
                - $ref: '#/components/schemas/PixCobDataDeVencimento'
            devedor:
              oneOf:
                - $ref: '#/components/schemas/PessoaFisica'
                - $ref: '#/components/schemas/PessoaJuridica'
              description: The fields nested under the borrower object are optional and identify the borrower, that is, the person or the institution to which the debt is addressed. It does not necessarily identify who will effectively make the payment. A CPF may be the borrower of a debt, but it may happen of another CPF to effectively pay the document. It is not allowed that the field devedor.cpf and devedor.cnpj field are filled at the same time. If the devedor.cnpj field is then the devedor.cpf field cannot be filled, and vice versa. If the field devedor.nome is filled in, so it must exist either a devedor.cpf or a devedor.cnpj field filled.
        - $ref: '#/components/schemas/PixBacenCobDueDateRecebedor'
        - type: object
          properties:
            revisao:
              $ref: '#/components/schemas/Revisao'
            status:
              $ref: '#/components/schemas/PixCobStatus'
            txid:
              $ref: '#/components/schemas/TxId'
            valor:
              $ref: '#/components/schemas/PixCobPayloadDueDateValor'
        - $ref: '#/components/schemas/PixBacenCobDueDateBase'
      example:
        calendario:
          apresentacao: '2021-02-10T17:54:32Z'
          criacao: '2021-02-10T16:33:14Z'
          dataDeVencimento: '2021-12-16'
          validadeAposVencimento: 10
        chave: '+552197993512412'
        devedor:
          cpf: '12345678901'
          nome: jose da silva
        infoAdicionais:
          - nome: string
            valor: string
        recebedor:
          cep: '88888333'
          cidade: Curitiba
          cnpj: '12345678909876'
          logradouro: Rua Agua verde
          nome: Nome Comerciante
          nomeFantasia: Nome Fantasia
          uf: PR
        revisao: 0
        solicitacaoPagador: string
        status: ATIVA
        txid: '00000000000000000000000000000048'
        valor:
          abatimento: '2.00'
          desconto: '20.00'
          final: '78.00'
          juros: '0.00'
          multa: '0.00'
          original: '100.00'
    PixCobPayloadDueDateValor:
      title: Amount of collection with calculated maturity returned by payload
      description: 'All fields indicating monetary values follow the format of ID 54 of the EMV/BR Code specification for QR Codes. The decimal separator is the dot character. The thousand separator is not applicable. Examples of pattern-sticking values: "1.00", "123.99", "123456789.23'
      required:
        - final
      type: object
      properties:
        abatimento:
          title: Abatement applied
          description: Abatement applied to collection
          pattern: \d{1,10}\.\d{2}
          type: string
        desconto:
          title: Discount applied
          description: Discounts applied to collection
          pattern: \d{1,10}\.\d{2}
          type: string
        final:
          title: Final value
          description: Final value of the collection
          pattern: \d{1,10}\.\d{2}
          type: string
        juros:
          title: Interest applied
          description: Interest applied to the collection
          pattern: \d{1,10}\.\d{2}
          type: string
        multa:
          title: Fine applied
          description: Fine applied to collection
          pattern: \d{1,10}\.\d{2}
          type: string
        original:
          title: Value
          description: Original collection value
          pattern: \d{1,10}\.\d{2}
          type: string
    PixCobPayloadResponseV2x:
      title: Payload Json Debt Collection
      description: Debt collection data accessed by Payload Json
      required:
        - txid
        - calendario
        - revisao
        - status
        - valor
        - chave
      type: object
      allOf:
        - type: object
          properties:
            calendario:
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobCriacao'
                - $ref: '#/components/schemas/PixCobApresentacao'
                - $ref: '#/components/schemas/PixCobExpiracao'
            revisao:
              $ref: '#/components/schemas/Revisao'
            status:
              $ref: '#/components/schemas/PixCobStatus'
            txid:
              $ref: '#/components/schemas/TxId'
        - $ref: '#/components/schemas/PixCobBaseResponseV2x'
    PixCobSolicitada:
      title: Requested Collection
      description: Data sent for debt collection creation or change via API Pix
      required:
        - valor
        - chave
      type: object
      allOf:
        - type: object
          properties:
            calendario:
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding debt collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobExpiracao'
        - $ref: '#/components/schemas/PixCobBase'
    PixCobSolicitadaV2X:
      title: Requested Collection
      description: Data sent for debt collection creation or change via API Pix
      required:
        - valor
        - chave
      type: object
      allOf:
        - type: object
          properties:
            calendario:
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding debt collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobExpiracao'
            loc:
              $ref: '#/components/schemas/PixBacenCobLocation'
              title: Location
              description: The field nested under the loc to associate this collection to a location.
              allOf:
                - $ref: '#/components/schemas/PixCobLocation'
        - $ref: '#/components/schemas/PixCobBase'
      example:
        calendario:
          expiracao: '3600'
        chave: teste@teste.com
        devedor:
          cpf: '11122233344'
          nome: Teste
        infoAdicionais:
          - nome: chave
            valor: valor
        loc:
          id: 100
        solicitacaoPagador: Pergunta de teste?
        valor:
          modalidadeAlteracao: 0
          original: '1.23'
    PixCobStatus:
      title: Debt Collection Status
      enum:
        - ATIVA
        - CONCLUIDA
        - REMOVIDA_PELO_USUARIO_RECEBEDOR
        - REMOVIDA_PELO_PSP
      type: string
    PixCobV2X:
      title: Pix received
      required:
        - endToEndId
        - valor
        - horario
      type: object
      properties:
        devolucoes:
          title: Devoluções
          type: array
          items:
            $ref: '#/components/schemas/PixCobV2XDevolucao'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        horario:
          format: date-time
          title: Horário
          description: Time when Pix was processed on the PSP.
          type: string
        infoPagador:
          title: Free Payer Information.
          maxLength: 140
          type: string
        txid:
          $ref: '#/components/schemas/TxId'
        valor:
          allOf:
            - $ref: '#/components/schemas/PixCobValor'
            - description: Pix value.
    PixCobValor:
      title: Value
      pattern: \d{1,10}\.\d{2}
      type: string
    PixCobsConsultadas:
      title: Debt Collection
      required:
        - parametros
        - cobs
      type: object
      properties:
        cobs:
          title: Debt collection List
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PixCobCompleta'
              - required:
                  - status
                  - txid
                  - idCob
        parametros:
          $ref: '#/components/schemas/ParametrosConsultaCob'
    PixCobsConsultadasV2X:
      title: Debt Collection
      required:
        - parametros
        - cobs
      type: object
      properties:
        cobs:
          title: Debt collection List
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PixCobCompletaV2X'
              - required:
                  - status
                  - txid
                  - idCob
        parametros:
          $ref: '#/components/schemas/ParametrosConsultaCobV2X'
    PixIncomingConsultados:
      title: Pix Queried
      required:
        - parametros
        - cobs
      type: object
      properties:
        parametros:
          $ref: '#/components/schemas/ParametrosConsultaPixIncoming'
        pix:
          title: List of Pix Received
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PixCob'
    PixLocConsultadasV2X:
      title: Root Type for PixLocConsultadasV2X
      description: ''
      required:
        - parametros
        - loc
      type: object
      properties:
        loc:
          type: array
          items:
            $ref: '#/components/schemas/PixBacenLocWithoutTxid'
        parametros:
          $ref: '#/components/schemas/ParametrosConsultaLocV2X'
          description: Parameters used to perform a location query.
          properties:
            fim:
              format: date-time
              type: string
            inicio:
              format: date-time
              type: string
            paginacao:
              type: object
              properties:
                itensPorPagina:
                  format: int32
                  type: integer
                paginaAtual:
                  format: int32
                  type: integer
                quantidadeDePaginas:
                  format: int32
                  type: integer
                quantidadeTotalDeItens:
                  format: int32
                  type: integer
      example:
        loc:
          - criacao: '2021-01-01T00:00:00Z'
            id: 1
            location: api.dev.developer.btgpactual.com/qr/v2/cabe4117ead3455dbfab4f7400cbc9c1
            tipoCob: cob
        parametros:
          fim: '2021-02-05T00:00:00Z'
          inicio: '2021-01-01T00:00:00Z'
          paginacao:
            itensPorPagina: 100
            paginaAtual: 0
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 1
    PixLocSolicitadaV2X:
      title: Root Type for PixLocSolicitadaV2X
      description: ''
      required:
        - tipoCob
      type: object
      properties:
        tipoCob:
          description: Type of locations to return in response.
          enum:
            - cob
            - cobv
          type: string
      example:
        tipoCob: cob
    PixPaymentMerchantConfirmRequest:
      title: Root Type for PixPaymentMerchantConfirmRequest
      description: ''
      type: object
      properties:
        amount:
          description: The transaction amount. If this field was filled in when creating, it will not be possible to enter a new value. Otherwise, entering the payment amount is allowed.
          pattern: \d{1,10}\.\d{2}
          type: string
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").
          maxLength: 140
          type: string
      example:
        amount: '1.23'
        remittanceInformation: Test information...
    PixPaymentMerchantRequestPayloadCreditParty:
      title: Root Type for PixPaymentMerchantRequestPayloadCreditParty
      description: ''
      required:
        - accountType
        - account
        - bank
        - taxId
      type: object
      properties:
        account:
          description: The account number.
          pattern: \d{1,20}
          type: string
        accountType:
          description: The account type.
          enum:
            - CACC
            - SLRY
            - SVGS
            - TRAN
          type: string
        bank:
          description: The bank ISPB.
          pattern: \d{8}
          type: string
        branch:
          description: The branch number.
          pattern: \d{1,4}
          type: string
        name:
          description: The person's name.
          type: string
        taxId:
          description: The person's document.
          pattern: \d{11,14}
          type: string
        key:
          description: The pix payment key
          type: string
      example:
        account: '1000'
        accountType: CACC
        bank: '30306294'
        branch: '1'
        key: fulano@gmail.com
        name: Beltrano de Tal
        taxId: '22222222222'
    PixPaymentMerchantResponseEnvelope:
      title: Root Type for PixPaymentMerchantResponseEnvelope
      description: ''
      required:
        - version
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentMerchantResponseEnvelopeBody'
        errors:
          description: Array of errors.
          type: array
          items:
            $ref: '#/components/schemas/ErrorBody'
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        body:
          body:
            amount: '10.01'
            creditParty:
              account: '10'
              accountType: CACC
              bank: '30306294'
              branch: '10'
              name: Beltrano de Tal
              personType: NATURAL_PERSON
              taxId: '22222222222'
            debitParty:
              account: '10'
              accountType: CACC
              bank: '30306294'
              branch: '10'
              name: Fulano de Tal
              personType: NATURAL_PERSON
              taxId: '11111111111'
            endToEndId: E3030629420200808185300887639654
          clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
          createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
          entity: PixPayment
          lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
          pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
          status: INITIATED
        status: 200
        version: 1.0.0
    PixPaymentMerchantResponseEnvelopeBody:
      title: Root Type for PixPaymentMerchantResponseEnvelopeBody
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentMerchantResponseEnvelopeInternalBody'
          description: The response instance.
          properties:
            creditParty:
              type: object
              properties:
                account:
                  type: string
                accountType:
                  type: string
                bank:
                  type: string
                branch:
                  type: string
                name:
                  type: string
                personType:
                  type: string
                taxId:
                  type: string
            debitParty:
              type: object
              properties:
                account:
                  type: string
                accountType:
                  type: string
                bank:
                  type: string
                branch:
                  type: string
                name:
                  type: string
                personType:
                  type: string
                taxId:
                  type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          description: Payment's creation timestamp.
          type: string
        entity:
          description: The entity's name.
          type: string
        lastUpdateTimestamp:
          description: Entity's last update timestamp.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        status:
          description: Transaction's current status.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        body:
          amount: '10.01'
          creditParty:
            account: '10'
            accountType: CACC
            bank: '30306294'
            branch: '10'
            name: Beltrano de Tal
            personType: NATURAL_PERSON
            taxId: '22222222222'
          debitParty:
            account: '10'
            accountType: CACC
            bank: '30306294'
            branch: '10'
            name: Fulano de Tal
            personType: NATURAL_PERSON
            taxId: '11111111111'
          endToEndId: E3030629420200808185300887639654
        clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
        createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
        entity: PixPayment
        lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
        pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
        status: INITIATED
        tags:
          - tag
    PixPaymentResponse:
      title: Root Type for PixStaticBRCodePaymentResponse
      description: ''
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentResponseBody'
        errors:
          description: Array of errors.
          type: array
          items:
            $ref: '#/components/schemas/ErrorBody'
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        errors:
          - errorCode: string
            message: string
        status: 100
        version: string
    PixPaymentResponseBody:
      title: Response Body
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentResponseBodyInternal'
          description: Data Object.
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          description: Payment's creation timestamp.
          type: string
        entity:
          description: The entity's name.
          type: string
        lastUpdateTimestamp:
          description: Entity's last update timestamp.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        status:
          description: Transaction's current status.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        amount: 0
        clientRequestId: string
        creditParty: {}
        debitParty: {}
        endToEndId: string
        movementId: string
        pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        remittanceInformation: string
        tags:
          - string
        transactionIdentification: string
    Revisao:
      format: int32
      title: Review
      description: Debt collection review. Always starts at zero. Always varies in increments of 1.
      type: integer
    TxId:
      title: Transaction Identification
      description: |
        # Transaction Identification
        The txid field, mandatory, determines the transaction identifier.
        The purpose of this field is to be an element that enables the PSP of the receiver to present the user with the functionality of payment reconciliation.
        On pacs.008, is referenced as `TransactionIdentification <txId>` or `idConciliacaoRecebedor`.
        The txid field is limited to 35 characters in pacs.008.
        In terms of workflow, txid is read by the payer's PSP application and, after payment is confirmed, it is sent to the SPI via pacs.008.
        A pacs.008 is also sent to the receiver's PSP, containing, besides all the usual payment information, the txid.
        When you notice a receiving with txid, the PSP of the receiver is able to communicate with the user receiver, informing that a specific payment has been settled.
        Txid is created exclusively by the receiving user and is under his responsibility.
        The txid, in the context of representation of a collection, is unique by CPF/CNPJ of the receiver user. It is up to the receiving PSP to validate this rule in the PIX API.
      pattern: '[A-Z0-9]{26,35}'
      type: string
    PixPaymentMerchantRequestPayload:
      title: Root Type for PixPaymentMerchantRequestPayload
      description: ''
      required:
        - amount
        - clientRequestId
        - creditParty
      type: object
      properties:
        amount:
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        creditParty:
          $ref: '#/components/schemas/PixPaymentMerchantRequestPayloadCreditParty'
          description: ''
          properties:
            account:
              type: string
            accountType:
              type: string
            bank:
              type: string
            branch:
              type: string
            name:
              type: string
            taxId:
              type: string
        initiationType:
          description: The initiation type.
          default: MANUAL
          enum:
            - MANUAL
            - DICT
            - STATIC_QRCODE
            - DYNAMIC_QRCODE
            - PAYMENT_INITIATOR
          type: string
        paymentType:
          description: The payment type.
          default: IMMEDIATE
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").
          maxLength: 140
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
        transactionIdentification:
          description: If present on StaticBRCode must be preserved and informed here. It's always present on DynamicBRCode and need to be informed here as well
          pattern: '[a-zA-Z0-9]{1,35}'
          type: string
        transactionType:
          description: The transaction type.
          default: TRANSFER
          enum:
            - TRANSFER
            - CHANGE
            - WITHDRAWAL
          type: string
        vlcpAmount:
          description: The amount of the purchase.
          pattern: \d{1,10}\.\d{2}
          type: string
        vldnAmount:
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: string
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
        withdrawalAgentMode:
          description: Field used to discriminate the withdrawal agent mode and to identify the withdrawal service provider.
          enum:
            - AGTEC
            - AGTOT
            - AGPSS
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          pattern: '[0-9]{8}'
          type: string
      example:
        amount: '10.01'
        clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
        creditParty:
          account: '1000'
          accountType: CACC
          bank: '30306294'
          branch: '1'
          name: Beltrano de Tal
          taxId: '22222222222'
        initiationType: MANUAL
        paymentType: IMMEDIATE
        remittanceInformation: Informação para ser apresentada
        tags:
          - abc
          - def
        transactionType: CHANGE
        vlcpAmount: '5.01'
        vldnAmount: '5.00'
    PixPaymentMerchantAmountRequestDictKeyPayload:
      title: Root Type for PixPaymentMerchantRequestPayload
      description: ''
      required:
        - clientRequestId
        - amount
      type: object
      properties:
        amount:
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        initiationType:
          description: The initiation type.
          default: DICT
          enum:
            - MANUAL
            - DICT
            - STATIC_QRCODE
            - DYNAMIC_QRCODE
            - PAYMENT_INITIATOR
          type: string
        paymentType:
          description: The payment type.
          default: IMMEDIATE
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").
          maxLength: 140
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
        transactionIdentification:
          description: If present on StaticBRCode must be preserved and informed here. It's always present on DynamicBRCode and need to be informed here as well
          pattern: '[a-zA-Z0-9]{1,35}'
          type: string
        transactionType:
          description: The transaction type.
          default: TRANSFER
          enum:
            - TRANSFER
            - CHANGE
            - WITHDRAWAL
          type: string
        vlcpAmount:
          description: The amount of the purchase.
          pattern: \d{1,10}\.\d{2}
          type: string
        vldnAmount:
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: string
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
        withdrawalAgentMode:
          description: Field used to discriminate the withdrawal agent mode and to identify the withdrawal service provider.
          enum:
            - AGTEC
            - AGTOT
            - AGPSS
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          pattern: '[0-9]{8}'
          type: string
      example:
        amount: '10.01'
        clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
        initiationType: MANUAL
        paymentType: IMMEDIATE
        remittanceInformation: Informação para ser apresentada
        tags:
          - abc
          - def
        transactionIdentification: 0275d6519e7a49df8756022c03a62fbc
        transactionType: CHANGE
        vlcpAmount: '5.01'
        vldnAmount: '5.00'
    PixPaymentMerchantRequestDictKeyPayload:
      title: Root Type for PixPaymentMerchantRequestPayload
      description: ''
      required:
        - clientRequestId
      type: object
      properties:
        amount:
          description: The transaction amount. If empty on creation, this field will be required on payment confirmation.
          pattern: \d{1,10}\.\d{2}
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        initiationType:
          description: The initiation type.
          default: DICT
          enum:
            - MANUAL
            - DICT
            - STATIC_QRCODE
            - DYNAMIC_QRCODE
            - PAYMENT_INITIATOR
          type: string
        paymentType:
          description: The payment type
          default: IMMEDIATE
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").
          maxLength: 140
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
        transactionIdentification:
          description: If present on StaticBRCode must be preserved and informed here. It's always present on DynamicBRCode and need to be informed here as well
          pattern: '[a-zA-Z0-9]{1,35}'
          type: string
        transactionType:
          description: The transaction type
          default: TRANSFER
          enum:
            - TRANSFER
            - CHANGE
            - WITHDRAWAL
          type: string
        vlcpAmount:
          description: The amount of the purchase.
          pattern: \d{1,10}\.\d{2}
          type: string
        vldnAmount:
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: string
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
        withdrawalAgentMode:
          description: Field used to discriminate the withdrawal agent mode and to identify the withdrawal service provider.
          enum:
            - AGTEC
            - AGTOT
            - AGPSS
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          pattern: '[0-9]{8}'
          type: string
      example:
        amount: '10.01'
        clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
        initiationType: DICT
        paymentType: IMMEDIATE
        remittanceInformation: Informação para ser apresentada
        tags:
          - abc
          - def
        transactionIdentification: 0275d6519e7a49df8756022c03a62fbc
        transactionType: WITHDRAWAL
        vldnAmount: '10.01'
    PixPaymentMerchantQrCodeConfirmedPayload:
      title: Root Type for PixPaymentMerchantRequestPayload
      description: ''
      required:
        - emv
        - clientRequestId
      type: object
      properties:
        emv:
          description: The QRCode string representation.
          type: string
        paymentType:
          description: The payment type.
          default: IMMEDIATE
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
        amount:
          description: The Pix scheme follows the ISO2022 so you must inform the value with two decimal places for the cents.
          pattern: \d{1,10}\.\d{2}
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
      example:
        emv: 00020126650014br.gov.bcb.pix0115teste@teste.com0224Info adicional do QrCode5204000053039865802BR5912Qrcode Teste6006Cidade6236053210YD9S5BAQ6LQMDM40AQC3P6HEKX0H7J6304A918
        paymentType: IMMEDIATE
        taxIdPaymentInitiator: '12345678915'
        amount: '10.00'
    PixPaymentMerchantQrCodeInitiatePayload:
      title: Root Type for PixPaymentMerchantRequestPayload
      description: ''
      required:
        - emv
        - clientRequestId
      type: object
      properties:
        emv:
          description: The QRCode string representation.
          type: string
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
        amount:
          description: The Pix scheme follows the ISO2022 so you must inform the value with two decimal places for the cents.
          pattern: \d{1,10}\.\d{2}
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
      example:
        emv: 00020126650014br.gov.bcb.pix0115teste@teste.com0224Info adicional do QrCode5204000053039865802BR5912Qrcode Teste6006Cidade6236053210YD9S5BAQ6LQMDM40AQC3P6HEKX0H7J6304A918
        taxIdPaymentInitiator: '12345678915'
        amount: '10.00'
    PixPaymentMerchantResponseEnvelopeInternalBody:
      title: Root Type for PixPaymentMerchantResponseEnvelopeInternalBody
      description: ''
      required:
        - amount
        - endToEndId
        - creditParty
        - debitParty
        - initiationType
        - paymentType
        - transactionType
        - urgency
      type: object
      properties:
        debitParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyDebitParty'
          description: The Debit Party instance.
          properties:
            account:
              type: string
            personType:
              type: string
            taxId:
              type: string
            accountType:
              type: string
            branch:
              type: string
            bank:
              type: string
            name:
              type: string
        creditParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyCreditParty'
          description: The Credit Party instance.
          properties:
            account:
              type: string
            accountType:
              type: string
            taxId:
              type: string
            personType:
              type: string
            branch:
              type: string
            bank:
              type: string
            name:
              type: string
        amount:
          description: The amount value.
          type: string
        endToEndId:
          description: End-to-end payment identifier associated with this request. The same used on DICT GET request.
          type: string
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").\r\n
          maxLength: 140
          type: string
        paymentType:
          description: The payment type.
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        transactionType:
          description: The transaction type.
          enum:
            - TRANSFER
            - CHANGE
            - WITHDRAWAL
          type: string
        urgency:
          description: The urgency of Pix.
          enum:
            - HIGH
            - NORMAL
          type: string
        initiationType:
          description: The initiation type.
          enum:
            - MANUAL
            - DICT
            - STATIC_QRCODE
            - DYNAMIC_QRCODE
            - PAYMENT_INITIATOR
          type: string
        vlcpAmount:
          description: The amount of the purchase.
          pattern: \d{1,10}\.\d{2}
          type: string
        vldnAmount:
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: string
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
      example:
        amount: '10.01'
        debitParty:
          account: '10'
          personType: NATURAL_PERSON
          taxId: '11111111111'
          accountType: CACC
          branch: '10'
          bank: '30306294'
          name: Fulano de Tal
        creditParty:
          account: '10'
          accountType: CACC
          taxId: '22222222222'
          personType: NATURAL_PERSON
          branch: '10'
          bank: '30306294'
          name: Beltrano de Tal
        endToEndId: E3030629420200808185300887639654
        remittanceInformation: Informação para ser apresentada
        paymentType: IMMEDIATE
        transactionType: CHANGE
        initiationType: MANUAL
        urgency: HIGH
        vlcpAmount: '5.01'
        vldnAmount: '5.00'
    PixPaymentReversalInboundEnvelopeResponse:
      title: Root Type for PixPaymentReversalEnvelopeResponse
      description: ''
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentReversalResponseBody'
          description: The envelope with PixReversal instance.
          properties:
            body:
              type: object
              properties:
                amount:
                  format: double
                  type: number
                movementId:
                  type: string
                originalEndToEndId:
                  type: string
                originalPactualId:
                  type: string
                reason:
                  type: string
                returnIdentification:
                  type: string
            clientRequestId:
              type: string
            createTimestamp:
              type: string
            entity:
              type: string
            lastUpdateTimestamp:
              type: string
            pactualId:
              type: string
            status:
              type: string
            tags:
              type: array
              items: {}
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version
          type: string
      example:
        body:
          body:
            amount: 0.01
            movementId: '0000001'
            originalEndToEndId: E0000000120200101112233445566778
            originalPactualId: 75bd25bb-5fd7-4eb8-8e0b-271bac55c06c
            reason: MD06
            returnIdentification: D00000002202001011112s33445555AB
          clientRequestId: D10000002202001011112s33445555AB
          createTimestamp: '2020-01-01T00:00:00.5922967+00:00'
          entity: PixReversalInbound
          lastUpdateTimestamp: '2020-01-01T00:00:00.5922967+00:00'
          pactualId: 7bf2a93f-296e-42ac-a265-63a206121950
          status: CONFIRMED
          tags: []
        status: 200
        version: 1.0.0
    PixPaymentReversalSearchResponse:
      title: Root Type for PixStaticBRCodeSearchResponse
      description: The response for searching static br codes.
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentReversalSearchResponseBodyContent'
          description: The envelope with PixReversal instance.
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  body:
                    type: object
                    properties:
                      countryCode:
                        type: string
                      emvqrcps:
                        type: string
                      merchantAccountInformation:
                        type: object
                        properties:
                          additionalInformation:
                            type: string
                          key:
                            type: string
                      merchantCategoryCode:
                        format: int32
                        type: integer
                      merchantCity:
                        type: string
                      merchantName:
                        type: string
                      payloadFormatIndicator:
                        type: string
                      postalCode:
                        type: string
                      transactionAmount:
                        format: double
                        type: number
                      transactionCurrency:
                        format: int32
                        type: integer
                      transactionIdentification:
                        type: string
                  clientRequestId:
                    type: string
                  createTimestamp:
                    type: string
                  entity:
                    type: string
                  lastUpdateTimestamp:
                    type: string
                  pactualId:
                    type: string
                  status:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
            startingFrom:
              format: int32
              type: integer
            totalFound:
              format: int32
              type: integer
            totalReturned:
              format: int32
              type: integer
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        body:
          items:
            - body:
                amount: 0.01
                movementId: '0000001'
                originalEndToEndId: E0000000120200101112233445566778
                originalPactualId: 75bd25bb-5fd7-4eb8-8e0b-271bac55c06c
                reason: MD06
                returnIdentification: D00000002202001011112s33445555AB
              clientRequestId: D10000002202001011112s33445555AB
              createTimestamp: '2020-01-01T00:00:00.5922967+00:00'
              entity: PixReversal
              lastUpdateTimestamp: '2020-01-01T00:00:00.5922967+00:00'
              pactualId: 7bf2a93f-296e-42ac-a265-63a206121950
              status: CONFIRMED
              tags: []
          startingFrom: 0
          totalFound: 1
          totalReturned: 1
        status: 200
        version: 1.0.0
    PixPaymentReversalInboundListResponse:
      title: Root Type for PixPaymentReversalListResponse2
      description: ''
      type: object
      properties:
        body:
          type: array
          items:
            $ref: '#/components/schemas/PixPaymentReversalListResponseBody'
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version
          type: string
      example:
        body:
          - body:
              amount: 0.01
              movementId: '0000001'
              originalEndToEndId: E0000000120200101112233445566778
              originalPactualId: 75bd25bb-5fd7-4eb8-8e0b-271bac55c06c
              reason: MD06
              returnIdentification: D00000002202001011112s33445555AB
            clientRequestId: D10000002202001011112s33445555AB
            createTimestamp: '2020-01-01T00:00:00.5922967+00:00'
            entity: PixReversalInbound
            lastUpdateTimestamp: '2020-01-01T00:00:00.5922967+00:00'
            pactualId: 7bf2a93f-296e-42ac-a265-63a206121950
            status: CONFIRMED
            tags: []
        status: 200
        version: 1.0.0
    PixPaymentReversalResponseBody:
      title: Root Type for PixPaymentReversalResponseBody
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
        - tags
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentReversalResponseBodyInternal'
          description: Data Object.
          properties:
            amount:
              format: double
              type: number
            movementId:
              type: string
            originalEndToEndId:
              type: string
            originalPactualId:
              type: string
            reason:
              type: string
            returnIdentification:
              type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          description: Payment's creation timestamp.
          type: string
        entity:
          description: The entity's name.
          type: string
        lastUpdateTimestamp:
          description: Entity's last update timestamp.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        status:
          description: Transaction's current status.
          type: string
        tags:
          description: A list with tags.
          type: array
          items: {}
      example:
        body:
          amount: 0.01
          movementId: '0000001'
          originalEndToEndId: E0000000120200101112233445566778
          originalPactualId: 75bd25bb-5fd7-4eb8-8e0b-271bac55c06c
          reason: MD06
          returnIdentification: D00000002202001011112s33445555AB
        clientRequestId: D10000002202001011112s33445555AB
        createTimestamp: '2020-01-01T00:00:00.5922967+00:00'
        entity: PixReversal
        lastUpdateTimestamp: '2020-01-01T00:00:00.5922967+00:00'
        pactualId: 7bf2a93f-296e-42ac-a265-63a206121950
        status: CONFIRMED
        tags: []
    PixPaymentReversalSearchResponseBodyContent:
      description: ''
      required:
        - totalFound
        - totalReturned
        - startingFrom
      type: object
      properties:
        items:
          description: A list of returned items.
          type: array
          items:
            $ref: '#/components/schemas/PixPaymentReversalResponseBody'
        startingFrom:
          description: The order position of first returned item.
          type: integer
        totalFound:
          description: The number of total found items.
          type: integer
        totalReturned:
          description: The number of total returned items.
          type: integer
      example:
        items:
          - body:
              amount: 0.01
              movementId: '0000001'
              originalEndToEndId: E0000000120200101112233445566778
              originalPactualId: 75bd25bb-5fd7-4eb8-8e0b-271bac55c06c
              reason: MD06
              returnIdentification: D00000002202001011112s33445555AB
            clientRequestId: D10000002202001011112s33445555AB
            createTimestamp: '2020-01-01T00:00:00.5922967+00:00'
            entity: PixReversal
            lastUpdateTimestamp: '2020-01-01T00:00:00.5922967+00:00'
            pactualId: 7bf2a93f-296e-42ac-a265-63a206121950
            status: CONFIRMED
            tags: []
        startingFrom: 0
        totalFound: 1
        totalReturned: 1
    PixPaymentReversalListResponseBody:
      title: Root Type for PixPaymentReversalListResponseBody
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
        - tags
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentReversalResponseBodyInternal'
          description: Data Object.
          properties:
            amount:
              format: double
              type: number
            movementId:
              type: string
            originalEndToEndId:
              type: string
            originalPactualId:
              type: string
            reason:
              type: string
            returnIdentification:
              type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          description: Payment's creation timestamp.
          type: string
        entity:
          description: The entity's name.
          type: string
        lastUpdateTimestamp:
          description: Entity's last update timestamp.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        status:
          description: Transaction's current status.
          type: string
        tags:
          description: A list with tags.
          type: array
          items: {}
      example:
        - body:
            amount: 0.01
            movementId: '0000001'
            originalEndToEndId: E0000000120200101112233445566778
            originalPactualId: 75bd25bb-5fd7-4eb8-8e0b-271bac55c06c
            reason: MD06
            returnIdentification: D00000002202001011112s33445555AB
          clientRequestId: D10000002202001011112s33445555AB
          createTimestamp: '2020-01-01T00:00:00.5922967+00:00'
          entity: PixReversal
          lastUpdateTimestamp: '2020-01-01T00:00:00.5922967+00:00'
          pactualId: 7bf2a93f-296e-42ac-a265-63a206121950
          status: CONFIRMED
          tags: []
    PixPaymentReversalResponseBodyInternal:
      title: Root Type for PixPaymentReversalBody
      description: ''
      required:
        - amount
        - movementId
        - originalEndToEndId
        - originalPactualId
        - returnIdentification
        - reason
      type: object
      properties:
        reason:
          description: The reason for the reversal.
          enum:
            - BE08
            - FR01
            - MD06
            - SL02
          type: string
        amount:
          format: double
          description: The transaction amount.
          type: number
        originalEndToEndId:
          description: The EndToEndId of the original payment.
          type: string
        originalPactualId:
          description: The PactualId of the original payment.
          type: string
        returnIdentification:
          description: The unique identifier for the reversal payment.
          type: string
        movementId:
          description: Unique identification created when the transaction impacted the main client's account.
          type: string
        statusDescription:
          description: Description based on current status.
          type: string
        movementIds:
          description: Array of unique identification created when the transaction impacted the main client's account.
          type: array
          items:
            type: string
      example:
        reason: MD06
        amount: 0.01
        originalEndToEndId: E0000000120200101112233445566778
        originalPactualId: 75bd25bb-5fd7-4eb8-8e0b-271bac55c06c
        returnIdentification: D00000002202001011112s33445555AB
        movementId: '0000001'
        statusDescription: Information...
    ScrollRequest:
      required:
        - scrollId
      type: object
      properties:
        scrollId:
          description: scroll ID to retrieve the next batch of results for the request
          type: string
      example:
        scrollId: DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAD4WYm9laVYtZndUQlNsdDcwakFMNjU1QQ==
    PixPaymentReturnResponse:
      title: Root Type for PixPaymentReturnResponse
      description: ''
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentReturnResponseBody'
          description: The return data.
          properties:
            body:
              type: object
              properties:
                additionalInformation:
                  type: string
                amount:
                  format: double
                  type: number
                originalPactualId:
                  type: string
                reason:
                  type: string
                returnIdentification:
                  type: string
            clientRequestId:
              type: string
            createTimestamp:
              type: string
            entity:
              type: string
            lastUpdateTimestamp:
              type: string
            pactualId:
              type: string
            status:
              type: string
            tags:
              type: array
              items:
                type: string
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        body:
          body:
            additionalInformation: Lorem ipsum dolor sit amet.
            amount: 10.02
            originalPactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
            reason: BE08
            returnIdentification: D3030629420200808185300887639654
          clientRequestId: AC0FE8DE561349669746087BC3CBC103
          createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
          entity: PixReversal
          lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
          pactualId: 45fe6866-21a5-4f6d-84c2-950a2a1df8e7
          status: PROCESSING
          tags:
            - abc
            - def
        status: 200
        version: 1.0.0
    PixPaymentReturnRequest:
      title: Root Type for PixPaymentReturnRequest
      description: ''
      required:
        - amount
        - clientRequestId
        - reason
      type: object
      properties:
        additionalInformation:
          description: Optional text field to be used in case the return motive is outside the possible values in the RT Reason Table in the methods description. Up to 105 characters.
          type: string
        amount:
          format: double
          description: Decimal value to be returned.
          type: number
        clientRequestId:
          description: The unique identifier
          type: string
        reason:
          description: Case in which the return falls following the table in the methods description.
          enum:
            - BE08
            - FR01
            - MD06
            - SL02
          type: string
        tags:
          description: Tag to filter. Can be repeated.
          type: array
          items:
            type: string
      example:
        additionalInformation: Lorem ipsum dolor sit amet.
        amount: 10.02
        clientRequestId: AC0FE8DE561349669746087BC3CBC103
        reason: BE08
        tags:
          - abc
          - def
    PixPaymentValidationEndpoint:
      title: Root Type for PixPaymentRequestValidationEndpoint
      description: ''
      required:
        - secret
        - validationUrl
      type: object
      properties:
        secret:
          description: The secret of validation url.
          type: string
        validationUrl:
          description: The validation url.
          type: string
      example:
        secret: '0123456789'
        validationUrl: http://validationUrl.com.br
    PixPaymentSearchResponse:
      title: Root Type for PixStaticBRCodeSearchResponse
      description: The response for searching static br codes.
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentSearchResponseBodyContent'
          description: The envelope with PixPayment instance.
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  body:
                    type: object
                    properties:
                      countryCode:
                        type: string
                      emvqrcps:
                        type: string
                      merchantAccountInformation:
                        type: object
                        properties:
                          additionalInformation:
                            type: string
                          key:
                            type: string
                      merchantCategoryCode:
                        format: int32
                        type: integer
                      merchantCity:
                        type: string
                      merchantName:
                        type: string
                      payloadFormatIndicator:
                        type: string
                      postalCode:
                        type: string
                      transactionAmount:
                        format: double
                        type: number
                      transactionCurrency:
                        format: int32
                        type: integer
                      transactionIdentification:
                        type: string
                  clientRequestId:
                    type: string
                  createTimestamp:
                    type: string
                  entity:
                    type: string
                  lastUpdateTimestamp:
                    type: string
                  pactualId:
                    type: string
                  status:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
            startingFrom:
              format: int32
              type: integer
            totalFound:
              format: int32
              type: integer
            totalReturned:
              format: int32
              type: integer
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        body:
          items:
            - amount: 100
              clientRequestId: bc18f2f4-57b5-46cc-8c5e-4e4287dbe878
              creditParty:
                account: '43210'
                accountType: 1
                bank: '87654321'
                branch: '10'
                key: test@test.com
                name: User Test
                personType: 1
                taxId: '44433322211'
              debitParty:
                account: '12340'
                accountType: 1
                bank: '12345678'
                branch: '10'
                name: Client Test
                personType: 1
                taxId: '11122233344'
              endToEndId: E00038166201907261559y6j6mt9l0pi
              movementId: string
              pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              remittanceInformation: string
              tags:
                - string
              transactionIdentification: string
          startingFrom: 0
          totalFound: 1
          totalReturned: 1
        status: 200
        version: 1.0.0
    PixPaymentSearchResponseBodyContent:
      description: ''
      required:
        - totalFound
        - totalReturned
        - startingFrom
        - items
      type: object
      properties:
        items:
          description: A list of returned items.
          type: array
          items:
            $ref: '#/components/schemas/PixPaymentGetResponseBody'
        startingFrom:
          description: The order position of first returned item.
          type: integer
        totalFound:
          description: The number of total found items.
          type: integer
        totalReturned:
          description: The number of total returned items.
          type: integer
    PixPaymentReturnResponseBody:
      title: Root Type for PixPaymentReturnResponseBody
      description: ''
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentReturnResponseBodyInternal'
          properties:
            additionalInformation:
              type: string
            amount:
              format: double
              type: number
            originalPactualId:
              type: string
            reason:
              type: string
            returnIdentification:
              type: string
        clientRequestId:
          type: string
        createTimestamp:
          type: string
        entity:
          type: string
        lastUpdateTimestamp:
          type: string
        pactualId:
          type: string
        status:
          type: string
        tags:
          type: array
          items:
            type: string
      example:
        body:
          additionalInformation: Lorem ipsum dolor sit amet.
          amount: 10.02
          originalPactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
          reason: BE08
          returnIdentification: D3030629420200808185300887639654
        clientRequestId: AC0FE8DE561349669746087BC3CBC103
        createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
        entity: PixReversal
        lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
        pactualId: 45fe6866-21a5-4f6d-84c2-950a2a1df8e7
        status: PROCESSING
        tags:
          - abc
          - def
    PixPaymentReturnResponseBodyInternal:
      title: Root Type for PixPaymentReturnResponseBodyInternal
      description: ''
      type: object
      properties:
        returnIdentification:
          type: string
        reason:
          type: string
        additionalInformation:
          type: string
        amount:
          format: double
          type: number
        originalPactualId:
          type: string
      example:
        returnIdentification: D3030629420200808185300887639654
        reason: BE08
        additionalInformation: Lorem ipsum dolor sit amet.
        amount: 10.02
        originalPactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
    PessoaJuridica:
      title: Legal Person
      required:
        - cnpj
        - nome
      type: object
      properties:
        cnpj:
          allOf:
            - $ref: '#/components/schemas/CNPJ'
            - description: CNPJ of the borrower or 'drawee'.
        nome:
          title: Name
          description: Name of the borrower or 'drawee'.
          maxLength: 200
          type: string
    PessoaFisica:
      title: Natural Person
      required:
        - cpf
        - nome
      type: object
      properties:
        cpf:
          allOf:
            - $ref: '#/components/schemas/CPF'
            - description: CPF of the borrower or 'drawee'.
        nome:
          title: Name
          description: Name of the borrower or 'drawee'.
          maxLength: 200
          type: string
    CobrancaTroco:
      title: Collection Change
      description: Informations about change collection.
      type: object
      properties:
        troco:
          $ref: '#/components/schemas/CobrancaTrocoInformacoes'
          description: Informations about change collection.
          properties:
            valor:
              type: string
            modalidadeAlteracao:
              format: int32
              type: integer
            modalidadeAgente:
              type: string
            prestadorDoServicoDeSaque:
              type: string
      example:
        troco:
          valor: '10.00'
          modalidadeAlteracao: 0
          modalidadeAgente: AGPSS
          prestadorDoServicoDeSaque: '12345678'
    CobrancaSaque:
      title: Collection Withdrawal
      description: Informations about change collection.
      type: object
      properties:
        saque:
          $ref: '#/components/schemas/CobrancaSaqueTrocoInformacoes'
          description: Informations about change collection.
          properties:
            valor:
              type: string
            modalidadeAlteracao:
              format: int32
              type: integer
            modalidadeAgente:
              type: string
            prestadorDoServicoDeSaque:
              type: string
      example:
        saque:
          valor: '10.00'
          modalidadeAlteracao: 0
          modalidadeAgente: AGPSS
          prestadorDoServicoDeSaque: '12345678'
    PixCobGeradaV2X:
      title: Generated Debt Collection
      description: Data created or changed from debt collection via API Pix
      required:
        - txid
        - calendario
        - revisao
        - status
        - valor
        - chave
      type: object
      allOf:
        - type: object
          properties:
            calendario:
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding debt collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobCriacao'
                - $ref: '#/components/schemas/PixCobExpiracao'
            loc:
              title: Location
              description: The field nested under the loc to associate this collection to a location.
              allOf:
                - $ref: '#/components/schemas/PixBacenCobLocationResponse'
            location:
              $ref: '#/components/schemas/Location'
            revisao:
              $ref: '#/components/schemas/Revisao'
            status:
              $ref: '#/components/schemas/PixCobStatus'
            txid:
              $ref: '#/components/schemas/TxId'
            pixCopiaECola:
              $ref: '#/components/schemas/PixCopiaECola'
        - $ref: '#/components/schemas/PixCobBase'
    PixCopiaECola:
      title: Pix Copia e Cola
      description: The EMV information (QRCode in string format).
      type: string
      example: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/1b74809e904d41dbb5177c1b548e01935204010053039865802BR5911BTG Pactual6014Rio de Janeiro610820000100623605321b74809e904d41dbb5177c1b548e01936304EB3E
    PixBacenCobDueDateBase:
      title: Base Debt Collection Due date
      description: Attributes common to all Debt Collection entities
      type: object
      properties:
        chave:
          title: DICT receiver key
          description: |-
            # Key field format
            * The key field, mandatory, determines the Pix key registered in the DICT that will be used for the billing. This key will be read by the payer's PSP application for consultation with the DICT, which will return the information that will identify the recipient of the charge.
            * The key types can be: PHONE, EMAIL, CPF/CNPJ OR EVP.
            * The format of the keys can be found in the \"Formatting the DICT keys in the BR Code\" section of the Standards Manual for Pix initiation](https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos).
          maxLength: 77
          type: string
        infoAdicionais:
          title: Additional information
          description: Each respective additional information contained in the list (name and value) must be presented to the payer.
          maximum: 50
          type: array
          items:
            required:
              - nome
              - valor
            type: object
            properties:
              nome:
                title: Name
                description: Name Field.
                maxLength: 50
                type: string
              valor:
                title: Value
                description: Data Field.
                maxLength: 200
                type: string
        solicitacaoPagador:
          title: Request to payer
          description: The solicitacaoPagador field, optional, determines a text to be presented to the payer so that he can enter a correlated information, in free format, to be sent to the receiver. This text will be filled in pacs.008 by the payer's PSP in the RemittanceInformation <RmtInf> field. The size of the field <RmtInf> in pacs.008 is limited to 140 characters.
          maxLength: 140
          type: string
    PixBacenCobDueDateReponseWithPix:
      title: Root Type for PixCobDueDateReponse
      description: ''
      required:
        - calendario
        - devedor
        - recebedor
        - txid
        - chave
        - revisao
        - status
        - valor
      type: object
      allOf:
        - $ref: '#/components/schemas/PixBacenCobDueDateCalendarioResponse'
        - type: object
          properties:
            txid:
              $ref: '#/components/schemas/TxId'
        - type: object
          properties:
            revisao:
              format: int32
              description: Collection review. Always starts at zero. Always varies in increments of 1.
              type: integer
        - $ref: '#/components/schemas/PixBacenCobDueDateDevedor'
        - $ref: '#/components/schemas/PixBacenCobDueDateRecebedor'
        - type: object
          properties:
            loc:
              $ref: '#/components/schemas/PixBacenCobLocationResponse'
            status:
              $ref: '#/components/schemas/PixCobStatus'
            valor:
              $ref: '#/components/schemas/PixBacenCobDueDateValor'
        - $ref: '#/components/schemas/PixBacenCobDueDateBase'
        - type: object
          properties:
            pix:
              $ref: '#/components/schemas/PixCob'
            pixCopiaECola:
              $ref: '#/components/schemas/PixCopiaECola'
    PixBacenCobDueDateReponse:
      title: Root Type for PixCobDueDateReponse
      description: ''
      required:
        - calendario
        - devedor
        - recebedor
        - txid
        - chave
        - revisao
        - status
        - valor
      type: object
      allOf:
        - $ref: '#/components/schemas/PixBacenCobDueDateCalendarioResponse'
        - type: object
          properties:
            txid:
              $ref: '#/components/schemas/TxId'
        - type: object
          properties:
            revisao:
              format: int32
              description: Collection review. Always starts at zero. Always varies in increments of 1.
              type: integer
        - $ref: '#/components/schemas/PixBacenCobDueDateDevedor'
        - $ref: '#/components/schemas/PixBacenCobDueDateRecebedor'
        - required:
            - valor
          type: object
          properties:
            loc:
              $ref: '#/components/schemas/PixBacenCobLocationResponse'
            status:
              $ref: '#/components/schemas/PixCobStatus'
            valor:
              $ref: '#/components/schemas/PixBacenCobDueDateValor'
            pixCopiaECola:
              $ref: '#/components/schemas/PixCopiaECola'
        - $ref: '#/components/schemas/PixBacenCobDueDateBase'
    PixDevolucaoRequest:
      title: Root Type for PixDevolucaoRequest
      description: ''
      required:
        - valor
      type: object
      properties:
        valor:
          description: Amount requested for reversal. The sum of the values of all the reversals may not exceed the total amount of the charge.
          pattern: \d{1,10}\.\d{2}
          type: string
        natureza:
          description: |-
            Indicates the nature of the return. A return can be related to a common Pix (corresponds to code MD06 of pacs.004), or to a Withdrawal or Change Pix (corresponds to code SL02 of pacs.004). In the absence of this field the nature shall be interpreted as being of a common Pix (ORIGINAL).

            The natures are defined as follows:
            - ORIGINAL: when the return refers to a common Pix or to the purchase amount in a Change Pix;
            - RETIRADA: when the return refers to a Withdrawal Pix or to the amount of change in a Change Pix.

            The return values are always limited to the maximum values according to:
            - Ordinary Pix: the return value is limited to the value of the Pix itself (the nature in that case is ORIGINAL);
            - Pix Withdrawal: the return amount is limited to the withdrawal amount (the nature in this case is WITHDRAWAL);
            - Pix Change: the return value is limited to the value related to the nature of the purchase: 

                - ORIGINAL: limited to the value of the purchase;

                - RETIRADA: limited to the value of the withdrawal.
          enum:
            - ORIGINAL
            - RETIRADA
          type: string
        descricao:
          description: Text to be presented to the payer containing information about the return. This text will be filled in, in pacs.004 by the creditor PSP, in the RemittanceInformation field.
          maxLength: 140
          type: string
      example:
        valor: '1.23'
        natureza: ORIGINAL
        descricao: Returning the amount that exceeded what was expected. Information for setting up a charge as withdrawal or change.
    DictHubMerchantCustomerListResponse:
      title: Root Type for PixDICTClaimGetListResponse
      description: ''
      type: object
      properties:
        body:
          description: The MerchantCustomer whit envelope.
          type: array
          items:
            $ref: '#/components/schemas/DictHubMerchantCustomerCreateResponse'
          properties:
            claimer:
              type: object
              properties:
                name:
                  type: string
                taxIdNumber:
                  type: string
                type:
                  type: string
            claimerAccount:
              type: object
              properties:
                accountNumber:
                  type: string
                accountType:
                  type: string
                branch:
                  type: string
                openingDate:
                  format: date-time
                  type: string
                participant:
                  type: string
            completionPeriodEnd:
              format: date-time
              type: string
            donorParticipant:
              type: string
            id:
              type: string
            key:
              type: string
            keyType:
              type: string
            lastModified:
              format: date-time
              type: string
            resolutionPeriodEnd:
              format: date-time
              type: string
            status:
              type: string
            type:
              type: string
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        status: 200
        version: 1.0.0
        body:
          - merchantCustomerId: string
            name: string
            taxId: string
            createTimestamp: string
            lastUpdateTimestamp: string
            status: string
            additionalData: string
    DictHubMerchantCustomerCreateResponse:
      description: |-
        Gets list of claims where the participant is donor or claimant.

        List of claims is sorted in ascending order by the LastModified field.
      required:
        - merchantCustomerId
        - name
        - taxId
        - createTimestamp
        - lastUpdateTimestamp
        - status
      type: object
      properties:
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          type: string
        name:
          description: The name of merchant customer
          type: string
        taxId:
          description: The merchant customer TaxId
          type: string
        additionalData:
          description: List of additional informations
          type: array
          items:
            type: string
        createTimestamp:
          format: date-time
          description: The creation date of merchant customer
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: The last update date of merchant customer
          type: string
        status:
          description: The status of merchant customer
          type: string
      example:
        merchantCustomerId: string
        name: string
        taxId: string
        createTimestamp: string
        lastUpdateTimestamp: string
        status: string
        additionalData: string
    PixCobV2XDevolucao:
      title: Reversal
      required:
        - id
        - rtrId
        - valor
        - horario
        - status
      type: object
      properties:
        horario:
          required:
            - solicitacao
          type: object
          properties:
            liquidacao:
              format: date-time
              title: Settlement Time
              description: Time at which the reversal was settled on the PSP.
              type: string
            solicitacao:
              format: date-time
              title: Request Time
              description: Time at which the reversal was requested on PSP.
              type: string
        id:
          $ref: '#/components/schemas/DevolucaoId'
        natureza:
          description: |-
            Indicates the nature of the return. A return can be related to a common Pix (corresponds to code MD06 of pacs.004), or to a Withdrawal or Change Pix (corresponds to code SL02 of pacs.004). In the absence of this field the nature shall be interpreted as being of a common Pix (ORIGINAL).

            The natures are defined as follows:
            - ORIGINAL: when the return refers to a common Pix or to the purchase amount in a Change Pix;
            - RETIRADA: when the return refers to a Withdrawal Pix or to the amount of change in a Change Pix.

            The return values are always limited to the maximum values according to:
            - Ordinary Pix: the return value is limited to the value of the Pix itself (the nature in that case is ORIGINAL);
            - Pix Withdrawal: the return amount is limited to the withdrawal amount (the nature in this case is WITHDRAWAL);
            - Pix Change: the return value is limited to the value related to the nature of the purchase: 

                - ORIGINAL: limited to the value of the purchase;

                - RETIRADA: limited to the value of the withdrawal.
          enum:
            - ORIGINAL
            - RETIRADA
          type: string
        descricao:
          description: Text to be presented to the payer containing information about the return. This text will be filled in, in pacs.004 by the creditor PSP, in the RemittanceInformation field.
          maxLength: 140
          type: string
        motivo:
          description: Description of the return status.
          maxLength: 140
          type: string
        rtrId:
          title: RtrId
          description: ReturnIdentification transiting PACS004.
          maxLength: 32
          minLength: 32
          type: string
          example: D12345678202009091000abcde123456
        status:
          title: Status
          description: Reversal Status.
          enum:
            - EM_PROCESSAMENTO
            - DEVOLVIDO
            - NAO_REALIZADO
          type: string
        valor:
          allOf:
            - $ref: '#/components/schemas/PixCobValor'
            - description: Value to return.
    CobrancaSaqueTrocoInformacoes:
      title: Root Type for CobrancaSaqueTroco
      description: Information for setting up a collection as withdrawal or change.
      required:
        - modalidadeAgente
        - prestadorDoServicoDeSaque
        - valor
      type: object
      properties:
        valor:
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: string
        modalidadeAlteracao:
          format: int32
          description: This field determines whether the final amount of the document can be changed by the payer. In the absence of this field, it is assumed that the amount of the dunning document cannot be changed, that is, the value 0 is assumed. If the field is present and has a value of 1, then it is determined that the final dunning amount can be changed by the payer.
          maximum: 1
          minimum: 0
          type: integer
        modalidadeAgente:
          description: Indicates the type of agent through which the service of withdrawal is provided withdrawal service.
          enum:
            - AGTEC
            - AGTOT
            - AGPSS
        prestadorDoServicoDeSaque:
          description: Indicates the ISPB of the withdrawal service provider.
          pattern: \d{8}
          type: string
      example:
        valor: '1.23'
        modalidadeAlteracao: 0
        modalidadeAgente: AGPSS
        prestadorDoServicoDeSaque: '12345678'
    CobrancaTrocoInformacoes:
      title: Root Type for CobrancaSaqueTroco
      description: Information for setting up a collection as withdrawal or change.
      required:
        - modalidadeAgente
        - prestadorDoServicoDeSaque
        - valor
      type: object
      properties:
        valor:
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: string
        modalidadeAlteracao:
          format: int32
          description: This field determines whether the final amount of the document can be changed by the payer. In the absence of this field, it is assumed that the amount of the dunning document cannot be changed, that is, the value 0 is assumed. If the field is present and has a value of 1, then it is determined that the final dunning amount can be changed by the payer.
          maximum: 1
          minimum: 0
          type: integer
        modalidadeAgente:
          description: Indicates the type of agent through which the service of withdrawal is provided withdrawal service.
          enum:
            - AGTEC
            - AGTOT
          type: string
        prestadorDoServicoDeSaque:
          description: Indicates the ISPB of the withdrawal service provider.
          pattern: \d{8}
          type: string
      example:
        valor: '1.23'
        modalidadeAlteracao: 0
        modalidadeAgente: AGTEC
        prestadorDoServicoDeSaque: '12345678'
    PixStaticBRCodeCreateRequest:
      description: The request type used to create a new StaticBRCode.
      required:
        - clientRequestId
        - key
        - merchant
      type: object
      properties:
        additionalInformation:
          description: This information will be displayed to the customers in his payment app before of the payment confirmation.
          type: string
        amount:
          description: The transaction amount to charge the customers. It's optional. If not filled the customer will decide the amount to pay. The Pix scheme follows the ISO2022 so you must inform the value with two decimal places for the cents.
          pattern: \d{1,10}\.\d{2}
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        key:
          description: The key in the Pix DICT that where the payment will be settled.
          type: string
        merchant:
          $ref: '#/components/schemas/PixMerchant'
          description: Information about the merchant.
        tags:
          description: A list of tags to categorize the resource. You can use this tags as filters in the search api.
          type: array
          items:
            type: string
        transactionIdentification:
          description: The transaction identification (txid) to be sent on PACS.008 message.
          pattern: '[a-zA-Z0-9]{1,25}'
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          pattern: '[0-9]{8}'
          type: string
    PixMerchant:
      title: Root Type for PixMerchant
      description: The Merchant type used in Pix apis.
      required:
        - name
        - city
      type: object
      properties:
        city:
          description: The merchant's city. Special chars are not allowed.
          maxLength: 15
          type: string
        merchantCategoryCode:
          description: The merchant category code. Usually used on the financial transactions to categorize the type of service provided by the merchant.
          pattern: \d{4}
          type: string
        name:
          description: The merchant's name. Special chars are not allowed.
          maxLength: 25
          type: string
        postalCode:
          description: The merchant's postal code.
          pattern: \d{8}
          type: string
      example:
        city: RIO DE JANEIRO
        merchantCategoryCode: 5499
        name: Pipocas BR
        postalCode: '20200100'
    PixStaticBRCodeResponse:
      title: Root Type for PixStaticBRCodeResponse
      description: The response received when you create a new StaticBRCode.
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixStaticBRCodeEntityEnvelope'
          description: The object with all information about the created StaticBRCode.
          properties:
            body:
              type: object
              properties:
                countryCode:
                  type: string
                emvqrcps:
                  type: string
                merchantAccountInformation:
                  type: object
                  properties:
                    additionalInformation:
                      type: string
                    key:
                      type: string
                merchantCategoryCode:
                  format: int32
                  type: integer
                merchantCity:
                  type: string
                merchantName:
                  type: string
                payloadFormatIndicator:
                  type: string
                postalCode:
                  type: string
                transactionAmount:
                  format: double
                  type: number
                transactionCurrency:
                  format: int32
                  type: integer
                transactionIdentification:
                  type: string
            clientRequestId:
              type: string
            createTimestamp:
              type: string
            entity:
              type: string
            lastUpdateTimestamp:
              type: string
            pactualId:
              type: string
            status:
              type: string
            tags:
              type: array
              items:
                type: string
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
        errors:
          $ref: '#/components/schemas/ErrorList'
          description: The list of errors.
      example:
        body:
          body:
            countryCode: BR
            emvqrcps: 00020126650014br.gov.bcb.pix0119mvleandro@gmail.com0220Obrigado por comprar520454995303986540510.255802BR5908Capas BR6014Rio de Janeiro61082020030062260522s85jI26SKUGlYaRkuRJP4g63044A32
            merchantAccountInformation:
              additionalInformation: Obrigado por comprar
              key: mvleandro@gmail.com
              withdrawalServiceProvider: '12345678'
            merchantCategoryCode: 5499
            merchantCity: Rio de Janeiro
            merchantName: Capas BR
            payloadFormatIndicator: '01'
            postalCode: '20200300'
            transactionAmount: 10.25
            transactionCurrency: 986
            transactionIdentification: s85jI26SKUGlYaRkuRJP4g
          clientRequestId: 4a801b0d-5b5f-4fa0-96ca-cf1a7cfad73d
          createTimestamp: '2020-07-20T15:07:46.461Z'
          entity: StaticBRCode
          lastUpdateTimestamp: '2020-07-20T15:07:46.461Z'
          pactualId: 2363ceb3-926e-4129-a561-a464b9124fe2
          status: CREATED
          tags:
            - capaiphone7
        status: 200
        version: 1.0.2
    PixStaticBRCodeEntityEnvelope:
      title: Root Type for PixStaticBRCodeEntityEnvelope
      description: The entity envelope with a StaticBRCode instance.
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixStaticBRCode'
          description: The PixStaticBRCode instance.
          properties:
            countryCode:
              type: string
            emvqrcps:
              type: string
            merchantAccountInformation:
              type: object
              properties:
                additionalInformation:
                  type: string
                key:
                  type: string
            merchantCategoryCode:
              format: int32
              type: integer
            merchantCity:
              type: string
            merchantName:
              type: string
            payloadFormatIndicator:
              type: string
            postalCode:
              type: string
            transactionAmount:
              format: double
              type: number
            transactionCurrency:
              format: int32
              type: integer
            transactionIdentification:
              type: string
        clientRequestId:
          description: The clientRequestId given on the request.
          type: string
        createTimestamp:
          description: The StaticBRCode's creation timestamp.
          type: string
        entity:
          description: The entity name. In this case, always be StaticBRCode.
          type: string
        lastUpdateTimestamp:
          description: The StaticBRCode's last update timestamp.
          type: string
        pactualId:
          description: The resource's unique identificator on BTG Pactual systems.
          type: string
        status:
          description: The resource's status.
          type: string
        tags:
          description: A list of tags used to categorize the resource. You can use this tags as filters in the search api.
          type: array
          items:
            type: string
      example:
        body:
          countryCode: BR
          emvqrcps: 00020126650014br.gov.bcb.pix0119mvleandro@gmail.com0220Obrigado por comprar520454995303986540510.255802BR5908Capas BR6014Rio de Janeiro61082020030062260522s85jI26SKUGlYaRkuRJP4g63044A32
          merchantAccountInformation:
            additionalInformation: Obrigado por comprar
            key: mvleandro@gmail.com
            withdrawalServiceProvider: '12345678'
          merchantCategoryCode: 5499
          merchantCity: Rio de Janeiro
          merchantName: Capas BR
          payloadFormatIndicator: '01'
          postalCode: '20200300'
          transactionAmount: 10.25
          transactionCurrency: 986
          transactionIdentification: s85jI26SKUGlYaRkuRJP4g
        clientRequestId: 4a801b0d-5b5f-4fa0-96ca-cf1a7cfad73d
        createTimestamp: '2020-07-20T15:07:46.461Z'
        entity: StaticBRCode
        lastUpdateTimestamp: '2020-07-20T15:07:46.461Z'
        pactualId: 2363ceb3-926e-4129-a561-a464b9124fe2
        status: CREATED
        tags:
          - capaiphone7
    PixStaticBRCode:
      title: Root Type for PixStaticBRCode
      description: Represents a StaticBRCode instance.
      required:
        - countryCode
        - emvqrcps
        - merchantAccountInformation
        - merchantCategoryCode
        - merchantCity
        - merchantName
        - payloadFormatIndicator
        - transactionIdentification
      type: object
      properties:
        countryCode:
          description: The country code according to ISO3166-1 alpha 2.
          type: string
        emvqrcps:
          description: The string representing this BRCode according with Brazilian Central Bank specifications.
          type: string
        merchantAccountInformation:
          $ref: '#/components/schemas/PixStaticBRCodeMerchantAccountInformation'
          description: The MerchantAccountInformation field.
          properties:
            additionalInformation:
              type: string
            key:
              type: string
        merchantCategoryCode:
          format: int32
          description: The merchant category code. Usually used on the financial transactions to categorize the type of service provided by the merchant.
          type: integer
        merchantCity:
          description: The merchant's city.
          type: string
        merchantName:
          description: The merchant's name.
          type: string
        payloadFormatIndicator:
          description: The payload format indicator according with the Brazilian Central Bank specifications for Static BRCode.
          type: string
        postalCode:
          description: 'The merchant''s postal code. '
          type: string
        transactionAmount:
          format: double
          description: The transaction amount to charge the customers. It's optional. If not filled the customer will decide the amount to pay. The Pix scheme follows the ISO2022 so you must inform the value with two decimal places for the cents.
          type: number
        transactionCurrency:
          format: int32
          description: The transaction currency code according with ISO4217. In case of BRL the number is 986.
          type: integer
        transactionIdentification:
          description: Corresponds to the "Reference Label" field. When customers pays this static BRCode this is the identificator that will be present on the arrived message.
          type: string
      example:
        countryCode: BR
        emvqrcps: 00020126650014br.gov.bcb.pix0119mvleandro@gmail.com0220Obrigado por comprar520454995303986540510.255802BR5908Capas BR6014Rio de Janeiro61082020030062260522s85jI26SKUGlYaRkuRJP4g63044A32
        merchantAccountInformation:
          additionalInformation: Obrigado por comprar
          key: mvleandro@gmail.com
          withdrawalServiceProvider: '12345678'
        merchantCategoryCode: 5499
        merchantCity: Rio de Janeiro
        merchantName: Capas BR
        payloadFormatIndicator: '01'
        postalCode: '20200300'
        transactionAmount: 10.25
        transactionCurrency: 986
        transactionIdentification: s85jI26SKUGlYaRkuRJP4g
    PixStaticBRCodeMerchantAccountInformation:
      title: Root Type for StaticBRCodeMerchantAccountInformation
      description: 'The merchant account information field in the StaticBRCode. '
      required:
        - key
      type: object
      properties:
        additionalInformation:
          description: This information will be displayed to the customers in his payment app before of the payment confirmation.
          type: string
        key:
          description: The key in the Pix DICT that where the payment will be settled.
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          type: string
      example:
        additionalInformation: Obrigado por comprar
        key: fulano@gmail.com
        withdrawalServiceProvider: '12345678'
    PixStaticBRCodeSearchResponseBodyContent:
      description: ''
      required:
        - totalFound
        - totalReturned
        - startingFrom
        - items
      type: object
      properties:
        items:
          description: A list of returned items.
          type: array
          items:
            $ref: '#/components/schemas/PixStaticBRCodeEntityEnvelope'
        startingFrom:
          description: The order position of first returned item.
          type: integer
        totalFound:
          description: The number of total found items.
          type: integer
        totalReturned:
          description: The number of total returned items.
          type: integer
    ErrorList:
      title: Root Type for ErrorContent
      description: The error object.
      type: array
      items:
        $ref: '#/components/schemas/ErrorBody'
      example:
        - message: Message from error
          errorCode: PCE123
    PixStaticBRCodeSearchResponse:
      title: Root Type for PixStaticBRCodeSearchResponse
      description: The response for searching static br codes.
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixStaticBRCodeSearchResponseBodyContent'
          description: The envelope with StaticBRCode instance.
          properties:
            items:
              type: array
              items:
                type: object
                properties:
                  body:
                    type: object
                    properties:
                      countryCode:
                        type: string
                      emvqrcps:
                        type: string
                      merchantAccountInformation:
                        type: object
                        properties:
                          additionalInformation:
                            type: string
                          key:
                            type: string
                      merchantCategoryCode:
                        format: int32
                        type: integer
                      merchantCity:
                        type: string
                      merchantName:
                        type: string
                      payloadFormatIndicator:
                        type: string
                      postalCode:
                        type: string
                      transactionAmount:
                        format: double
                        type: number
                      transactionCurrency:
                        format: int32
                        type: integer
                      transactionIdentification:
                        type: string
                  clientRequestId:
                    type: string
                  createTimestamp:
                    type: string
                  entity:
                    type: string
                  lastUpdateTimestamp:
                    type: string
                  pactualId:
                    type: string
                  status:
                    type: string
                  tags:
                    type: array
                    items:
                      type: string
            startingFrom:
              format: int32
              type: integer
            totalFound:
              format: int32
              type: integer
            totalReturned:
              format: int32
              type: integer
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
        errors:
          $ref: '#/components/schemas/ErrorList'
          description: The list of errors.
      example:
        body:
          items:
            - body:
                countryCode: BR
                emvqrcps: 00020126650014br.gov.bcb.pix0119mvleandro@gmail.com0220Obrigado por comprar520454995303986540510.255802BR5908Capas BR6014Rio de Janeiro61082020030062260522s85jI26SKUGlYaRkuRJP4g63044A32
                merchantAccountInformation:
                  additionalInformation: Obrigado por comprar
                  key: mvleandro@gmail.com
                  withdrawalServiceProvider: '12345678'
                merchantCategoryCode: 5499
                merchantCity: Rio de Janeiro
                merchantName: Capas BR
                payloadFormatIndicator: '01'
                postalCode: '20200300'
                transactionAmount: 10.25
                transactionCurrency: 986
                transactionIdentification: s85jI26SKUGlYaRkuRJP4g
              clientRequestId: 4a801b0d-5b5f-4fa0-96ca-cf1a7cfad73d
              createTimestamp: '2020-07-20T15:07:46.461Z'
              entity: StaticBRCode
              lastUpdateTimestamp: '2020-07-20T15:07:46.461Z'
              pactualId: 2363ceb3-926e-4129-a561-a464b9124fe2
              status: CREATED
              tags:
                - capaiphone7
          startingFrom: 0
          totalFound: 1
          totalReturned: 1
        status: 200
        version: 1.0.0
    EndToEndId:
      title: EndToEndIdentification
      description: EndToEndIdentification transiting PACS002, PACS004 and PACS008
      pattern: '[A-Z0-9]{32}'
      type: string
    PixCobV2XGet:
      title: Pix received
      required:
        - endToEndId
        - valor
        - horario
      type: object
      properties:
        chave:
          description: |
            # Key field format
            * Key field of the recipient as assigned in the respective PACS008.
            * The types of key can be: telephone, e-mail, cpf / cnpj or EVP.
            * The format of the keys can be found in the "Formatting the DICT keys in the BR Code" section of the
             [Standards Manual for initiating the
             Pix](https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos).
          maxLength: 77
          type: string
        devolucoes:
          title: Devoluções
          type: array
          items:
            $ref: '#/components/schemas/PixCobV2XDevolucao'
        endToEndId:
          $ref: '#/components/schemas/EndToEndId'
        horario:
          format: date-time
          title: Horário
          description: Time when Pix was processed on the PSP.
          type: string
        infoPagador:
          title: Free Payer Information.
          maxLength: 140
          type: string
        txid:
          $ref: '#/components/schemas/TxId'
        valor:
          allOf:
            - $ref: '#/components/schemas/PixCobValor'
            - description: Pix value.
        componentesValor:
          anyOf:
            - $ref: '#/components/schemas/PixComponentesValorTransferencia'
            - $ref: '#/components/schemas/PixComponentesValorSaque'
            - $ref: '#/components/schemas/PixComponentesValorTroco'
          description: The objective of this structure is to inform how the received PIX value was composed (information about withdrawal, change or transfer).
    PixIncomingConsultadosV2X:
      title: Pix Queried
      required:
        - parametros
        - cobs
      type: object
      properties:
        parametros:
          $ref: '#/components/schemas/ParametrosConsultaPixIncomingV2X'
        pix:
          title: List of Pix Received
          type: array
          items:
            allOf:
              - $ref: '#/components/schemas/PixCobV2XGet'
    PixComponentesValorTransferencia:
      title: PixComponentsTransferValue
      description: ''
      required:
        - original
      type: object
      properties:
        original:
          $ref: '#/components/schemas/PixComponentesValorTransferenciaBody'
          properties:
            valor:
              type: string
      example:
        original:
          valor: '10.00'
    PixComponentesValorTransferenciaBody:
      title: PixComponentsTransferValue
      description: ''
      required:
        - valor
      type: object
      properties:
        valor:
          description: Original value of the Pix.
          pattern: \d{1,10}\.\d{2}
          type: string
      example:
        valor: '80.00'
    PixComponentesValorSaque:
      title: PixComponentsWithdrawalValue
      description: ''
      required:
        - saque
      type: object
      properties:
        saque:
          $ref: '#/components/schemas/PixComponentesValorSaqueBody'
          properties:
            valor:
              type: string
            modalidadeAgente:
              type: string
            prestadorDeServicoDeSaque:
              type: string
      example:
        saque:
          valor: '20.00'
          modalidadeAgente: AGTEC
          prestadorDeServicoDeSaque: '12345678'
    PixComponentesValorSaqueBody:
      title: PixComponentsWithdrawalValue
      description: ''
      required:
        - prestadorDeServicoDeSaque
        - valor
        - modalidadeAgente
      type: object
      properties:
        valor:
          description: Amount of the Withdrawal Pix.
          pattern: \d{1,10}\.\d{2}
          type: string
        modalidadeAgente:
          description: Indicates the type of agent through which the service of withdrawal is provided withdrawal service.
          enum:
            - AGTEC
            - AGTOT
            - AGPSS
          type: string
        prestadorDeServicoDeSaque:
          description: ISPB of the Withdrawal Service Facilitator.
          pattern: \d{8}
          type: string
      example:
        valor: '20.00'
        modalidadeAgente: AGTEC
        prestadorDeServicoDeSaque: '12345678'
    PixComponentesValorTroco:
      title: PixComponentsChangeValue
      description: ''
      required:
        - original
        - troco
      type: object
      properties:
        original:
          $ref: '#/components/schemas/PixComponentesValorTransferenciaBody'
          properties:
            valor:
              type: string
        troco:
          $ref: '#/components/schemas/PixComponentesValorTrocoBody'
          properties:
            valor:
              type: string
            modalidadeAgente:
              type: string
            prestadorDoServicoDeSaque:
              type: string
      example:
        original:
          valor: '80.00'
        troco:
          valor: '20.00'
          modalidadeAgente: AGTEC
          prestadorDoServicoDeSaque: '12345678'
    PixComponentesValorTrocoBody:
      title: PixComponentsChangeValue
      description: ''
      required:
        - modalidadeAgente
        - prestadorDeServicoDeSaque
        - valor
      type: object
      properties:
        valor:
          description: Amount of the Withdrawal Pix.
          pattern: \d{1,10}\.\d{2}
          type: string
        modalidadeAgente:
          description: Indicates the type of agent through which the service of withdrawal is provided withdrawal service.
          enum:
            - AGTEC
            - AGTOT
          type: string
        prestadorDeServicoDeSaque:
          description: ISPB of the Withdrawal Service Facilitator.
          pattern: \d{8}
          type: string
      example:
        valor: '20.00'
        modalidadeAgente: AGTEC
        prestadorDoServicoDeSaque: '12345678'
    PixPaymentReversalEnvelopeResponse:
      title: Root Type for PixPaymentReversalEnvelopeResponse
      description: ''
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentReversalResponseBody'
          description: The envelope with PixReversal instance.
          properties:
            body:
              type: object
              properties:
                amount:
                  format: double
                  type: number
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version
          type: string
      example:
        body:
          body:
            amount: 0.01
            movementId: '0000001'
            originalEndToEndId: E0000000120200101112233445566778
            originalPactualId: 75bd25bb-5fd7-4eb8-8e0b-271bac55c06c
            reason: MD06
            returnIdentification: D00000002202001011112s33445555AB
          clientRequestId: D10000002202001011112s33445555AB
          createTimestamp: '2020-01-01T00:00:00.5922967+00:00'
          entity: PixReversal
          lastUpdateTimestamp: '2020-01-01T00:00:00.5922967+00:00'
          pactualId: 7bf2a93f-296e-42ac-a265-63a206121950
          status: CONFIRMED
          tags: []
        status: 200
        version: 1.0.0
    PixPaymentGetResponse:
      title: Root Type for PixPaymentGetResponse
      description: ''
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentGetResponseBody'
        errors:
          description: Array of errors.
          type: array
          items:
            $ref: '#/components/schemas/ErrorBody'
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        errors:
          - errorCode: string
            message: string
        status: 100
        version: string
    PixPaymentGetResponseBody:
      title: Response Body
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentGetResponseBodyInternal'
          description: Data Object.
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          description: Payment's creation timestamp.
          type: string
        entity:
          description: The entity's name.
          type: string
        lastUpdateTimestamp:
          description: Entity's last update timestamp.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        status:
          description: Transaction's current status.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        amount: 0
        clientRequestId: string
        creditParty: {}
        debitParty: {}
        endToEndId: string
        movementId: string
        pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        remittanceInformation: string
        tags:
          - string
        transactionIdentification: string
    PixPaymentGetResponseBodyInternal:
      title: Root Type for PixPaymentResponseBodyInternal
      description: ''
      required:
        - debitParty
        - endToEndId
        - creditParty
        - amount
        - urgency
        - transactionType
        - paymentType
        - initiationType
      type: object
      properties:
        movementId:
          description: Unique identification created when the transaction impacted the main client's account.
          type: string
        transactionIdentification:
          description: If present on StaticBRCode must be preserved and informed here. It's always present on DynamicBRCode and need to be informed here as well.
          pattern: '[a-zA-Z0-9]{1,35}'
          type: string
        debitParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyDebitParty'
          description: Data object containing debited's account information.
        endToEndId:
          description: End-to-end payment identifier associated with this request. The same used on DICT GET request.
          type: string
        amount:
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        creditParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyCreditParty'
          description: Data object containing credited's account information.
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").\r\n
          maxLength: 140
          type: string
        paymentType:
          description: The payment type.
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        transactionType:
          description: The transaction type.
          enum:
            - TRANSFER
            - CHANGE
            - WITHDRAWAL
          type: string
        urgency:
          description: The urgency of Pix.
          enum:
            - HIGH
            - NORMAL
          type: string
        initiationType:
          description: The initiation type.
          enum:
            - MANUAL
            - DICT
            - STATIC_QRCODE
            - DYNAMIC_QRCODE
            - PAYMENT_INITIATOR
          type: string
        vlcpAmount:
          description: The amount of the purchase.
          pattern: \d{1,10}\.\d{2}
          type: string
        vldnAmount:
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: string
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
        withdrawalAgentMode:
          description: Field used to discriminate the withdrawal agent mode and to identify the withdrawal service provider.
          enum:
            - AGTEC
            - AGTOT
            - AGPSS
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          pattern: '[0-9]{8}'
          type: string
        movementIds:
          description: Array of unique identification created when the transaction impacted the main client's account.
          type: array
          items:
            type: string
      example:
        movementId: 4f3c1360-c1d4-4e6b-b261-14ef479b4181
        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
        debitParty: {}
        endToEndId: E3030629420200808185300887639654
        amount: '10.01'
        creditParty: {}
        remittanceInformation: Information...
        paymentType: IMMEDIATE
        transactionType: CHANGE
        initiationType: MANUAL
        urgency: HIGH
        vlcpAmount: '5.01'
        vldnAmount: '5.00'
    PixCobAmountChangeEnUS:
      title: Collection Change
      description: ''
      required:
        - agentMode
        - vlcpAmount
        - vldnAmount
        - withdrawalServiceProvider
      type: object
      properties:
        vldnAmount:
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: string
        changeType:
          format: int32
          description: This field determines whether the final amount of the document can be changed by the payer. In the absence of this field, it is assumed that the amount of the dunning document cannot be changed, that is, the value 0 is assumed. If the field is present and has a value of 1, then it is determined that the final dunning amount can be changed by the payer.
          maximum: 1
          minimum: 0
          type: integer
        agentMode:
          description: Field used to discriminate the withdrawal agent mode and to identify the withdrawal service provider.
          enum:
            - AGTEC
            - AGTOT
            - AGPSS
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          pattern: '[0-9]{8}'
          type: string
        vlcpAmount:
          description: The amount of the purchase.
          pattern: \d{1,10}\.\d{2}
          type: string
      example:
        vldnAmount: 10.1
        vlcpAmount: 2
        changeType: 0
        agentMode: AGTEC
        withdrawalServiceProvider: '12345678'
    PixCobAmountWithdrawEnUS:
      title: Collection Withdrawal
      description: ''
      required:
        - agentMode
        - vldnAmount
        - withdrawalServiceProvider
      type: object
      properties:
        vldnAmount:
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: string
        changeType:
          format: int32
          description: This field determines whether the final amount of the document can be changed by the payer. In the absence of this field, it is assumed that the amount of the dunning document cannot be changed, that is, the value 0 is assumed. If the field is present and has a value of 1, then it is determined that the final dunning amount can be changed by the payer.
          maximum: 1
          minimum: 0
          type: integer
        agentMode:
          description: Field used to discriminate the withdrawal agent mode and to identify the withdrawal service provider.
          enum:
            - AGTEC
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          pattern: '[0-9]{8}'
          type: string
      example:
        vldnAmount: 10.1
        changeType: 0
        agentMode: AGTEC
        withdrawalServiceProvider: '12345678'
    PixCobValorOriginalEnUS:
      title: Root Type for CollectionAmount
      description: |-
        All fields that indicate monetary values follow the format of ID 54 of the EMV/BR Code specification for QR Codes. The decimal separator is the dot character. The thousand separator is not applicable. Examples of standard values: "0.00", "1.00", "123.99", "123456789.23".

        It is not allowed to fill the objects "change" and "withdrawal" simultaneously.
      required:
        - original
      type: object
      properties:
        original:
          description: Original debt amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        changeType:
          description: This field determines whether the final amount of the document can be changed by the payer. In the absence of this field, it is assumed that the amount of the dunning document cannot be changed, that is, the value 0 is assumed. If the field is present and has a value of 1, then it is determined that the final dunning amount can be changed by the payer.
          maximum: 1
          minimum: 0
          type: integer
        change:
          $ref: '#/components/schemas/PixCobAmountChangeEnUS'
          description: Information for setting up a collection as change.
        withdrawal:
          $ref: '#/components/schemas/PixCobAmountWithdrawEnUS'
          description: Information for setting up a collection as withdrawal.
      example:
        original: '1.0'
        changeType: 1
        change:
          vldnAmount: '1.0'
          changeType: 0
          agentMode: AGTEC
          withdrawalServiceProvider: '12345678'
          vlcpAmount: '2.0'
        withdrawal:
          vldnAmount: '1.0'
          changeType: 1
          agentMode: AGPSS
          withdrawalServiceProvider: '12345678'
    AdditionalInformation:
      title: Root Type for AdditionalInformation
      description: DynamicBRCode additional information field.
      type: object
      properties:
        key:
          description: The additional information key.
          type: string
        value:
          description: The additional information value.
          type: string
      example:
        key: string
        value: string
    PixCobBodyResponse:
      title: Root Type for PixCobBodyResponse
      description: ''
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixCobBodyContent'
          description: The immediate collection body instance.
          properties:
            body:
              type: object
              properties:
                additionalInformation:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                      value:
                        type: string
                amount:
                  type: object
                  properties:
                    original:
                      format: double
                      type: number
                calendar:
                  type: object
                  properties:
                    expiration:
                      format: int32
                      type: integer
                debtor:
                  type: object
                  properties:
                    cpf:
                      type: string
                    name:
                      type: string
                key:
                  type: string
                loc:
                  type: object
                  properties:
                    body:
                      type: object
                      properties:
                        emv:
                          type: string
                        locationType:
                          type: string
                        locationUrl:
                          type: string
                        merchant:
                          type: object
                          properties:
                            merchantCategoryCode:
                              format: int32
                              type: integer
                            merchantCity:
                              type: string
                            merchantName:
                              type: string
                            postalCode:
                              type: string
                    clientRequestId:
                      type: string
                    createTimestamp:
                      type: string
                    entity:
                      type: string
                    lastUpdateTimestamp:
                      type: string
                    pactualId:
                      type: string
                    status:
                      type: string
                    tags:
                      type: array
                      items: {}
                location:
                  type: string
                payerQuestion:
                  type: string
                revision:
                  format: int32
                  type: integer
            clientRequestId:
              type: string
            createTimestamp:
              type: string
            entity:
              type: string
            lastUpdateTimestamp:
              type: string
            pactualId:
              type: string
            status:
              type: string
            tags:
              type: array
              items:
                type: string
        status:
          format: int32
          description: The HTTP response status code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        body:
          body:
            additionalInformation:
              - key: chave
                value: valor
            amount:
              changeType: 0
              original: '1.22'
            calendar:
              expiration: 86400
            debtor:
              cpf: '11122233344'
              name: Teste
            key: teste@teste.com.br
            loc:
              body:
                emv: 00020101021226930014br.gov.bcb.pix2571api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc00603025204000053039865802BR5905Teste6005Teste61082000000062360532cabe4117ead3455dbfab4f7400cbc8b063042BEF
                id: 798
                merchant:
                  cty: Teste
                  merchantCategoryCode: 0
                  name: Teste
                  postalCode: '12345678'
                type: COB
                url: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
              clientRequestId: 30752427285f416d99c264b8b7dd64d4
              createTimestamp: '2021-01-01T00:00:00.5158219+00:00'
              entity: QrCodeLocation
              lastUpdateTimestamp: '2021-01-01T00:00:00.5158219+00:00'
              pactualId: 2be3aafe-9afa-4b0b-913f-073dc0060302
              status: CREATED
              tags: []
            location: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
            payerQuestion: Pergunta de teste
            revision: 0
          clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
          createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
          entity: PixImmediateCollection
          lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
          pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
          status: ACTIVE
          tags:
            - tag_1
            - tag_2
        status: 200
        version: 1.0.0
    PixCobBodyContent:
      title: Root Type for PixCobBodyResponse
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixCobBodyInternal'
          description: The immediate collection object instance.
          properties:
            additionalInformation:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
            amount:
              type: object
              properties:
                original:
                  format: double
                  type: number
            calendar:
              type: object
              properties:
                expiration:
                  format: int32
                  type: integer
            debtor:
              type: object
              properties:
                cpf:
                  type: string
                name:
                  type: string
            key:
              type: string
            loc:
              type: object
              properties:
                body:
                  type: object
                  properties:
                    emv:
                      type: string
                    locationType:
                      type: string
                    locationUrl:
                      type: string
                    merchant:
                      type: object
                      properties:
                        merchantCategoryCode:
                          format: int32
                          type: integer
                        merchantCity:
                          type: string
                        merchantName:
                          type: string
                        postalCode:
                          type: string
                clientRequestId:
                  type: string
                createTimestamp:
                  type: string
                entity:
                  type: string
                lastUpdateTimestamp:
                  type: string
                pactualId:
                  type: string
                status:
                  type: string
                tags:
                  type: array
                  items: {}
            location:
              type: string
            payerQuestion:
              type: string
            revision:
              format: int32
              type: integer
        clientRequestId:
          description: The unique transaction identification (this value corresponding to txid) given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          format: date-time
          description: Creation timestamp of immediate collection.
          type: string
        entity:
          description: The name of entity.
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: Last update time stamp of immediate collection.
          type: string
        pactualId:
          description: The unique identifier of immediate collection.
          type: string
        status:
          description: The current status of immediate collection.
          type: string
        tags:
          description: The list of tags.
          type: array
          items:
            type: string
      example:
        body:
          additionalInformation:
            - key: chave
              value: valor
          amount:
            original: '1.22'
            changeType: 0
          calendar:
            expiration: 86400
          debtor:
            cpf: '11122233344'
            name: Teste
          key: teste@teste.com.br
          loc:
            body:
              emv: 00020101021226930014br.gov.bcb.pix2571api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc00603025204000053039865802BR5905Teste6005Teste61082000000062360532cabe4117ead3455dbfab4f7400cbc8b063042BEF
              locationType: COB
              locationUrl: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
              merchant:
                merchantCategoryCode: 0
                merchantCity: Teste
                merchantName: Teste
                postalCode: '12345678'
            clientRequestId: 30752427285f416d99c264b8b7dd64d4
            createTimestamp: '2021-01-01T00:00:00.5158219+00:00'
            entity: QrCodeLocation
            lastUpdateTimestamp: '2021-01-01T00:00:00.5158219+00:00'
            pactualId: 2be3aafe-9afa-4b0b-913f-073dc0060302
            status: CREATED
            tags: []
          location: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
          payerQuestion: Pergunta de teste
          revision: 0
        clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
        createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
        entity: PixCollectionImmediate
        lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
        pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
        status: ACTIVE
        tags:
          - tag_1
          - tag_2
    PixCobBodyInternal:
      title: Root Type for PixCobBodyContent
      description: ''
      required:
        - amount
        - key
        - revision
        - calendar
        - debtor
      type: object
      properties:
        revision:
          format: int32
          description: The revision of location.
          type: integer
        calendar:
          $ref: '#/components/schemas/PixCobCalendar'
          description: The value of calendar.
          properties:
            expiration:
              format: int32
              type: integer
        location:
          description: The location without "HTTPS://" prefix.
          type: string
        debtor:
          $ref: '#/components/schemas/Debtor'
          description: The debtor object instance.
          properties:
            cpf:
              type: string
            name:
              type: string
        loc:
          $ref: '#/components/schemas/PixLocEntity'
          description: The loc object instance.
          properties:
            pactualId:
              type: string
            clientRequestId:
              type: string
            createTimestamp:
              type: string
            lastUpdateTimestamp:
              type: string
            entity:
              type: string
            status:
              type: string
            body:
              type: object
              properties:
                merchant:
                  type: object
                  properties:
                    merchantName:
                      type: string
                    merchantCity:
                      type: string
                    postalCode:
                      type: string
                    merchantCategoryCode:
                      format: int32
                      type: integer
                locationUrl:
                  type: string
                emv:
                  type: string
                locationType:
                  type: string
            tags:
              type: array
              items: {}
        amount:
          $ref: '#/components/schemas/PixCobValorOriginalEnUS'
          description: The value of collection.
          properties:
            original:
              format: double
              pattern: \d{1,10}\.\d{2}
              type: number
        key:
          description: The DICT key.
          maxLength: 77
          type: string
        payerQuestion:
          description: The question of payer.
          maxLength: 140
          type: string
        additionalInformation:
          description: The list of additional informations.
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformation'
            maxLength: 50
      example:
        revision: 0
        calendar:
          expiration: 86400
        location: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
        debtor:
          cpf: '11122233344'
          name: Teste
        loc:
          pactualId: 2be3aafe-9afa-4b0b-913f-073dc0060302
          clientRequestId: 30752427285f416d99c264b8b7dd64d4
          createTimestamp: '2021-01-01T00:00:00.5158219+00:00'
          lastUpdateTimestamp: '2021-01-01T00:00:00.5158219+00:00'
          entity: QrCodeLocation
          status: CREATED
          body:
            merchant:
              merchantName: Teste
              merchantCity: Teste
              postalCode: '12345678'
              merchantCategoryCode: 0
            locationUrl: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
            emv: 00020101021226930014br.gov.bcb.pix2571api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc00603025204000053039865802BR5905Teste6005Teste61082000000062360532cabe4117ead3455dbfab4f7400cbc8b063042BEF
            locationType: COB
          tags: []
        amount:
          original: '1.22'
          changeType: 0
        key: teste@teste.com.br
        payerQuestion: Pergunta de teste
        additionalInformation:
          - key: chave
            value: valor
    PixLocEntity:
      title: Root Type for LocEntity
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixLocEntityBody'
          description: The loc object instance.
          properties:
            emv:
              type: string
            locationType:
              type: string
            locationUrl:
              type: string
            merchant:
              type: object
              properties:
                merchantCategoryCode:
                  format: int32
                  type: integer
                merchantCity:
                  type: string
                merchantName:
                  type: string
                postalCode:
                  type: string
        clientRequestId:
          description: The unique transaction identification (txid) given by the client side. This value can't be repeated.
          pattern: '[a-zA-Z0-9]{26,35}'
          type: string
        createTimestamp:
          format: date-time
          description: Creation timestamp of location.
          type: string
        entity:
          description: The name of entity.
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: Last update time stamp of location.
          type: string
        pactualId:
          description: The unique identifier of location.
          type: string
        status:
          description: The current status of location.
          type: string
        tags:
          description: The list of tags.
          type: array
          items: {}
    PixLocEntityBody:
      title: Root Type for LocEntityBody
      description: ''
      required:
        - merchant
        - locationUrl
        - locationType
        - emv
        - id
      type: object
      properties:
        emv:
          description: The QRCode string representation.
          type: string
        id:
          format: int64
          description: Location identifier to be informed when creating the collection.
          type: integer
        merchant:
          $ref: '#/components/schemas/PixMerchant'
          description: The merchant object instance.
          properties:
            merchantCategoryCode:
              format: int32
              type: integer
            merchantCity:
              type: string
            merchantName:
              type: string
            postalCode:
              type: string
        type:
          description: The type of location.
          enum:
            - COB
            - COBV
          type: string
        url:
          description: The location of URL.
          type: string
    PixCollectionDueDateCalendarRequest:
      title: Root Type for Calendar.
      type: object
      properties:
        calendar:
          description: The fields nested under the calendar identifier organize information regarding billing time tracking.
          allOf:
            - $ref: '#/components/schemas/PixCollectionDueDateCalendarBase'
      example:
        dueDate: '2021-12-16'
        expirationAfterPayment: 30
    PixCollectionDueDateCalendarBase:
      title: Root Type for CalendarioBase
      description: ''
      required:
        - dueDate
        - expirationAfterPayment
      type: object
      properties:
        dueDate:
          format: date
          description: It is a date, in the format `yyyy-mm-dd`, according to ISO 8601. It is the due date of the collection. The charge can be honored up to and including that day, at any time of the day.
          type: string
        expirationAfterPayment:
          format: int32
          description: This is the number of calendar days after the due date on which the charge can be paid. If this period has expired and the charge has not been paid, it will remain ACTIVE.
          default: '30'
          type: integer
    PixCollectionDueDateDebtor:
      title: Root Type for Debtor.
      type: object
      properties:
        debtor:
          oneOf:
            - $ref: '#/components/schemas/PixCollectionNaturalPerson'
            - $ref: '#/components/schemas/PixCollectionLegalPerson'
          description: The fields nested under the debtor object are optional and identify the debtor, that is, the person or institution to whom the collection is addressed. It does not necessarily identify who will actually make the payment. A CPF may be the debtor of a charge, but another CPF may actually pay the document. The field debtor.cpf and field debtor.cnpj are not allowed to be filled at the same time. If the field debtor.cnpj is filled, then the field debtor.cpf cannot be filled, and vice versa. If the debtor.name field is filled, then either a debtor.cpf or a debtor.cnpj field must be filled in..
          allOf:
            - type: object
              properties:
                email:
                  title: Email
                  description: User email.
                  maxLength: 200
                  type: string
            - $ref: '#/components/schemas/PixCollectionDueDateAdditionalDataPerson'
    PixCollectionNaturalPerson:
      title: Natural Person
      required:
        - cpf
        - name
      type: object
      properties:
        cpf:
          allOf:
            - $ref: '#/components/schemas/CPF'
            - description: CPF of the borrower or 'drawee'.
        name:
          title: Name
          description: Name of the borrower or 'drawee'.
          maxLength: 200
          type: string
    PixCollectionLegalPerson:
      title: Legal Person
      required:
        - cnpj
        - name
      type: object
      properties:
        cnpj:
          allOf:
            - $ref: '#/components/schemas/CNPJ'
            - description: CNPJ of the borrower or 'drawee'.
        name:
          title: Name
          description: Name of the borrower or 'drawee'.
          maxLength: 200
          type: string
    PixCollectionDueDateAdditionalDataPerson:
      type: object
      properties:
        publicArea:
          title: PublicArea
          description: User address.
          maxLength: 200
          type: string
        city:
          title: City
          description: User city.
          maxLength: 200
          type: string
        state:
          title: State
          description: User state.
          maxLength: 2
          type: string
        postalCode:
          title: PostalCode
          description: User postal code.
          maxLength: 8
          type: string
    PixCollectionDueDateReceiver:
      required:
        - publicArea
        - city
        - state
        - zipCode
      type: object
      properties:
        receiver:
          oneOf:
            - $ref: '#/components/schemas/PixCollectionNaturalPerson'
            - type: object
              allOf:
                - $ref: '#/components/schemas/PixCollectionLegalPerson'
                - type: object
                  properties:
                    fantasyName:
                      title: Fantasy name.
                      description: Fantasy name
                      maxLength: 200
                      type: string
          description: The receiving object organizes the information about the collection creditor.
          allOf:
            - $ref: '#/components/schemas/PixCollectionDueDateAdditionalDataPersonReceiver'
    PixCollectionDueDateAdditionalDataPersonReceiver:
      required:
        - city
        - postalCode
        - publicArea
        - state
      type: object
      properties:
        publicArea:
          title: PublicArea
          description: User address.
          maxLength: 200
          type: string
        city:
          title: City
          description: User city.
          maxLength: 200
          type: string
        state:
          title: State
          description: User state.
          maxLength: 2
          type: string
        postalCode:
          title: PostalCode
          description: User postal code.
          maxLength: 8
          type: string
    PixCollectionDueDateBase:
      title: Base Debt Collection Due date
      description: Attributes common to all Debt Collection entities
      type: object
      properties:
        additionalInformation:
          title: Additional information
          description: Each respective additional information contained in the list (name and value) must be presented to the payer.
          maximum: 50
          type: array
          items:
            required:
              - nome
              - valor
            type: object
            properties:
              key:
                title: Name
                description: Name Field.
                maxLength: 50
                type: string
              value:
                title: Value
                description: Data Field.
                maxLength: 200
                type: string
        key:
          title: DICT receiver key
          description: |-
            # Key field format
            * The key field, mandatory, determines the Pix key registered in the DICT that will be used for the billing. This key will be read by the payer's PSP application for consultation with the DICT, which will return the information that will identify the recipient of the charge.
            * The key types can be: PHONE, EMAIL, CPF/CNPJ OR EVP.
            * The format of the keys can be found in the \"Formatting the DICT keys in the BR Code\" section of the Standards Manual for Pix initiation](https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos).
          maxLength: 77
          type: string
        payerQuestion:
          title: Request to payer
          description: The solicitacaoPagador field, optional, determines a text to be presented to the payer so that he can enter a correlated information, in free format, to be sent to the receiver. This text will be filled in pacs.008 by the payer's PSP in the RemittanceInformation <RmtInf> field. The size of the field <RmtInf> in pacs.008 is limited to 140 characters.
          maxLength: 140
          type: string
    PixCollectionDueDateAmount:
      title: Collection amount due.
      description: Monetary values.
      required:
        - original
      type: object
      properties:
        abatement:
          title: Abatement applied.
          description: Abatement applied to collection.
          required:
            - modality
            - amountPerc
          properties:
            amountPerc:
              title: Abatements
              description: Abatement or other deductions applied to the document, in absolute or percentage of the original value of the document, according to "amount.abatement.modality".
              pattern: \d{1,10}\.\d{2}
              type: string
            modality:
              format: enum
              title: Abatement modality.
              description: |
                ##### Abatement modality, according to the domains table.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>FIXED_VALUE</td><td>1</td></tr><tr><td>PERCENT</td><td>2</td></tr></table>
              type: string
        discount:
          oneOf:
            - type: object
              properties:
                discountDateFixed:
                  title: Discount List.
                  description: Absolute discounts applied to collection.
                  maxItems: 3
                  minItems: 1
                  uniqueItems: true
                  type: array
                  items:
                    required:
                      - date
                      - amountPerc
                    allOf:
                      - properties:
                          date:
                            format: date
                            title: Deadline for the absolute discount of the charge.
                            description: Discounts for prepayment, with fixed date. Matrix with up to three elements, each element consisting of a pair "date and valuePerc", to establish percentage or absolute discounts, up to that payment date. It is a date, in the format `yyyy-mm-dd`, according to ISO 8601. The discount date must be less than the due date of the collection.
                            type: string
                            example: '2020-04-01'
                      - properties:
                          amountPerc:
                            title: Absolute discount amount.
                            description: Discount in absolute value or percentage per day, working or accrued, as per amount.discount.modality
                            pattern: \d{1,10}\.\d{2}
                            type: string
            - required:
                - amountPerc
              type: object
              properties:
                amountPerc:
                  title: Rebates
                  description: Abatements or other deductions applied to the document, in absolute or percentage of the original value of the document.
                  pattern: \d{1,10}\.\d{2}
                  type: string
          title: Discounts applied.
          description: Discounts applied to the charge.
          required:
            - modality
          allOf:
            - type: object
              properties:
                modality:
                  format: enum
                  title: Discounts modality.
                  description: |
                    ##### Discount mode, according to the domains table.
                    <table><tr><th>Description</th><th>Domain</th></tr> <tr><td>FIXED_VALUE_UNTIL_THE_DATES_INFORMED</td><td>1</td></tr> <tr><td>PERCENTAGE_DATE_REPORTED</td><td>2</td></tr> <tr><td>AMOUNT_PER_CALENDAR_DAY_ADVANCE</td><td>3</td></tr> <tr><td>AMOUNT_ADVANCE_BUSINESS_DAY</td><td>4</td></tr> <tr><td>PERCENTAGE_ADVANCE_CURRENT_DAY</td><td>5</td></tr> <tr><td>PERCENTAGE_ADVANCE_BUSINESS_DAY</td><td>6</td></tr></table>
                  type: string
        fine:
          title: Fine applied.
          description: Fine applied to the collection.
          required:
            - modality
            - amountPerc
          type: object
          properties:
            amountPerc:
              title: Absolute fine amount.
              description: Fine of the document in absolute or percentage value, according to "amount.fine.modality".
              pattern: \d{1,10}\.\d{2}
              type: string
            modality:
              format: enum
              title: Fine modality.
              description: |
                ##### Mode of fine, according to the table of domains.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>FIXED_VALUE</td><td>1</td></tr><tr><td>PERCENT</td><td>2</td></tr></table>
              type: string
        interest:
          title: Interest applied.
          description: Interest applied to collection.
          required:
            - modality
            - amountPerc
          type: object
          properties:
            amountPerc:
              title: Amount
              description: Interest of the document in absolute or percentage value, according to "amount.interest.modality".
              pattern: \d{1,10}\.\d{2}
              type: string
            modality:
              format: enum
              title: Interest modality.
              description: |
                ##### Interest rate, according to the domains table.
                <table> <tr><th>Description</th><th>Domain</th></tr> <tr><td>VALUE_CALENDAR_DAYS</td><td>1</td></tr> <tr><td>PERCENTAGE_PER_DAY_CALENDAR_DAYS</td><td>2</td></tr> <tr><td>PERCENTAGE_PER_MONTH_CALENDAR_DAYS</td><td>3</td></tr> <tr><td>PERCENTAGE_PER_YEAR_CALENDAR_DAYS</td><td>4</td></tr> <tr><td>VALUE_WORKING_DAYS</td><td>5</td></tr> <tr><td>PERCENTAGE_PER_DAYWORKING_DAYS</td><td>6</td></tr> <tr><td>PERCENTAGE_PER_MONTH_WORKING_DAYS</td><td>7</td></tr> <tr><td>PERCENTAGE_PER_YEAR_WORKING_DAYS</td><td>8</td></tr> </table>
              type: string
        original:
          title: Amount
          description: Original collection amount.
          pattern: \d{1,10}\.\d{2}
          type: string
    PixCollectionDueDateResponse:
      title: Root Type for PixCollectionDueDateReponse
      description: ''
      required:
        - calendar
        - debtor
        - receiver
        - txid
        - key
        - revision
        - status
        - amount
      type: object
      allOf:
        - $ref: '#/components/schemas/PixCollectionDueDateCalendarResponse'
        - type: object
          properties:
            txid:
              description: The unique transaction identification given by the client side.
              type: string
        - type: object
          properties:
            revision:
              format: int32
              description: Collection review. Always starts at zero. Always varies in increments of 1.
              type: integer
        - $ref: '#/components/schemas/PixCollectionDueDateDebtor'
        - $ref: '#/components/schemas/PixCollectionDueDateReceiver'
        - type: object
          properties:
            amount:
              $ref: '#/components/schemas/PixCollectionDueDateAmount'
            loc:
              $ref: '#/components/schemas/PixLocEntity'
            status:
              $ref: '#/components/schemas/PixCobStatus'
        - $ref: '#/components/schemas/PixCollectionDueDateBase'
      example:
        body:
          body:
            additionalInformation:
              - key: string
                value: string
            amount:
              abatement:
                amountPerc: 2
                modality: FIXED_VALUE
              discount:
                discountDateFixed:
                  - amountPerc: 20
                    date: '2021-11-16'
                  - amountPerc: 20
                    date: '2021-11-16'
                  - amountPerc: 20
                    date: '2021-11-16'
                modality: FIXED_VALUE_UNTIL_THE_DATES_INFORMED
              fine:
                amountPerc: 10
                modality: FIXED_VALUE
              interest:
                amountPerc: 1
                modality: VALUE_WORKING_DAYS
              original: 100
            calendar:
              creationTimestamp: '2021-01-15T15:25:23Z'
              dueDate: '2021-12-16'
              expirationAfterPayment: 10
            debtor:
              city: sao paulo
              cpf: '12345678901'
              email: user@example.com
              name: jose da silva
              publicArea: avenida paulista
              state: SP
              zipCode: '12345678'
            key: '+552197993512412'
            location:
              body:
                emv: 00020101021226980014br.gov.bcb.pix2576api.dev.developer.btgpactual.com/qr/v2/cobv/acc34da1cea549158395945dc15140c55204000053039865802BR5907Emerson6009Sao Paulo61081234567862360532acc34da1cea549158395945dc15140c5630434FA
                locationType: COBV
                locationUrl: api.dev.developer.btgpactual.com/qr/v2/cobv/acc34da1cea549158395945dc15140c5
                merchant:
                  merchantCategoryCode: 0
                  merchantCity: Sao Paulo
                  merchantName: Emerson
                  postalCode: '12345678'
              clientRequestId: 7ff3e5e1-3cd9-4740-0000-000000000000
              createTimestamp: '2021-01-15T15:24:23.0728393+00:00'
              entity: QrCodeLocation
              lastUpdateTimestamp: '2021-01-15T15:24:23.0728393+00:00'
              pactualId: acc34da1-cea5-4915-8395-945dc15140c5
              status: CREATED
              tags:
                - string
                - tag
            payerQuestion: string
            receiver:
              city: Curitiba
              cnpj: '12345678909876'
              fantasyName: Nome Fantasia
              name: Nome Comerciante
              publicArea: Rua Agua verde
              state: PR
              zipCode: '88888333'
            revision: 0
            txid: '00000000000000000000000000000013'
          clientRequestId: '00000000000000000000000000000013'
          createTimestamp: '2021-01-15T15:25:23.1924254+00:00'
          entity: PixCollectionDueDate
          lastUpdateTimestamp: '2021-01-15T15:25:23.1924254+00:00'
          pactualId: cd4f60a6-251e-4a2b-bbbb-0f0939215891
          status: ACTIVE
          tags:
            - Collection
        status: 201
        version: 0.1.0-pix-cob-implementation.1+74
    PixCollectionDueDateCalendarResponse:
      title: Root Type for Calendar.
      required:
        - calendar
      type: object
      properties:
        calendar:
          description: The fields nested under the calendar identifier organize information regarding billing time tracking.
          allOf:
            - $ref: '#/components/schemas/PixCollectionDueDateCalendarBaseResponse'
    PixCollectionDueDateCalendarBaseResponse:
      title: Root Type for CalendarioBase
      description: ''
      required:
        - creationTimestamp
        - dueDate
        - expirationAfterPayment
      type: object
      properties:
        creationTimestamp:
          format: date-time
          description: Timestamp that indicates the moment when the collection was created. Respects the format defined in RFC 3339.
          type: string
        dueDate:
          format: date
          description: It is a date, in the format `yyyy-mm-dd`, according to ISO 8601. It is the due date of the collection. The charge can be honored up to and including that day, at any time of the day.
          type: string
        expirationAfterPayment:
          format: int32
          description: This is the number of calendar days after the due date on which the charge can be paid. If this period has expired and the charge has not been paid, it will remain ACTIVE.
          default: '30'
          type: integer
    PixCollectionDueDateResponseEnvelope:
      title: Root Type for PixCollectionDueDateResponseEnvelope
      description: ''
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixCollectionDueDateResponseBodyContent'
          description: The Collection Due date data.
          properties:
            countryCode:
              type: string
            emvqrcps:
              type: string
            merchantAccountInformation:
              type: object
              properties:
                additionalInformation:
                  type: string
                gui:
                  type: string
                key:
                  type: string
            merchantCategoryCode:
              format: int32
              type: integer
            merchantCity:
              type: string
            merchantName:
              type: string
            payloadFormatIndicator:
              type: string
            postalCode:
              type: string
            transactionAmount:
              format: double
              type: number
            transactionCurrency:
              format: int32
              type: integer
            transactionIdentification:
              type: string
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        body:
          body:
            additionalInformation:
              - key: string
                value: string
            amount:
              abatement:
                amountPerc: 2
                modality: FIXED_VALUE
              discount:
                discountDateFixed:
                  - amountPerc: 20
                    date: '2021-11-16'
                  - amountPerc: 20
                    date: '2021-11-16'
                  - amountPerc: 20
                    date: '2021-11-16'
                modality: FIXED_VALUE_UNTIL_THE_DATES_INFORMED
              fine:
                amountPerc: 10
                modality: FIXED_VALUE
              interest:
                amountPerc: 1
                modality: VALUE_WORKING_DAYS
              original: 100
            calendar:
              creationTimestamp: '2021-01-15T15:25:23Z'
              dueDate: '2021-12-16'
              expirationAfterPayment: 10
            debtor:
              city: sao paulo
              cpf: '12345678901'
              email: user@example.com
              name: jose da silva
              publicArea: avenida paulista
              state: SP
              zipCode: '12345678'
            key: '+552197993512412'
            location:
              body:
                emv: 00020101021226980014br.gov.bcb.pix2576api.dev.developer.btgpactual.com/qr/v2/cobv/acc34da1cea549158395945dc15140c55204000053039865802BR5907Emerson6009Sao Paulo61081234567862360532acc34da1cea549158395945dc15140c5630434FA
                locationType: COBV
                locationUrl: api.dev.developer.btgpactual.com/qr/v2/cobv/acc34da1cea549158395945dc15140c5
                merchant:
                  merchantCategoryCode: 0
                  merchantCity: Sao Paulo
                  merchantName: Emerson
                  postalCode: '12345678'
              clientRequestId: 7ff3e5e1-3cd9-4740-0000-000000000000
              createTimestamp: '2021-01-15T15:24:23.0728393+00:00'
              entity: QrCodeLocation
              lastUpdateTimestamp: '2021-01-15T15:24:23.0728393+00:00'
              pactualId: acc34da1-cea5-4915-8395-945dc15140c5
              status: CREATED
              tags:
                - string
                - tag
            payerQuestion: string
            receiver:
              city: Curitiba
              cnpj: '12345678909876'
              fantasyName: Nome Fantasia
              name: Nome Comerciante
              publicArea: Rua Agua verde
              state: PR
              zipCode: '88888333'
            revision: 0
            txid: '00000000000000000000000000000013'
          clientRequestId: '00000000000000000000000000000013'
          createTimestamp: '2021-01-15T15:25:23.1924254+00:00'
          entity: PixCollectionDueDate
          lastUpdateTimestamp: '2021-01-15T15:25:23.1924254+00:00'
          pactualId: cd4f60a6-251e-4a2b-bbbb-0f0939215891
          status: ACTIVE
          tags:
            - Collection
        status: 200
        version: 0.1.0-pix-cob-implementation.1+74
    PixCollectionDueDateResponseBodyContent:
      title: Root Type for PixCobBodyResponse
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixCollectionDueDateResponse'
          description: The immediate collection object instance.
          properties:
            additionalInformation:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
            amount:
              type: object
              properties:
                original:
                  format: double
                  type: number
            calendar:
              type: object
              properties:
                expiration:
                  format: int32
                  type: integer
            debtor:
              type: object
              properties:
                cpf:
                  type: string
                name:
                  type: string
            key:
              type: string
            loc:
              type: object
              properties:
                body:
                  type: object
                  properties:
                    emv:
                      type: string
                    locationType:
                      type: string
                    locationUrl:
                      type: string
                    merchant:
                      type: object
                      properties:
                        merchantCategoryCode:
                          format: int32
                          type: integer
                        merchantCity:
                          type: string
                        merchantName:
                          type: string
                        postalCode:
                          type: string
                clientRequestId:
                  type: string
                createTimestamp:
                  type: string
                entity:
                  type: string
                lastUpdateTimestamp:
                  type: string
                pactualId:
                  type: string
                status:
                  type: string
                tags:
                  type: array
                  items: {}
            location:
              type: string
            payerQuestion:
              type: string
            revision:
              format: int32
              type: integer
        clientRequestId:
          description: The unique transaction identification (txid) given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          format: date-time
          description: Creation timestamp of immediate collection.
          type: string
        entity:
          description: The name of entity.
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: Last update time stamp of immediate collection.
          type: string
        pactualId:
          description: The unique identifier of immediate collection.
          type: string
        status:
          description: The current status of immediate collection.
          type: string
        tags:
          description: The list of tags.
          type: array
          items:
            type: string
      example:
        body:
          additionalInformation:
            - key: chave
              value: valor
          amount:
            original: '1.22'
          calendar:
            expiration: 86400
          debtor:
            cpf: '11122233344'
            name: Teste
          key: teste@teste.com.br
          loc:
            body:
              emv: 00020101021226930014br.gov.bcb.pix2571api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc00603025204000053039865802BR5905Teste6005Teste61082000000062360532cabe4117ead3455dbfab4f7400cbc8b063042BEF
              locationType: COB
              locationUrl: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
              merchant:
                merchantCategoryCode: 0
                merchantCity: Teste
                merchantName: Teste
                postalCode: '12345678'
            clientRequestId: 30752427285f416d99c264b8b7dd64d4
            createTimestamp: '2021-01-01T00:00:00.5158219+00:00'
            entity: QrCodeLocation
            lastUpdateTimestamp: '2021-01-01T00:00:00.5158219+00:00'
            pactualId: 2be3aafe-9afa-4b0b-913f-073dc0060302
            status: CREATED
            tags: []
          location: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
          payerQuestion: Pergunta de teste
          revision: 0
        clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
        createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
        entity: PixCollectionImmediate
        lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
        pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
        status: ACTIVE
        tags:
          - tag_1
          - tag_2
    PixCollectionDueDateLocationCreateRequest:
      title: Root Type for PixCollectionDueDateCreateRequest
      description: ''
      required:
        - calendar
        - key
        - debtor
        - amount
      type: object
      allOf:
        - type: object
        - $ref: '#/components/schemas/PixCollectionDueDateCalendarRequest'
        - required:
            - Debtor
          type: object
          properties:
            amount:
              $ref: '#/components/schemas/PixCollectionDueDateAmount'
            Debtor:
              oneOf:
                - $ref: '#/components/schemas/PixCollectionNaturalPerson'
                - $ref: '#/components/schemas/PixCollectionLegalPerson'
              description: The fields nested under the debtor object are optional and identify the debtor, that is, the person or institution to whom the collection is addressed. It does not necessarily identify who will actually make the payment. A CPF may be the debtor of a charge, but another CPF may actually pay the document. The field debtor.cpf and field debtor.cnpj are not allowed to be filled at the same time. If the field debtor.cnpj is filled, then the field debtor.cpf cannot be filled, and vice versa. If the debtor.name field is filled, then either a debtor.cpf or a debtor.cnpj field must be filled in..
              allOf:
                - type: object
                  properties:
                    email:
                      title: Email
                      description: User email.
                      maxLength: 200
                      type: string
                - $ref: '#/components/schemas/PixCollectionDueDateAdditionalDataPerson'
            receiver:
              oneOf:
                - $ref: '#/components/schemas/PixCollectionNaturalPerson'
                - type: object
                  allOf:
                    - $ref: '#/components/schemas/PixCollectionLegalPerson'
                    - type: object
                      properties:
                        fantasyName:
                          title: Fantasy name.
                          description: Fantasy name
                          maxLength: 200
                          type: string
              description: The receiving object organizes the information about the collection creditor.
              allOf:
                - $ref: '#/components/schemas/PixCollectionDueDateAdditionalDataPersonReceiver'
        - $ref: '#/components/schemas/PixCollectionDueDateBase'
      example:
        additionalInformation:
          - key: string
            value: string
        amount:
          abatement:
            amountPerc: 2
            modality: FIXED_VALUE
          discount:
            discountDateFixed:
              - amountPerc: 20
                date: '2021-11-16'
              - amountPerc: 20
                date: '2021-11-16'
              - amountPerc: 20
                date: '2021-11-16'
            modality: FIXED_VALUE_UNTIL_THE_DATES_INFORMED
          fine:
            amountPerc: 10
            modality: FIXED_VALUE
          interest:
            amountPerc: 1
            modality: VALUE_WORKING_DAYS
          original: '100.00'
        calendar:
          dueDate: '2021-12-16'
          expirationAfterPayment: 10
        debtor:
          city: sao paulo
          cpf: '12345678901'
          email: user@example.com
          name: jose da silva
          publicArea: avenida paulista
          state: SP
          zipCode: '12345678'
        key: '+552197993512412'
        payerQuestion: string
        receiver:
          city: Curitiba
          cnpj: '12345678909876'
          fantasyName: Nome Fantasia
          name: Nome Comerciante
          publicArea: Rua Agua verde
          state: PR
          zipCode: '88888333'
        tags:
          - Collection
    PixPaymentLimitValidatorResponse:
      title: Root Type for PixStaticBRCodePaymentResponse
      description: ''
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentLimitValidatorResponseBody'
        errors:
          description: Array of errors.
          type: array
          items:
            $ref: '#/components/schemas/ErrorBody'
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        body:
          pactualId: 699a5cbc-e07c-4edc-b152-e942c36d14ac
          clientRequestId: 2bb350ca-442c-42fa-b044-ba2534b601fd
          createTimestamp: '2023-01-23T20:17:01.3780252+00:00'
          lastUpdateTimestamp: '2023-01-23T20:17:01.3780252+00:00'
          entity: PixPayment
          status: PROCESSING
          body:
            merchantCustomerId: b0e39511-9a5e-4e74-b8e2-f00080c46472
            transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
            debitParty:
              account: '2000'
              accountType: CACC
              bank: '30306294'
              branch: '2'
              name: Fulano de Tal
              taxId: '33333333333'
            endToEndId: E3030629420200808185300887639654
            amount: '10.01'
            creditParty:
              account: '1000'
              accountType: CACC
              bank: '30306294'
              branch: '1'
              name: Beltrano de Tal
              taxId: '22222222222'
            remittanceInformation: Information...
            paymentType: IMMEDIATE
            transactionType: TRANSFER
            initiationType: DYNAMIC_QRCODE
            urgency: HIGH
          tags:
            - abc
            - def
        status: 100
        version: string
    PixPaymentLimitValidatorResponseBody:
      title: Response Body
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentLimitValidatorResponseBodyInternal'
          description: Data Object.
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          description: Payment's creation timestamp.
          type: string
        entity:
          description: The entity's name.
          type: string
        lastUpdateTimestamp:
          description: Entity's last update timestamp.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        status:
          description: Transaction's current status.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        pactualId: 699a5cbc-e07c-4edc-b152-e942c36d14ac
        clientRequestId: 2bb350ca-442c-42fa-b044-ba2534b601fd
        createTimestamp: '2023-01-23T20:17:01.3780252+00:00'
        lastUpdateTimestamp: '2023-01-23T20:17:01.3780252+00:00'
        entity: PixPayment
        status: PROCESSING
        body:
          transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
          debitParty:
            account: '2000'
            accountType: CACC
            bank: '30306294'
            branch: '2'
            name: Fulano de Tal
            taxId: '33333333333'
          endToEndId: E3030629420200808185300887639654
          amount: '10.01'
          creditParty:
            account: '1000'
            accountType: CACC
            bank: '30306294'
            branch: '1'
            name: Beltrano de Tal
            taxId: '22222222222'
          remittanceInformation: Information...
          paymentType: IMMEDIATE
          transactionType: TRANSFER
          initiationType: DYNAMIC_QRCODE
          urgency: HIGH
        tags:
          - abc
          - def
    MerchantCustomerListResponse:
      title: Root Type for MerchantCustomerListResponse
      description: ''
      type: object
      properties:
        body:
          description: The MerchantCustomer whit envelope.
          type: array
          items:
            $ref: '#/components/schemas/MerchantCustomerCreateResponse'
          properties:
            claimer:
              type: object
              properties:
                name:
                  type: string
                taxIdNumber:
                  type: string
                type:
                  type: string
            claimerAccount:
              type: object
              properties:
                accountNumber:
                  type: string
                accountType:
                  type: string
                branch:
                  type: string
                openingDate:
                  format: date-time
                  type: string
                participant:
                  type: string
            completionPeriodEnd:
              format: date-time
              type: string
            donorParticipant:
              type: string
            id:
              type: string
            key:
              type: string
            keyType:
              type: string
            lastModified:
              format: date-time
              type: string
            resolutionPeriodEnd:
              format: date-time
              type: string
            status:
              type: string
            type:
              type: string
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        status: 200
        version: 1.0.0
        body:
          - merchantCustomerId: string
            name: string
            taxId: string
            createTimestamp: string
            lastUpdateTimestamp: string
            status: string
            additionalData:
              - string
    MerchantCustomerCreateResponse:
      description: |-
        Gets list of claims where the participant is donor or claimant.

        List of claims is sorted in ascending order by the LastModified field.
      required:
        - merchantCustomerId
        - name
        - taxId
        - createTimestamp
        - lastUpdateTimestamp
        - status
      type: object
      properties:
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{36}'
          type: string
        name:
          description: The name of merchant customer
          type: string
        taxId:
          description: The merchant customer TaxId
          type: string
        additionalData:
          description: List of additional informations
          type: array
          items:
            type: string
        createTimestamp:
          format: date-time
          description: The creation date of merchant customer
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: The last update date of merchant customer
          type: string
        status:
          description: The status of merchant customer
          type: string
      example:
        merchantCustomerId: string
        name: string
        taxId: string
        createTimestamp: string
        lastUpdateTimestamp: string
        status: string
        additionalData:
          - string
    MerchantCustomerCreateRequest:
      description: |-
        Gets list of claims where the participant is donor or claimant.

        List of claims is sorted in ascending order by the LastModified field.
      required:
        - merchantCustomerId
        - name
        - taxId
      type: object
      properties:
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{36}'
          type: string
        name:
          description: The name of merchant customer
          type: string
        taxId:
          description: The merchant customer TaxId
          type: string
        additionalData:
          description: List of additional informations
          type: array
          items:
            type: string
      example:
        merchantCustomerId: string
        name: string
        taxId: string
        createTimestamp: string
        lastUpdateTimestamp: string
        status: string
        additionalData:
          - string
    MerchantCustomerUpdateRequest:
      description: |-
        Gets list of claims where the participant is donor or claimant.

        List of claims is sorted in ascending order by the LastModified field.
      required:
        - name
        - taxId
      type: object
      properties:
        name:
          description: The name of merchant customer
          type: string
        taxId:
          description: The merchant customer TaxId
          type: string
        additionalData:
          description: List of additional informations
          type: array
          items:
            type: string
      example:
        merchantCustomerId: string
        name: string
        taxId: string
        createTimestamp: string
        lastUpdateTimestamp: string
        status: string
        additionalData:
          - string
    PixPaymentMerchantLimitValidatorRequestPayload:
      title: Root Type for PixPaymentMerchantRequestPayload
      description: ''
      required:
        - amount
        - clientRequestId
        - creditParty
        - merchantCustomerId
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{36}'
          type: string
        amount:
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        creditParty:
          $ref: '#/components/schemas/PixPaymentMerchantRequestPayloadCreditParty'
          description: ''
          properties:
            account:
              type: string
            accountType:
              type: string
            bank:
              type: string
            branch:
              type: string
            name:
              type: string
            taxId:
              type: string
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").
          maxLength: 140
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
        merchantCustomerId: 5ca08cee-ad82-43d1-a29f-40e82a5ab153
        amount: '10.01'
        creditParty:
          account: '1000'
          accountType: CACC
          bank: '30306294'
          branch: '1'
          name: Beltrano de Tal
          taxId: '22222222222'
        remittanceInformation: Informação para ser apresentada
        tags:
          - abc
          - def
    PixPaymentLimitValidatorResponseBodyInternal:
      title: Root Type for PixPaymentResponseBodyInternal
      description: ''
      required:
        - debitParty
        - endToEndId
        - creditParty
        - amount
        - urgency
        - transactionType
        - paymentType
        - initiationType
        - merchantCustomerId
        - transactionIdentification
      type: object
      properties:
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{36}'
          type: string
        transactionIdentification:
          description: Always will be a DynamicBRCode and need to be informed here.
          pattern: '[a-zA-Z0-9]{26,35}'
          type: string
        debitParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyDebitParty'
          description: Data object containing debited's account information.
        endToEndId:
          description: End-to-end payment identifier associated with this request. The same used on DICT GET request.
          type: string
        amount:
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        creditParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyCreditParty'
          description: Data object containing credited's account information.
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").\r\n
          maxLength: 140
          type: string
        paymentType:
          description: The payment type.
          enum:
            - IMMEDIATE
          type: string
        transactionType:
          description: The transaction type.
          enum:
            - TRANSFER
          type: string
        urgency:
          description: The urgency of Pix.
          enum:
            - HIGH
          type: string
        initiationType:
          description: The initiation type.
          enum:
            - DYNAMIC_QRCODE
          type: string
      example:
        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
        debitParty:
          account: '2000'
          accountType: CACC
          bank: '30306294'
          branch: '2'
          name: Fulano de Tal
          taxId: '33333333333'
        endToEndId: E3030629420200808185300887639654
        amount: '10.01'
        creditParty:
          account: '1000'
          accountType: CACC
          bank: '30306294'
          branch: '1'
          name: Beltrano de Tal
          taxId: '22222222222'
        remittanceInformation: Information...
        paymentType: IMMEDIATE
        transactionType: TRANSFER
        initiationType: DYNAMIC_QRCODE
        urgency: HIGH
    PixCobCalendarLimitValidator:
      title: Root Type for PixCobCalendar
      description: The fields nested under the calendar identifier organize information regarding debt collection time control.
      required:
        - expiration
      type: object
      properties:
        expiration:
          format: int32
          description: The expiration in seconds.
          default: 1800
          maximum: 1800
          minimum: 1
          type: integer
      example:
        expiration: 1800
    NaturalPerson:
      title: Natural Person
      required:
        - cpf
        - name
      type: object
      properties:
        cpf:
          allOf:
            - $ref: '#/components/schemas/CPF'
            - description: CPF of the borrower or 'drawee'.
        name:
          title: Name
          description: Name of the borrower or 'drawee'.
          maxLength: 200
          type: string
    LegalPerson:
      title: Legal Person
      required:
        - cnpj
        - name
      type: object
      properties:
        cnpj:
          allOf:
            - $ref: '#/components/schemas/CNPJ'
            - description: CNPJ of the borrower or 'drawee'.
        name:
          title: Name
          description: Name of the borrower or 'drawee'.
          maxLength: 200
          type: string
    Debtor:
      title: Root Type for Debtor
      description: 'The brcode debtor information.   '
      type: object
      example:
        cpf: '11122233344'
        name: Fulano de tal
    PixCobLimitValidatorBodyContent:
      title: Root Type for PixCobLimitValidatorBodyResponse
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixCobLimirValidatorBodyInternal'
          description: The immediate collection object instance.
          properties:
            additionalInformation:
              type: array
              items:
                type: object
                properties:
                  key:
                    type: string
                  value:
                    type: string
            amount:
              type: object
              properties:
                original:
                  format: double
                  type: number
            calendar:
              type: object
              properties:
                expiration:
                  format: int32
                  type: integer
            debtor:
              type: object
              properties:
                cpf:
                  type: string
                name:
                  type: string
            key:
              type: string
            loc:
              type: object
              properties:
                body:
                  type: object
                  properties:
                    emv:
                      type: string
                    locationType:
                      type: string
                    locationUrl:
                      type: string
                    merchant:
                      type: object
                      properties:
                        merchantCategoryCode:
                          format: int32
                          type: integer
                        merchantCity:
                          type: string
                        merchantName:
                          type: string
                        postalCode:
                          type: string
                clientRequestId:
                  type: string
                createTimestamp:
                  type: string
                entity:
                  type: string
                lastUpdateTimestamp:
                  type: string
                pactualId:
                  type: string
                status:
                  type: string
                tags:
                  type: array
                  items: {}
            location:
              type: string
            payerQuestion:
              type: string
            revision:
              format: int32
              type: integer
        clientRequestId:
          description: The unique transaction identification (this value corresponding to txid) given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          format: date-time
          description: Creation timestamp of immediate collection.
          type: string
        entity:
          description: The name of entity.
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: Last update time stamp of immediate collection.
          type: string
        pactualId:
          description: The unique identifier of immediate collection.
          type: string
        status:
          description: The current status of immediate collection.
          type: string
        tags:
          description: The list of tags.
          type: array
          items:
            type: string
      example:
        body:
          additionalInformation:
            - key: chave
              value: valor
          amount:
            original: '1.22'
            changeType: 0
          calendar:
            expiration: 86400
          debtor:
            cpf: '11122233344'
            name: Teste
          key: teste@teste.com.br
          loc:
            body:
              emv: 00020101021226930014br.gov.bcb.pix2571api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc00603025204000053039865802BR5905Teste6005Teste61082000000062360532cabe4117ead3455dbfab4f7400cbc8b063042BEF
              locationType: COB
              locationUrl: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
              merchant:
                merchantCategoryCode: 0
                merchantCity: Teste
                merchantName: Teste
                postalCode: '12345678'
            clientRequestId: 30752427285f416d99c264b8b7dd64d4
            createTimestamp: '2021-01-01T00:00:00.5158219+00:00'
            entity: QrCodeLocation
            lastUpdateTimestamp: '2021-01-01T00:00:00.5158219+00:00'
            pactualId: 2be3aafe-9afa-4b0b-913f-073dc0060302
            status: CREATED
            tags: []
          location: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
          payerQuestion: Pergunta de teste
          revision: 0
        clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
        createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
        entity: PixCollectionImmediate
        lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
        pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
        status: ACTIVE
        tags:
          - tag_1
          - tag_2
    PixCobLimitValidatorBodyResponse:
      title: Root Type for PixCobLimitValidatorBodyResponse
      description: ''
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixCobLimitValidatorBodyContent'
          description: The immediate collection body instance.
          properties:
            body:
              type: object
              properties:
                additionalInformation:
                  type: array
                  items:
                    type: object
                    properties:
                      key:
                        type: string
                      value:
                        type: string
                amount:
                  type: object
                  properties:
                    original:
                      format: double
                      type: number
                calendar:
                  type: object
                  properties:
                    expiration:
                      format: int32
                      type: integer
                debtor:
                  type: object
                  properties:
                    cpf:
                      type: string
                    name:
                      type: string
                key:
                  type: string
                loc:
                  type: object
                  properties:
                    body:
                      type: object
                      properties:
                        emv:
                          type: string
                        locationType:
                          type: string
                        locationUrl:
                          type: string
                        merchant:
                          type: object
                          properties:
                            merchantCategoryCode:
                              format: int32
                              type: integer
                            merchantCity:
                              type: string
                            merchantName:
                              type: string
                            postalCode:
                              type: string
                    clientRequestId:
                      type: string
                    createTimestamp:
                      type: string
                    entity:
                      type: string
                    lastUpdateTimestamp:
                      type: string
                    pactualId:
                      type: string
                    status:
                      type: string
                    tags:
                      type: array
                      items: {}
                location:
                  type: string
                payerQuestion:
                  type: string
                revision:
                  format: int32
                  type: integer
            clientRequestId:
              type: string
            createTimestamp:
              type: string
            entity:
              type: string
            lastUpdateTimestamp:
              type: string
            pactualId:
              type: string
            status:
              type: string
            tags:
              type: array
              items:
                type: string
        status:
          format: int32
          description: The HTTP response status code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        body:
          body:
            merchantCustomerId: b0e39511-9a5e-4e74-b8e2-f00080c46472
            additionalInformation:
              - key: chave
                value: valor
            amount:
              changeType: 0
              original: '1.22'
            calendar:
              expiration: 86400
            debtor:
              cpf: '11122233344'
              name: Teste
            key: teste@teste.com.br
            loc:
              body:
                emv: 00020101021226930014br.gov.bcb.pix2571api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc00603025204000053039865802BR5905Teste6005Teste61082000000062360532cabe4117ead3455dbfab4f7400cbc8b063042BEF
                id: 798
                merchant:
                  cty: Teste
                  merchantCategoryCode: 0
                  name: Teste
                  postalCode: '12345678'
                type: COB
                url: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
              clientRequestId: 30752427285f416d99c264b8b7dd64d4
              createTimestamp: '2021-01-01T00:00:00.5158219+00:00'
              entity: QrCodeLocation
              lastUpdateTimestamp: '2021-01-01T00:00:00.5158219+00:00'
              pactualId: 2be3aafe-9afa-4b0b-913f-073dc0060302
              status: CREATED
              tags: []
            location: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
            payerQuestion: Pergunta de teste
            revision: 0
          clientRequestId: 90d0b9e1551447f695985409bf9b7fb5
          createTimestamp: '2021-01-01T01:00:00.9985582+00:00'
          entity: PixImmediateCollection
          lastUpdateTimestamp: '2021-01-01T01:00:00.9985582+00:00'
          pactualId: f85e83de-16d2-44cf-ace6-78bddfdb12e5
          status: ACTIVE
          tags:
            - tag_1
            - tag_2
        status: 200
        version: 1.0.0
    PixCollectionLocationLimitValidatorCreateRequest:
      title: Root Type for PixDynamicLocationBRCodeCreateRequest
      description: ''
      required:
        - amount
        - key
        - debtor
        - merchantCustomerId
      type: object
      properties:
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{1,36}'
          type: string
        additionalInformation:
          description: The list of additional informations.
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformation'
            maxLength: 50
        amount:
          $ref: '#/components/schemas/PixCobValorOriginalLimitValidatorEnUS'
          description: The value of collection.
          properties:
            original:
              format: double
              pattern: \d{1,10}\.\d{2}
              type: number
        calendar:
          $ref: '#/components/schemas/PixCobCalendarLimitValidator'
          description: The value of calendar.
          properties:
            expiration:
              format: int32
              type: integer
        debtor:
          oneOf:
            - $ref: '#/components/schemas/NaturalPerson'
            - $ref: '#/components/schemas/LegalPerson'
          description: The debtor object instance.
        key:
          description: The DICT key.
          maxLength: 77
          type: string
        payerQuestion:
          description: The question of payer.
          maxLength: 140
          type: string
        isPayerSameTitularity:
          description: The value if this qrcode must be paid by de debtor.
          type: boolean
      example:
        merchantCustomerId: b0e39511-9a5e-4e74-b8e2-f00080c46472
        additionalInformation:
          - key: chave
            value: valor
        amount:
          changeType: 0
          original: '15.23'
        calendar:
          expiration: 1800
        debtor:
          cpf: '11122233344'
          name: Teste
        key: teste@teste.com
        payerQuestion: Pergunta de teste?
    PixCobLimirValidatorBodyInternal:
      title: Root Type for PixCobLimitValidatorBodyContent
      description: ''
      required:
        - amount
        - key
        - revision
        - calendar
        - debtor
        - merchantCustomerId
      type: object
      properties:
        merchantCustomerId:
          description: he unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{1,36}'
          type: string
        revision:
          format: int32
          description: The revision of location.
          type: integer
        calendar:
          $ref: '#/components/schemas/PixCobCalendar'
          description: The value of calendar.
          properties:
            expiration:
              format: int32
              type: integer
        location:
          description: The location without "HTTPS://" prefix.
          type: string
        debtor:
          oneOf:
            - $ref: '#/components/schemas/NaturalPerson'
            - $ref: '#/components/schemas/LegalPerson'
          description: The debtor object instance.
        loc:
          $ref: '#/components/schemas/PixLocEntity'
          description: The loc object instance.
          properties:
            pactualId:
              type: string
            clientRequestId:
              type: string
            createTimestamp:
              type: string
            lastUpdateTimestamp:
              type: string
            entity:
              type: string
            status:
              type: string
            body:
              type: object
              properties:
                merchant:
                  type: object
                  properties:
                    merchantName:
                      type: string
                    merchantCity:
                      type: string
                    postalCode:
                      type: string
                    merchantCategoryCode:
                      format: int32
                      type: integer
                locationUrl:
                  type: string
                emv:
                  type: string
                locationType:
                  type: string
            tags:
              type: array
              items: {}
        amount:
          $ref: '#/components/schemas/PixCobValorOriginalEnUS'
          description: The value of collection.
          properties:
            original:
              format: double
              pattern: \d{1,10}\.\d{2}
              type: number
        key:
          description: The DICT key.
          maxLength: 77
          type: string
        payerQuestion:
          description: The question of payer.
          maxLength: 140
          type: string
        additionalInformation:
          description: The list of additional informations.
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformation'
            maxLength: 50
      example:
        revision: 0
        calendar:
          expiration: 86400
        location: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
        debtor:
          cpf: '11122233344'
          name: Teste
        loc:
          pactualId: 2be3aafe-9afa-4b0b-913f-073dc0060302
          clientRequestId: 30752427285f416d99c264b8b7dd64d4
          createTimestamp: '2021-01-01T00:00:00.5158219+00:00'
          lastUpdateTimestamp: '2021-01-01T00:00:00.5158219+00:00'
          entity: QrCodeLocation
          status: CREATED
          body:
            merchant:
              merchantName: Teste
              merchantCity: Teste
              postalCode: '12345678'
              merchantCategoryCode: 0
            locationUrl: api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc0060302
            emv: 00020101021226930014br.gov.bcb.pix2571api.dev.developer.btgpactual.com/qr/v2/2be3aafe9afa4b0b913f073dc00603025204000053039865802BR5905Teste6005Teste61082000000062360532cabe4117ead3455dbfab4f7400cbc8b063042BEF
            locationType: COB
          tags: []
        amount:
          original: '1.22'
          changeType: 0
        key: teste@teste.com.br
        payerQuestion: Pergunta de teste
        additionalInformation:
          - key: chave
            value: valor
    PixCollectionLocationCreateRequest:
      title: Root Type for PixDynamicLocationBRCodeCreateRequest
      description: ''
      required:
        - amount
        - key
        - debtor
      type: object
      properties:
        additionalInformation:
          description: The list of additional informations.
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformation'
            maxLength: 50
        amount:
          $ref: '#/components/schemas/PixCobValorOriginalEnUS'
          description: |-
            The value of collection.

            It is not allowed to fill the objects "change" and "withdrawal" simultaneously.
          properties:
            original:
              format: double
              pattern: \d{1,10}\.\d{2}
              type: number
        calendar:
          $ref: '#/components/schemas/PixCobCalendar'
          description: The value of calendar.
          properties:
            expiration:
              format: int32
              type: integer
        debtor:
          oneOf:
            - $ref: '#/components/schemas/NaturalPerson'
            - $ref: '#/components/schemas/LegalPerson'
          description: The debtor object instance.
        key:
          description: The DICT key.
          maxLength: 77
          type: string
        payerQuestion:
          description: The question of payer.
          maxLength: 140
          type: string
      example:
        additionalInformation:
          - key: chave
            value: valor
        amount:
          changeType: 0
          original: '15.23'
          change:
            vlcpAmount: '5.23'
            vldnAmount: '10.00'
            changeType: 0
        calendar:
          expiration: 86400
        debtor:
          cpf: '11122233344'
          name: Teste
        key: teste@teste.com
        payerQuestion: Pergunta de teste?
    PixPaymentMerchantLimitValidatorInitiateRequest:
      title: Root Type for PixPaymentMerchantRequestPayload
      description: ''
      required:
        - amount
        - clientRequestId
        - merchantCustomerId
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{36}'
          type: string
        amount:
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").
          maxLength: 140
          type: string
        tags:
          description: "<p>A list with tags. </p>\r\n<p>If the INTERNAL_CUSTOMER_CODE tag is added, the value of this parameter will be used in the score report identifier. For example: INTERNAL_CUSTOMER_CODE:3511456.</p> "
          type: array
          items:
            type: string
      example:
        clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
        merchantCustomerId: 5ca08cee-ad82-43d1-a29f-40e82a5ab153
        amount: '10.01'
        remittanceInformation: Informação para ser apresentada
        tags:
          - abc
          - def
    TEst:
      title: Root Type for TEst
      description: ''
      type: object
      properties:
        test:
          type: string
      example:
        test: a
    PixCobLocationSolicitadaV2X:
      title: Requested Collection
      description: Data sent for debt collection creation or change via API Pix
      required:
        - valor
        - chave
      type: object
      allOf:
        - type: object
          properties:
            calendario:
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding debt collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobExpiracao'
        - $ref: '#/components/schemas/PixCobBase'
      example:
        calendario:
          expiracao: '3600'
        chave: teste@teste.com
        devedor:
          cpf: '11122233344'
          nome: Teste
        infoAdicionais:
          - nome: chave
            valor: valor
        solicitacaoPagador: Pergunta de teste?
        valor:
          modalidadeAlteracao: 0
          original: '1.23'
    PixCobLocationGeradaV2X:
      title: Generated Debt Collection
      description: Data created or changed from debt collection via API Pix
      required:
        - txid
        - calendario
        - revisao
        - status
        - valor
        - chave
      type: object
      allOf:
        - required:
            - loc
            - location
            - pixCopiaECola
          type: object
          properties:
            calendario:
              title: Calendar
              description: The fields nested under the calendar identifier organize information regarding debt collection time control.
              allOf:
                - $ref: '#/components/schemas/PixCobCriacao'
                - $ref: '#/components/schemas/PixCobExpiracao'
            loc:
              title: Location
              description: The field nested under the loc to associate this collection to a location.
              allOf:
                - $ref: '#/components/schemas/PixBacenCobLocationResponse'
            location:
              $ref: '#/components/schemas/Location'
            revisao:
              $ref: '#/components/schemas/Revisao'
            status:
              $ref: '#/components/schemas/PixCobStatus'
            txid:
              $ref: '#/components/schemas/TxId'
            pixCopiaECola:
              $ref: '#/components/schemas/PixCopiaECola'
        - $ref: '#/components/schemas/PixCobBase'
    PixBacenCobLocationDueDateCreateRequest:
      title: Root Type for PixBacenCobDueDateCreateRequest
      description: ''
      required:
        - calendario
        - chave
        - devedor
        - valor
      type: object
      allOf:
        - $ref: '#/components/schemas/PixBacenCobDueDateCalendarioRequest'
        - $ref: '#/components/schemas/PixBacenCobDueDateDevedor'
        - type: object
          properties:
            valor:
              $ref: '#/components/schemas/PixBacenCobDueDateValor'
        - $ref: '#/components/schemas/PixBacenCobDueDateBase'
    PixBacenCobLocationDueDateResponse:
      title: Root Type for PixCobDueDateReponse
      description: ''
      required:
        - calendario
        - devedor
        - recebedor
        - txid
        - chave
        - revisao
        - status
        - valor
      type: object
      allOf:
        - $ref: '#/components/schemas/PixBacenCobDueDateCalendarioResponse'
        - type: object
          properties:
            txid:
              $ref: '#/components/schemas/TxId'
        - type: object
          properties:
            revisao:
              format: int32
              description: Collection review. Always starts at zero. Always varies in increments of 1.
              type: integer
        - $ref: '#/components/schemas/PixBacenCobDueDateDevedor'
        - $ref: '#/components/schemas/PixBacenCobDueDateRecebedor'
        - required:
            - valor
            - loc
            - pixCopiaECola
          type: object
          properties:
            loc:
              $ref: '#/components/schemas/PixBacenCobLocationResponse'
            status:
              $ref: '#/components/schemas/PixCobStatus'
            valor:
              $ref: '#/components/schemas/PixBacenCobDueDateValor'
            pixCopiaECola:
              $ref: '#/components/schemas/PixCopiaECola'
        - $ref: '#/components/schemas/PixBacenCobDueDateBase'
    BacenWebhookRequest:
      title: Root Type for BacenWebhookRequest
      description: the body to send to set up webhook.
      required:
        - webhookUrl
      type: object
      properties:
        webhookUrl:
          description: The URL which the webhook notification will be delivered
          type: string
      example:
        webhookUrl: string
    BacenWebhookResponse:
      title: Root Type for BacenWebhookResponse
      description: The response with webhook informations
      required:
        - chave
        - criacao
        - webhookUrl
      type: object
      properties:
        webhookUrl:
          description: The URL which the webhook notification will be delivered
          type: string
        chave:
          description: The DICT key
          type: string
        criacao:
          description: Timestamp of webhook configuration
          type: string
      example:
        webhookUrl: string
        chave: string
        criacao: string
    BacenWebhookListResponse:
      title: Root Type for BacenWebhookListResponse
      description: List response
      required:
        - webhooks
        - parametros
      type: object
      properties:
        parametros:
          $ref: '#/components/schemas/BacenWebhookParametros'
          description: The parameters passed in the request.
          properties:
            inicio:
              format: date-time
              type: string
            fim:
              format: date-time
              type: string
            paginacao:
              type: object
              properties:
                paginaAtual:
                  format: int32
                  type: integer
                itensPorPagina:
                  format: int32
                  type: integer
                quantidadeDePaginas:
                  format: int32
                  type: integer
                quantidadeTotalDeItens:
                  format: int32
                  type: integer
        webhooks:
          description: Result of the configured webhooks.
          type: array
          items:
            $ref: '#/components/schemas/BacenWebhookResponse'
      example:
        parametros:
          inicio: '2020-04-01T00:00:00Z'
          fim: '2020-04-01T23:59:59Z'
          paginacao:
            paginaAtual: 0
            itensPorPagina: 100
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 1
        webhooks:
          - webhookUrl: string
            chave: string
            criacao: string
    BacenWebhookParametros:
      title: Root Type for BacenWebhookParametros
      description: parametros
      type: object
      properties:
        paginacao:
          $ref: '#/components/schemas/BacenWebhookPaginacao'
          description: The pagination field
          properties:
            paginaAtual:
              format: int32
              type: integer
            itensPorPagina:
              format: int32
              type: integer
        inicio:
          format: date-time
          description: Start date provided in the query string.
          type: string
        fim:
          format: date-time
          description: End date provided in the query string.
          type: string
      example:
        inicio: '2020-04-01T00:00:00Z'
        fim: '2020-04-01T23:59:59Z'
        paginacao:
          paginaAtual: 1
          itensPorPagina: 100
    BacenWebhookPaginacao:
      title: Root Type for BacenWebhookPaginacao
      description: pagination
      type: object
      properties:
        paginaAtual:
          description: The current page number.
          type: integer
        itensPorPagina:
          description: The number of items per page
          type: integer
      example:
        paginaAtual: 1
        itensPorPagina: 100
    PixBacenCobDueDateValorPatch:
      title: Collection amount due.
      description: Monetary values. If the 'amountPerc' of any object of this property is set to "0.00" and it had a previous value, the object will be deleted.
      required:
        - original
      type: object
      properties:
        abatimento:
          title: Abatement applied.
          description: Abatement applied to collection.
          required:
            - modalidade
            - valorPerc
          properties:
            modalidade:
              format: int32
              title: Abatement modality.
              description: |
                ##### Abatement modality, according to the domains table.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>Valor Fixo</td><td>1</td></tr><tr><td>Percentual</td><td>2</td></tr></table>
              maximum: 2
              minimum: 1
              type: integer
            valorPerc:
              title: Abatimentos
              description: Abatement or other deductions applied to the document, in absolute or percentage of the original value of the document, according to "valor.abatimento.modalidade".
              pattern: \d{1,10}\.\d{2}
              type: string
        desconto:
          oneOf:
            - type: object
              properties:
                descontoDataFixa:
                  title: Discount List.
                  description: Absolute discounts applied to collection.
                  maxItems: 3
                  minItems: 1
                  uniqueItems: true
                  type: array
                  items:
                    required:
                      - data
                      - valorPerc
                    allOf:
                      - properties:
                          data:
                            format: date
                            title: Deadline for the absolute discount of the charge.
                            description: Discounts for prepayment, with fixed date. Matrix with up to three elements, each element consisting of a pair "date and valuePerc", to establish percentage or absolute discounts, up to that payment date. It is a date, in the format `yyyy-mm-dd`, according to ISO 8601. The discount date must be less than the due date of the collection.
                            type: string
                            example: '2020-04-01'
                      - properties:
                          valorPerc:
                            title: Absolute discount amount.
                            description: Discount in absolute value or percentage per day, working or accrued, as per valor.desconto.modalidade
                            pattern: \d{1,10}\.\d{2}
                            type: string
            - required:
                - valorPerc
              type: object
              properties:
                valorPerc:
                  title: Rebates
                  description: Rebates or other deductions applied to the document, in absolute or percentage of the original value of the document.
                  pattern: \d{1,10}\.\d{2}
                  type: string
          title: Discounts applied.
          description: Discounts applied to the charge.
          required:
            - modalidade
          allOf:
            - type: object
              properties:
                modalidade:
                  format: int32
                  title: Discounts modality.
                  description: |
                    ##### Discount mode, according to the domains table.
                    <table><tr><th>Description</th><th>Domain</th></tr> <tr><td>Valor Fixo até a[s] data[s] informada[s]</td><td>1</td></tr><tr><td>Percentual até a data informada</td><td>2</td></tr><tr><td>Valor por antecipação dia corrido</td><td>3</td></tr><tr><td>Valor por antecipação dia útil</td><td>4</td></tr><tr><td>Percentual por antecipação dia corrido</td><td>5</td></tr><tr><td>Percentual por antecipação dia útil</td><td>6</td></tr></table>
                  maximum: 6
                  minimum: 1
                  type: integer
        juros:
          title: Interest applied.
          description: Interest applied to collection.
          required:
            - modalidade
            - valorPerc
          type: object
          properties:
            modalidade:
              format: int32
              title: Interest modality.
              description: |
                ##### Interest rate, according to the domains table.
                <table> <tr><th>Description</th><th>Domain</th></tr> <tr><td>Valor (dias corridos)</td><td>1</td></tr><tr><td>Percentual ao dia (dias corridos)</td><td>2</td></tr><tr><td>Percentual ao mês (dias corridos)</td><td>3</td></tr><tr><td>Percentual ao ano (dias corridos)</td><td>4</td></tr><tr><td>Valor (dias úteis)</td><td>5</td></tr><tr><td>Percentual ao dia (dias úteis)</td><td>6</td></tr><tr><td>Percentual ao mês (dias úteis)</td><td>7</td></tr><tr><td>Percentual ao ano (dias úteis)</td><td>8</td></tr> </table>
              maximum: 8
              minimum: 1
              type: integer
            valorPerc:
              title: Valor
              description: Interest of the document in absolute or percentage value, according to "valor.juros.modalidade".
              pattern: \d{1,10}\.\d{2}
              type: string
        multa:
          title: Fine applied.
          description: Fine applied to the collection.
          required:
            - modalidade
            - valorPerc
          type: object
          properties:
            modalidade:
              format: int32
              title: Fine modality.
              description: |
                ##### Mode of fine, according to the table of domains.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>Valor Fixo</td><td>1</td></tr><tr><td>Percentual</td><td>2</td></tr></table>
              maximum: 2
              minimum: 1
              type: integer
            valorPerc:
              title: Absolute fine amount.
              description: Fine of the document in absolute or percentage value, according to "valor.multa.modalidade".
              pattern: \d{1,10}\.\d{2}
              type: string
        original:
          title: Valor
          description: Original collection amount.
          pattern: \d{1,10}\.\d{2}
          type: string
    PixBacenCobDueDatePatchRequest:
      title: Root Type for PixBacenCobDueDatePatchRequest
      description: ''
      type: object
      allOf:
        - $ref: '#/components/schemas/PixBacenCobDueDateCalendarioRequest'
        - $ref: '#/components/schemas/PixBacenCobDueDateDevedor'
        - type: object
          properties:
            loc:
              $ref: '#/components/schemas/PixBacenCobLocation'
            status:
              description: Collection Status
              enum:
                - REMOVIDA_PELO_USUARIO_RECEBEDOR
              type: string
            valor:
              $ref: '#/components/schemas/PixBacenCobDueDateValorPatch'
        - $ref: '#/components/schemas/PixBacenCobDueDateBase'
    PixCollectionLocationLimitValidatorUpdateRequest:
      title: Root Type for PixDynamicLocationBRCodeCreateRequest
      description: ''
      type: object
      properties:
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{1,36}'
          type: string
        additionalInformation:
          description: The list of additional informations.
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformation'
            maxLength: 50
        amount:
          $ref: '#/components/schemas/PixCobValorOriginalLimitValidatorEnUS'
          description: The value of collection.
          properties:
            original:
              format: double
              pattern: \d{1,10}\.\d{2}
              type: number
        calendar:
          $ref: '#/components/schemas/PixCobCalendarLimitValidator'
          description: The value of calendar.
          properties:
            expiration:
              format: int32
              type: integer
        debtor:
          oneOf:
            - $ref: '#/components/schemas/NaturalPerson'
            - $ref: '#/components/schemas/LegalPerson'
          description: The debtor object instance.
        key:
          description: The DICT key.
          maxLength: 77
          type: string
        payerQuestion:
          description: The question of payer.
          maxLength: 140
          type: string
        isPayerSameTitularity:
          description: The value if this qrcode must be paid by de debtor.
          type: boolean
      example:
        merchantCustomerId: b0e39511-9a5e-4e74-b8e2-f00080c46472
        additionalInformation:
          - key: chave
            value: valor
        amount:
          changeType: 0
          original: '15.23'
        calendar:
          expiration: 1800
        debtor:
          cpf: '11122233344'
          name: Teste
        key: teste@teste.com
        payerQuestion: Pergunta de teste?
        isPayerSameTitularity: true
    PixCobValorOriginalLimitValidatorEnUS:
      title: Root Type for CollectionAmount
      description: 'All fields that indicate monetary values follow the format of ID 54 of the EMV/BR Code specification for QR Codes. The decimal separator is the dot character. The thousand separator is not applicable. Examples of standard values: "0.00", "1.00", "123.99", "123456789.23".'
      required:
        - original
      type: object
      properties:
        original:
          description: Original debt amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        changeType:
          description: This field determines whether the final amount of the document can be changed by the payer. In the absence of this field, it is assumed that the amount of the dunning document cannot be changed, that is, the value 0 is assumed. If the field is present and has a value of 1, then it is determined that the final dunning amount can be changed by the payer.
          maximum: 1
          minimum: 0
          type: integer
      example:
        original: '1.0'
        changeType: 1
    CobrancaValor:
      title: Root Type for CollectionAmount
      description: |-
        All fields that indicate monetary values follow the format of ID 54 of the EMV/BR Code specification for QR Codes. The decimal separator is the dot character. The thousand separator is not applicable. Examples of standard values: "0.00", "1.00", "123.99", "123456789.23".

        It is not allowed to fill the objects "change" and "withdrawal" simultaneously.
      required:
        - original
      type: object
      properties:
        retirada:
          oneOf:
            - $ref: '#/components/schemas/CobrancaTroco'
            - $ref: '#/components/schemas/CobrancaSaque'
          description: Information for setting up a charge as withdrawal or change.
        original:
          description: Original debt amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        modalidadeAlteracao:
          format: int32
          description: This field determines whether the final amount of the document can be changed by the payer. In the absence of this field, it is assumed that the amount of the dunning document cannot be changed, that is, the value 0 is assumed. If the field is present and has a value of 1, then it is determined that the final dunning amount can be changed by the payer.
          maximum: 1
          minimum: 0
          type: integer
      example:
        original: '17.23'
        retirada:
          troco:
            valor: '10.00'
            modalidadeAlteracao: 0
            modalidadeAgente: AGPSS
            prestadorDoServicoDeSaque: '12345678'
    PixPaymentWebhookBody:
      title: Root Type for PixPaymentWebhookBody
      description: ''
      required:
        - amount
        - creditParty
        - debitParty
        - endToEndId
        - movementId
        - initiationType
        - movementIds
        - paymentType
        - transactionType
        - urgency
        - vldnAmount
      type: object
      properties:
        amount:
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").
          maxLength: 140
          type: string
        creditParty:
          $ref: '#/components/schemas/PixPaymentWebhookParty'
          description: Informations about the credited customer.
          properties:
            account:
              type: string
            accountType:
              type: string
            bank:
              type: string
            branch:
              type: string
            key:
              type: string
            name:
              type: string
            personType:
              type: string
            taxId:
              type: string
        debitParty:
          $ref: '#/components/schemas/PixPaymentWebhookParty'
          description: Informations about the debited customer.
          properties:
            account:
              type: string
            accountType:
              type: string
            bank:
              type: string
            branch:
              type: string
            name:
              type: string
            personType:
              type: string
            taxId:
              type: string
        transactionIdentification:
          description: If present on StaticBRCode must be preserved and informed here. It's always present on DynamicBRCode and need to be informed here as well.
          type: string
        endToEndId:
          description: End-to-end payment identifier associated with this request. The same used on DICT GET request.
          type: string
        initiationType:
          description: The initiation type.
          enum:
            - MANUAL
            - DICT
            - STATIC_QRCODE
            - DYNAMIC_QRCODE
            - PAYMENT_INITIATOR
          type: string
        movementId:
          description: The financial transaction identificator. Use this field for reconciliation.
          type: string
        movementIds:
          description: A list of financial transactions identificator. Use this field for reconciliation.
          maxItems: 2
          minItems: 1
          type: array
          items:
            type: string
        paymentType:
          description: The payment type.
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        transactionType:
          description: The transaction type.
          enum:
            - TRANSFER
            - CHANGE
            - WITHDRAWAL
          type: string
        urgency:
          description: The urgency of Pix.
          enum:
            - HIGH
            - NORMAL
          type: string
        vlcpAmount:
          description: Original debt amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        vldnAmount:
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: string
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
        withdrawalAgentMode:
          description: Field used to discriminate the withdrawal agent mode and to identify the withdrawal service provider.
          enum:
            - AGTEC
            - AGTOT
            - AGPSS
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          pattern: '[0-9]{8}'
          type: string
      example:
        amount: 100.12
        remittanceInformation: informacao adicional teste
        creditParty:
          account: '12345678'
          accountType: CACC
          bank: '87654321'
          branch: '1'
          key: teste@teste.com.br
          name: Cliente Teste
          personType: NATURAL_PERSON
          taxId: '11122233344'
        debitParty:
          account: '22336611'
          accountType: CACC
          bank: '54412260'
          branch: '1'
          name: Usuário Teste
          personType: NATURAL_PERSON
          taxId: '44433322211'
        transactionIdentification: 05f1040098114b9cb7f8ad73922c2885
        endToEndId: E5441226020210811134701321844175
        initiationType: MANUAL
        movementId: '12345678'
        movementIds:
          - '12345678'
          - '87654321'
        paymentType: IMMEDIATE
        transactionType: TRANSFER
        urgency: HIGH
        vlcpAmount: 0
        vldnAmount: 0
    PixPaymentWebhook:
      title: Root Type for PixPaymentWebhook
      description: ''
      required:
        - clientRequestId
        - createTimestamp
        - entity
        - pactualId
        - status
      type: object
      properties:
        pactualId:
          description: Unique resource identificator (Uuid) generated by our API.
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        entity:
          description: The entity's name.
          enum:
            - PixPayment
            - PixPaymentInbound
          type: string
        createTimestamp:
          description: Payment's creation timestamp.
          type: string
        status:
          description: The payment status.
          enum:
            - INITIATED
            - PROCESSING
            - CONFIRMED
            - ERROR
          type: string
        errorCode:
          description: The error code.
          type: string
        errorDescription:
          description: The error description.
          type: string
        body:
          $ref: '#/components/schemas/PixPaymentWebhookBody'
          properties:
            amount:
              format: double
              type: number
            remittanceInformation:
              type: string
            creditParty:
              type: object
              properties:
                account:
                  type: string
                accountType:
                  type: string
                bank:
                  type: string
                branch:
                  type: string
                key:
                  type: string
                name:
                  type: string
                personType:
                  type: string
                taxId:
                  type: string
            debitParty:
              type: object
              properties:
                account:
                  type: string
                accountType:
                  type: string
                bank:
                  type: string
                branch:
                  type: string
                name:
                  type: string
                personType:
                  type: string
                taxId:
                  type: string
            transactionIdentification:
              type: string
            endToEndId:
              type: string
            initiationType:
              type: string
            movementId:
              type: string
            movementIds:
              type: array
              items:
                type: string
            paymentType:
              type: string
            transactionType:
              type: string
            urgency:
              type: string
            vlcpAmount:
              format: int32
              type: integer
            vldnAmount:
              format: int32
              type: integer
        tags:
          description: A list of string that can be used to store internal informations.
          type: array
          items:
            type: string
      example:
        pactualId: 9dcfa089-b132-4591-a936-467825f9cd36
        clientRequestId: 21526580-149b-4ce1-b976-c00d18a41028
        entity: PixPayment
        createTimestamp: '2021-08-11T13:47:27.5439206+00:00'
        status: ERROR
        errorCode: PBE343
        errorDescription: Settlement of the transaction has failed
        body:
          amount: 100.12
          remittanceInformation: informacao adicional teste
          creditParty:
            account: '12345678'
            accountType: CACC
            bank: '87654321'
            branch: '1'
            key: teste@teste.com.br
            name: Cliente Teste
            personType: NATURAL_PERSON
            taxId: '11122233344'
          debitParty:
            account: '22336611'
            accountType: CACC
            bank: '54412260'
            branch: '1'
            name: Usuário Teste
            personType: NATURAL_PERSON
            taxId: '44433322211'
          transactionIdentification: 05f1040098114b9cb7f8ad73922c2885
          endToEndId: E5441226020210811134701321844175
          initiationType: MANUAL
          movementId: '12345678'
          movementIds:
            - '12345678'
            - '87654321'
          paymentType: IMMEDIATE
          transactionType: TRANSFER
          urgency: HIGH
          vlcpAmount: 0
          vldnAmount: 0
        tags:
          - 123teste
          - Teste123
    PixReversalWebhook:
      title: Root Type for PixReversalWebhook
      description: ''
      required:
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        pactualId:
          description: Unique resource identificator (Uuid) generated by our API.
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        entity:
          description: The entity's name.
          enum:
            - PixReversal
            - PixReversalInbound
          type: string
        createTimestamp:
          description: Reversal's creation timestamp.
          type: string
        lastUpdateTimestamp:
          description: Reversal's last update timestamp.
          type: string
        status:
          description: The reversal status.
          enum:
            - INITIATED
            - PROCESSING
            - CONFIRMED
            - ERROR
          type: string
        errorCode:
          description: The error code.
          type: string
        errorDescription:
          description: The error description.
          type: string
        body:
          $ref: '#/components/schemas/PixReversalWebhookBody'
          properties:
            additionalInformation:
              type: string
            amount:
              format: double
              type: number
            movementId:
              type: string
            movementIds:
              type: array
              items:
                type: string
            originalEndToEndId:
              type: string
            originalPactualId:
              type: string
            reason:
              type: string
            returnIdentification:
              type: string
            nature:
              type: string
        tags:
          description: A list of string that can be used to store internal informations.
          type: array
          items:
            type: string
      example:
        pactualId: 74ab3e2c-f69c-4a59-a507-8302186ee743
        clientRequestId: 40a9bab9eda647f1b21c17bba36e2add
        entity: PixReversal
        createTimestamp: '2021-06-09T13:40:45.1580102+00:00'
        lastUpdateTimestamp: '2021-06-09T13:40:45.1580102+00:00'
        status: ERROR
        errorCode: PBE343
        errorDescription: Settlement of the transaction has failed
        body:
          additionalInformation: Devolvendo valor pago
          amount: 1.23
          movementId: '12345'
          movementIds:
            - '12345'
          originalEndToEndId: E30306294202106092202UYRCDKUVCIF
          originalPactualId: b9be3bb7-8a12-44b9-9f5e-224d4615656f
          reason: BE08 || FR01 || MD06 || SL02
          returnIdentification: D000000002021060920097z282ZXleEs
          nature: ORIGINAL || WITHDRAWAL || 0
        tags:
          - Teste123
          - 123Teste
    PixReversalWebhookBody:
      title: Root Type for PixReversalBodyWebhook
      description: ''
      required:
        - amount
        - movementId
        - movementIds
        - nature
        - originalEndToEndId
        - originalPactualId
        - reason
        - returnIdentification
      type: object
      properties:
        additionalInformation:
          description: Additional description of the reason for the return.
          maxLength: 105
          type: string
        amount:
          description: Decimal value to be returned.
          pattern: \d{1,10}\.\d{2}
          type: string
        movementId:
          description: The financial transaction identificator. Use this field for reconciliation.
          type: string
        movementIds:
          description: A list of financial transactions identificator. Use this field for reconciliation.
          maxItems: 2
          minItems: 1
          type: array
          items:
            type: string
        originalEndToEndId:
          description: The EndToEndId of the original payment.
          type: string
        originalPactualId:
          description: The PactualId of the original payment.
          type: string
        reason:
          description: The reason for the reversal.
          enum:
            - BE08
            - FR01
            - MD06
            - SL02
          type: string
        returnIdentification:
          description: The unique identifier for the reversal payment.
          type: string
        nature:
          description: The nature from PIX return.
          enum:
            - ORIGINAL
            - WITHDRAWAL
          type: string
        reversalDescription:
          description: Text to be presented to the payer containing information about the return. This text will be filled in, in pacs.004 by the creditor PSP, in the RemittanceInformation field.
          maxLength: 140
          type: string
      example:
        additionalInformation: Devolvendo valor pago
        amount: 1.23
        movementId: '12345'
        movementIds:
          - '12345'
        originalEndToEndId: E30306294202106092202UYRCDKUVCIF
        originalPactualId: b9be3bb7-8a12-44b9-9f5e-224d4615656f
        reason: BE08
        returnIdentification: D000000002021060920097z282ZXleEs
        nature: ORIGINAL
    PixPaymentWebhookParty:
      title: Root Type for PixPaymentWebhookParty
      required:
        - account
        - accountType
        - bank
        - personType
        - taxId
      type: object
      properties:
        account:
          description: The account number.
          type: string
        accountType:
          description: The account type.
          enum:
            - CACC
            - SLRY
            - SVGS
            - TRAN
          type: string
        bank:
          description: The bank ISPB.
          pattern: \d{8}
          type: string
        branch:
          description: The branch number.
          type: string
        key:
          description: The DICT Key.
          type: string
        name:
          description: The person's name.
          type: string
        personType:
          description: The person's type.
          enum:
            - NATURAL_PERSON
            - LEGAL_PERSON
          type: string
        taxId:
          description: The person's Tax Id (CPF or CNPJ).
          type: string
      example:
        account: '12345678'
        accountType: CACC
        bank: '87654321'
        branch: '1'
        key: teste@teste.com.br
        name: Cliente Teste
        personType: NATURAL_PERSON
        taxId: '11122233344'
    tokenBucketHeaders:
      description: "## Request limitation\r\n\r\nTo preserves the stability of the DICT service, specifically for the entry query operation when initiating a payment by key or emv, these are subject to request limitation policies. There is also request limitation in order to prevent data scanning attacks.\r\nA limitation policy has a scope associated with it, which can be the end user or the participant.\r\nEach policy has a token replacement rate, a bucket size and a counting rule.\r\nFor the entry query, the bucket use will be as detailed below:\r\n\r\n### Policy counting rules\r\n\r\n- `ENTRIES_READ_USER_ANTISCAN`\r\n  - Only applicable to keys of type EMAIL and PHONE\r\n  - status 200: subtract 1 token from bucket\r\n  - status 404: subtract 20 tokens from bucket\r\n  - payment order sent\r\n    - add 2 tokens back to bucket for legal person category (PJ)\r\n\r\n- `ENTRIES_READ_USER_ANTISCAN_V2`\r\n  - Only applicable to keys of type CPF, CNPJ and EVP\r\n  - status 200: subtract 1 token from bucket\r\n  - status 404: subtract 20 tokens from bucket\r\n  - payment order sent\r\n    - add 2 tokens back to bucket for legal person category (PJ)\r\n\r\n  (*) The bucket size of `ENTRIES_READ_USER_ANTISCAN` and `ENTRIES_READ_USER_ANTISCAN_V2` policies is categorized according to type of person that is making request.\r\n   For this endpoint, PJ category will always be applied according to definitions below:\r\n  | Category | Replenishment rate | Bucket size |\r\n  |--------------|--------------------|------------------|\r\n  | PJ | 20/min | 1,000 |\r\n  \r\n"
      type: object
      properties:
        bucket-participant:
          description: The participant ISPB.
          type: string
          example: '30306294'
        bucket-userPerson:
          description: The person bucket identification (taxId).
          type: string
          example: '90686561000189'
        bucket-size:
          description: The size of bucket.
          type: string
          example: '1000'
        bucket-used:
          description: Number of tokens consumed.
          type: string
          example: '167'
        bucket-policy:
          description: The request limitation policies.
          type: string
          example: ENTRIES_READ_USER_ANTISCAN
    tokenBucketHeadersOn429:
      description: "## Request limitation\r\n\r\nTo preserves the stability of the DICT service, specifically for the entry query operation when initiating a payment by key or emv, these are subject to request limitation policies. There is also request limitation in order to prevent data scanning attacks.\r\nA limitation policy has a scope associated with it, which can be the end user or the participant.\r\nEach policy has a token replacement rate, a bucket size and a counting rule.\r\nFor the entry query, the bucket use will be as detailed below:\r\n\r\n### Policy counting rules\r\n\r\n- `ENTRIES_READ_USER_ANTISCAN`\r\n  - Only applicable to keys of type EMAIL and PHONE\r\n  - status 200: subtract 1 token from bucket\r\n  - status 404: subtract 20 tokens from bucket\r\n  - payment order sent\r\n    - add 2 tokens back to bucket for legal person category (PJ)\r\n\r\n- `ENTRIES_READ_USER_ANTISCAN_V2`\r\n  - Only applicable to keys of type CPF, CNPJ and EVP\r\n  - status 200: subtract 1 token from bucket\r\n  - status 404: subtract 20 tokens from bucket\r\n  - payment order sent\r\n    - add 2 tokens back to bucket for legal person category (PJ)\r\n\r\n  (*) The bucket size of `ENTRIES_READ_USER_ANTISCAN` and `ENTRIES_READ_USER_ANTISCAN_V2` policies is categorized according to type of person that is making request.\r\n   For this endpoint, PJ category will always be applied according to definitions below:\r\n  | Category | Replenishment rate | Bucket size |\r\n  |--------------|--------------------|------------------|\r\n  | PJ | 20/min | 1,000 |\r\n  \r\n"
      type: object
      allOf:
        - type: object
          properties:
            retry-after:
              description: 'Time in seconds when bucket will become positive again. '
              type: string
              example: '356'
        - $ref: '#/components/schemas/tokenBucketHeaders'
    RequestLimitInformation:
      description: "## Request limitation\r\n\r\nTo preserves the stability of the DICT service, specifically for the entry query operation when initiating a payment by key or emv, these are subject to request limitation policies. There is also request limitation in order to prevent data scanning attacks.\r\nA limitation policy has a scope associated with it, which can be the end user or the participant.\r\nEach policy has a token replacement rate, a bucket size and a counting rule.\r\nFor the entry query, the bucket use will be as detailed below:\r\n\r\n### Policy counting rules\r\n\r\n- `ENTRIES_READ_USER_ANTISCAN`\r\n  - Only applicable to keys of type EMAIL and PHONE\r\n  - status 200: subtract 1\r\n  - status 404: subtract 20\r\n  - payment order sent\r\n    - add 1 for natural person category (PF)\r\n    - add 2 for legal person category (PJ)\r\n\r\n- `ENTRIES_READ_USER_ANTISCAN_V2`\r\n  - Only applicable to keys of type CPF, CNPJ and EVP\r\n  - status 200: subtracts 1\r\n  - status 404: subtract 20\r\n  - payment order sent\r\n    - add 1 for natural person category (PF)\r\n    - add 2 for legal person category (PJ)\r\n\r\n  (*) The bucket size of the `ENTRIES_READ_USER_ANTISCAN` and `ENTRIES_READ_USER_ANTISCAN_V2` policies is categorized according to the type of\r\n   end user making the query, natural person (PF) or legal person (PJ):\r\n  | Category | Replenishment rate | Bucket size |\r\n  |--------------|--------------------|------------------|\r\n  | PF | 2/min | 100 |\r\n  | PJ | 20/min | 1,000 |\r\n  \r\n"
      type: string
    BacenCobCalendario:
      title: Root Type for PixCobCalendar
      description: The fields nested under the calendar identifier organize information regarding debt collection time control.
      required:
        - expiracao
      type: object
      properties:
        expiracao:
          format: int32
          description: 'The expiration in seconds. Default: 86400 (1 day).'
          type: integer
      example:
        expiracao: 86400
    PixPaymentMerchantMaskedInformationResponseEnvelope:
      title: Root Type for PixPaymentMerchantResponseEnvelope
      description: ''
      required:
        - version
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentMerchantMaskedInformationResponseEnvelopeBody'
        errors:
          description: Array of errors.
          type: array
          items:
            $ref: '#/components/schemas/ErrorBody'
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        body:
          body:
            amount: '10.01'
            creditParty:
              account: '10'
              accountType: CACC
              bank: '30306294'
              branch: '10'
              name: Beltrano de Tal
              personType: NATURAL_TYPE
              taxId: '22222222222'
            debitParty:
              account: '10'
              accountType: CACC
              bank: '30306294'
              branch: '10'
              name: Fulano de Tal
              personType: NATURAL_TYPE
              taxId: '11111111111'
            endToEndId: E3030629420200808185300887639654
          clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
          createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
          entity: PixPayment
          lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
          pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
          status: INITIATED
        status: 200
        version: 1.0.0
    PixPaymentMerchantMaskedInformationResponseEnvelopeBody:
      title: Root Type for PixPaymentMerchantResponseEnvelopeBody
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentMerchantMaskedInformationResponseEnvelopeInternalBody'
          description: The response instance.
          properties:
            creditParty:
              type: object
              properties:
                account:
                  type: string
                accountType:
                  type: string
                bank:
                  type: string
                branch:
                  type: string
                name:
                  type: string
                personType:
                  type: string
                taxId:
                  type: string
            debitParty:
              type: object
              properties:
                account:
                  type: string
                accountType:
                  type: string
                bank:
                  type: string
                branch:
                  type: string
                name:
                  type: string
                personType:
                  type: string
                taxId:
                  type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          description: Payment's creation timestamp.
          type: string
        entity:
          description: The entity's name.
          type: string
        lastUpdateTimestamp:
          description: Entity's last update timestamp.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        status:
          description: Transaction's current status.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        body:
          amount: '10.01'
          creditParty:
            account: '10'
            accountType: CACC
            bank: '30306294'
            branch: '10'
            name: Beltrano de Tal
            personType: NATURAL_TYPE
            taxId: '22222222222'
          debitParty:
            account: '10'
            accountType: CACC
            bank: '30306294'
            branch: '10'
            name: Fulano de Tal
            personType: NATURAL_TYPE
            taxId: '11111111111'
          endToEndId: E3030629420200808185300887639654
        clientRequestId: 45244f4e-15ff-413d-808d-7837652ebdc2
        createTimestamp: '2020-08-08T20:17:01.3780252+00:00'
        entity: PixPayment
        lastUpdateTimestamp: '2020-08-08T20:17:01.3780252+00:00'
        pactualId: edd20ddc-534c-4d4a-87d0-8496ea298d14
        status: INITIATED
        tags:
          - tag
    PixPaymentMaskedInformationResponseBodyCreditParty:
      title: Credit Party
      description: ''
      required:
        - bank
        - taxId
        - personType
        - name
        - accountType
      type: object
      properties:
        key:
          description: The key's value.
          type: string
        bank:
          description: The bank ISPB.
          pattern: \d{8}
          type: string
        name:
          description: The person's name.
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary. Part of the value will be hidden with an "*" if it is a CPF.
          type: string
        personType:
          description: The person's type
          enum:
            - NATURAL_PERSON
            - LEGAL_PERSON
          type: string
        accountType:
          description: The account type.
          enum:
            - CACC
            - SLRY
            - SVGS
            - TRAN
          type: string
      example:
        key: string
        bank: '0'
        name: string
        taxId: string
        personType: LEGAL_PERSON
        accountType: CACC
    PixPaymentMaskedInformationResponseEnvelope:
      title: Root Type for PixStaticBRCodePaymentResponse
      description: ''
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentMaskedInformationResponseBody'
        errors:
          description: Array of errors.
          type: array
          items:
            $ref: '#/components/schemas/ErrorBody'
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        errors:
          - errorCode: string
            message: string
        status: 100
        version: string
    PixPaymentMaskedInformationResponseBody:
      title: Response Body
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentMaskedInformationResponseBodyInternal'
          description: Data Object.
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          description: Payment's creation timestamp.
          type: string
        entity:
          description: The entity's name.
          type: string
        lastUpdateTimestamp:
          description: Entity's last update timestamp.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        status:
          description: Transaction's current status.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        amount: 0
        clientRequestId: string
        creditParty: {}
        debitParty: {}
        endToEndId: string
        movementId: string
        pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        remittanceInformation: string
        tags:
          - string
        transactionIdentification: string
    spiAuthorizedParticipant:
      description: The participant data on SPI.
      required:
        - shortName
        - ispb
        - institutionType
        - authorized
        - participationTypeOnSpi
        - participationTypeOnPix
        - participationModalityOnPix
        - taxId
      type: object
      properties:
        shortName:
          description: The reduced name of participant.
          type: string
        ispb:
          description: Participant's ISPB.
          type: string
        institutionType:
          description: Type of institution in the SPI.
          enum:
            - SavingsAndLoansAssociation
            - CommercialBanking
            - ForeignExchangeBank
            - MultipleBank
            - MultipleCooperativeBank
            - CaixaEconomicaFederal
            - CreditCooperative
            - Government
            - PaymentInstitution
            - PaymentInstitutionNotSubjectToAuthorizationByBCB
            - TVMBrokerageFirm
            - MicroEntrepreneurCreditSociety
            - DirectCreditCompany
            - CreditFinancingAndInvestmentCompany
            - LoanCompany
            - TVMDistributionCompany
          type: string
        authorized:
          description: Indicates whether the participant is authorized by the SPI.
          type: boolean
        participationTypeOnSpi:
          description: Regarding the type of participation in SPI.
          enum:
            - Direct
            - Indirect
          type: string
        participationTypeOnPix:
          description: Regarding the type of participation in Pix.
          enum:
            - Mandatory
            - Optional
          type: string
        participationModalityOnPix:
          description: Modality of participation in Pix.
          enum:
            - TransactionalAccountProvider
            - SpecialLiquidator
            - Government
            - PaymentTransactionInitiator
          type: string
        productionStatus:
          description: Statuses when in production.
          enum:
            - ActiveInFullOperation
            - ActiveInRestrictedOperation
          type: string
        joiningStatus:
          description: Statuses when in homologation.
          enum:
            - WaitingStartOfRestrictedOperationStage
            - RegistrationStage
            - HomologationStage
          type: string
        isPaymentInitiator:
          description: When the participant is a payment initiator.
          type: boolean
        isWithDrawalServiceProvider:
          description: When the participant is a Withdrawal and Change service provider.
          type: boolean
        taxId:
          description: The participant taxId (CNPJ).
          type: string
      example:
        shortName: Participant Name IP
        ispb: '12345678'
        institutionType: SavingsAndLoansAssociation
        authorized: true
        participationTypeOnSpi: Direct
        participationTypeOnPix: Mandatory
        participationModalityOnPix: TransactionalAccountProvider
        productionStatus: ActiveInRestrictedOperation
        isPaymentInitiator: true
        isWithDrawalServiceProvider: true
    SpiAuthorizedParticipantsList:
      description: A list of SPI authorized Participants
      required:
        - items
      type: object
      properties:
        items:
          description: List of SPI authorized Participants
          type: array
          items:
            $ref: '#/components/schemas/spiAuthorizedParticipant'
    SpiAuthorizedParticipantsListResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The api version
          type: string
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        body:
          $ref: '#/components/schemas/SpiAuthorizedParticipantsList'
          description: The envelope with a list of authorized participants status.
    PixCollectionLocationLimitValidatorDebtorAccountCreateRequest:
      title: Root Type for PixDynamicLocationBRCodeCreateRequest
      description: ''
      required:
        - amount
        - key
        - debtor
        - merchantCustomerId
        - DebtorAccounts
      type: object
      properties:
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{1,36}'
          type: string
        additionalInformation:
          description: The list of additional informations.
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformation'
            maxLength: 50
        amount:
          $ref: '#/components/schemas/PixCobValorOriginalLimitValidatorEnUS'
          description: The value of collection.
          properties:
            original:
              format: double
              pattern: \d{1,10}\.\d{2}
              type: number
        calendar:
          $ref: '#/components/schemas/PixCobCalendarLimitValidator'
          description: The value of calendar.
          properties:
            expiration:
              format: int32
              type: integer
        debtor:
          oneOf:
            - $ref: '#/components/schemas/NaturalPerson'
            - $ref: '#/components/schemas/LegalPerson'
          description: The debtor object instance.
        key:
          description: The DICT key.
          maxLength: 77
          type: string
        payerQuestion:
          description: The question of payer.
          maxLength: 140
          type: string
        DebtorAccounts:
          description: The debtor account informations
          maxItems: 4
          type: array
          items:
            $ref: '#/components/schemas/DebtorAccountLimitValidator'
      example:
        merchantCustomerId: b0e39511-9a5e-4e74-b8e2-f00080c46472
        additionalInformation:
          - key: chave
            value: valor
        amount:
          changeType: 0
          original: '15.23'
        calendar:
          expiration: 1800
        debtor:
          cpf: '11122233344'
          name: Teste
        key: teste@teste.com
        payerQuestion: Pergunta de teste?
    DebtorAccountLimitValidator:
      title: Credit Party
      description: The debtor account informations
      required:
        - ispb
        - account
        - branch
      type: object
      properties:
        branch:
          description: The branch number.
          pattern: \d{1,4}
          type: string
        account:
          description: The account number.
          pattern: \d{1,20}
          type: string
        ispb:
          description: The bank ISPB.
          pattern: \d{8}
          type: string
      example:
        bank: 0
        branch: 0
        account: 0
    PixCollectionLocationLimitValidatorV2CreateRequest:
      title: Root Type for PixDynamicLocationBRCodeCreateRequest
      description: ''
      required:
        - amount
        - key
        - debtor
        - merchantCustomerId
      type: object
      properties:
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{1,36}'
          type: string
        additionalInformation:
          description: The list of additional informations.
          type: array
          items:
            $ref: '#/components/schemas/AdditionalInformation'
            maxLength: 50
        amount:
          $ref: '#/components/schemas/PixCobValorOriginalLimitValidatorEnUS'
          description: The value of collection.
          properties:
            original:
              format: double
              pattern: \d{1,10}\.\d{2}
              type: number
        calendar:
          $ref: '#/components/schemas/PixCobCalendarLimitValidator'
          description: The value of calendar.
          properties:
            expiration:
              format: int32
              type: integer
        debtor:
          oneOf:
            - $ref: '#/components/schemas/NaturalPerson'
            - $ref: '#/components/schemas/LegalPerson'
          description: The debtor object instance.
        key:
          description: The DICT key.
          maxLength: 77
          type: string
        payerQuestion:
          description: The question of payer.
          maxLength: 140
          type: string
      example:
        merchantCustomerId: b0e39511-9a5e-4e74-b8e2-f00080c46472
        additionalInformation:
          - key: chave
            value: valor
        amount:
          changeType: 0
          original: '15.23'
        calendar:
          expiration: 1800
        debtor:
          cpf: '11122233344'
          name: Teste
        key: teste@teste.com
        payerQuestion: Pergunta de teste?
    PixPaymentMerchantDestinationAccountRequestPayload:
      title: Root Type for PixPaymentMerchantRequestPayload
      description: ''
      required:
        - amount
        - clientRequestId
        - creditParty
      type: object
      properties:
        amount:
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        creditParty:
          $ref: '#/components/schemas/PixPaymentMerchantRequestPayloadCreditParty'
          description: ''
          properties:
            account:
              type: string
            accountType:
              type: string
            bank:
              type: string
            branch:
              type: string
            name:
              type: string
            taxId:
              type: string
        initiationType:
          description: The initiation type.
          default: MANUAL
          enum:
            - MANUAL
            - DICT
            - STATIC_QRCODE
            - DYNAMIC_QRCODE
            - PAYMENT_INITIATOR
          type: string
        paymentType:
          description: The payment type.
          default: IMMEDIATE
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").
          maxLength: 140
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
        transactionType:
          description: The transaction type.
          default: TRANSFER
          enum:
            - TRANSFER
            - CHANGE
            - WITHDRAWAL
          type: string
      example:
        amount: '10.01'
        clientRequestId: 45244f4e-15ff-413d-808d-8837652ebdc6
        creditParty:
          account: '1000'
          accountType: CACC
          bank: '30306294'
          branch: '1'
          name: Beltrano de Tal
          taxId: '22222222222'
        initiationType: MANUAL
        paymentType: IMMEDIATE
        remittanceInformation: Informação para ser apresentada
        tags:
          - abc
          - def
        transactionType: CHANGE
    PixPaymentLimitValidatorHiddenTaxIdResponse:
      title: Root Type for PixStaticBRCodePaymentResponse
      description: ''
      required:
        - status
        - version
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentLimitValidatorHiddenTaxIdResponseBody'
        errors:
          description: Array of errors.
          type: array
          items:
            $ref: '#/components/schemas/ErrorBody'
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        version:
          description: The api version.
          type: string
      example:
        body:
          pactualId: 699a5cbc-e07c-4edc-b152-e942c36d14ac
          clientRequestId: 2bb350ca-442c-42fa-b044-ba2534b601fd
          createTimestamp: '2023-01-23T20:17:01.3780252+00:00'
          lastUpdateTimestamp: '2023-01-23T20:17:01.3780252+00:00'
          entity: PixPayment
          status: PROCESSING
          body:
            merchantCustomerId: b0e39511-9a5e-4e74-b8e2-f00080c46472
            transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
            debitParty:
              account: '2000'
              accountType: CACC
              bank: '30306294'
              branch: '2'
              name: Fulano de Tal
              taxId: '33333333333'
            endToEndId: E3030629420200808185300887639654
            amount: '10.01'
            creditParty:
              accountType: CACC
              bank: '30306294'
              name: Beltrano de Tal
              taxId: '***222333**'
            remittanceInformation: Information...
            paymentType: IMMEDIATE
            transactionType: TRANSFER
            initiationType: DYNAMIC_QRCODE
            urgency: HIGH
          tags:
            - abc
            - def
        status: 100
        version: string
    PixPaymentLimitValidatorHiddenTaxIdResponseBody:
      title: Response Body
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixPaymentLimitValidatorHiddenTaxIdResponseBodyInternal'
          description: Data Object.
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        createTimestamp:
          description: Payment's creation timestamp.
          type: string
        entity:
          description: The entity's name.
          type: string
        lastUpdateTimestamp:
          description: Entity's last update timestamp.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        status:
          description: Transaction's current status.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        pactualId: 699a5cbc-e07c-4edc-b152-e942c36d14ac
        clientRequestId: 2bb350ca-442c-42fa-b044-ba2534b601fd
        createTimestamp: '2023-01-23T20:17:01.3780252+00:00'
        lastUpdateTimestamp: '2023-01-23T20:17:01.3780252+00:00'
        entity: PixPayment
        status: PROCESSING
        body:
          transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
          debitParty:
            account: '2000'
            accountType: CACC
            bank: '30306294'
            branch: '2'
            name: Fulano de Tal
            taxId: '33333333333'
          endToEndId: E3030629420200808185300887639654
          amount: '10.01'
          creditParty:
            account: '1000'
            accountType: CACC
            bank: '30306294'
            branch: '1'
            name: Beltrano de Tal
            taxId: '***222333**'
          remittanceInformation: Information...
          paymentType: IMMEDIATE
          transactionType: TRANSFER
          initiationType: DYNAMIC_QRCODE
          urgency: HIGH
        tags:
          - abc
          - def
    PixPaymentLimitValidatorHiddenTaxIdResponseBodyInternal:
      title: Root Type for PixPaymentResponseBodyInternal
      description: ''
      required:
        - debitParty
        - endToEndId
        - creditParty
        - amount
        - urgency
        - transactionType
        - paymentType
        - initiationType
        - merchantCustomerId
        - transactionIdentification
      type: object
      properties:
        merchantCustomerId:
          description: The unique id that identify the merchant customer
          pattern: '[A-Za-z0-9-]{36}'
          type: string
        transactionIdentification:
          description: Always will be a DynamicBRCode and need to be informed here.
          pattern: '[a-zA-Z0-9]{26,35}'
          type: string
        debitParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyDebitParty'
          description: Data object containing debited's account information.
        endToEndId:
          description: End-to-end payment identifier associated with this request. The same used on DICT GET request.
          type: string
        amount:
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        creditParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyCreditPartyHiddenTaxId'
          description: Data object containing credited's account information.
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").\r\n
          maxLength: 140
          type: string
        paymentType:
          description: The payment type.
          enum:
            - IMMEDIATE
          type: string
        transactionType:
          description: The transaction type.
          enum:
            - TRANSFER
          type: string
        urgency:
          description: The urgency of Pix.
          enum:
            - HIGH
          type: string
        initiationType:
          description: The initiation type.
          enum:
            - DYNAMIC_QRCODE
          type: string
      example:
        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
        debitParty:
          account: '2000'
          accountType: CACC
          bank: '30306294'
          branch: '2'
          name: Fulano de Tal
          taxId: '33333333333'
        endToEndId: E3030629420200808185300887639654
        amount: '10.01'
        creditParty:
          account: '1000'
          accountType: CACC
          bank: '30306294'
          branch: '1'
          name: Beltrano de Tal
          taxId: '***222333**'
        remittanceInformation: Information...
        paymentType: IMMEDIATE
        transactionType: TRANSFER
        initiationType: DYNAMIC_QRCODE
        urgency: HIGH
    PixPaymentResponseBodyCreditPartyHiddenTaxId:
      title: Credit Party
      description: ''
      required:
        - bank
        - taxId
        - personType
        - name
        - accountType
      type: object
      properties:
        key:
          description: The key's value.
          type: string
        bank:
          description: The bank ISPB.
          pattern: \d{8}
          type: string
        name:
          description: The person's name.
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary. Part of the value will be hidden with an "*" if it is a CPF.
          type: string
        personType:
          description: The person's type
          enum:
            - NATURAL_PERSON
            - LEGAL_PERSON
          type: string
        accountType:
          description: The account type.
          enum:
            - CACC
            - SLRY
            - SVGS
            - TRAN
          type: string
      example:
        key: string
        bank: 0
        branch: 0
        account: 0
        name: string
        taxId: string
        personType: 1
        accountType: 1
    PixPaymentResponseBodyInternal:
      title: Root Type for PixPaymentResponseBodyInternal
      description: ''
      required:
        - debitParty
        - endToEndId
        - creditParty
        - amount
        - urgency
        - transactionType
        - paymentType
        - initiationType
      type: object
      properties:
        transactionIdentification:
          description: If present on StaticBRCode must be preserved and informed here. It's always present on DynamicBRCode and need to be informed here as well.
          pattern: '[a-zA-Z0-9]{1,35}'
          type: string
        debitParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyDebitParty'
          description: Data object containing debited's account information.
        endToEndId:
          description: End-to-end payment identifier associated with this request. The same used on DICT GET request.
          type: string
        amount:
          format: decimal
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: number
        creditParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyCreditParty'
          description: Data object containing credited's account information.
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").\r\n
          maxLength: 140
          type: string
        paymentType:
          description: The payment type.
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        transactionType:
          description: The transaction type.
          enum:
            - TRANSFER
            - CHANGE
            - WITHDRAWAL
          type: string
        urgency:
          description: The urgency of Pix.
          enum:
            - HIGH
            - NORMAL
          type: string
        initiationType:
          description: The initiation type.
          enum:
            - MANUAL
            - DICT
            - STATIC_QRCODE
            - DYNAMIC_QRCODE
            - PAYMENT_INITIATOR
          type: string
        vlcpAmount:
          format: decimal
          description: The amount of the purchase.
          pattern: \d{1,10}\.\d{2}
          type: number
        vldnAmount:
          format: decimal
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: number
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
        withdrawalAgentMode:
          description: Field used to discriminate the withdrawal agent mode and to identify the withdrawal service provider.
          enum:
            - AGTEC
            - AGTOT
            - AGPSS
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          pattern: '[0-9]{8}'
          type: string
      example:
        movementId: 4f3c1360-c1d4-4e6b-b261-14ef479b4181
        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
        debitParty: {}
        endToEndId: E3030629420200808185300887639654
        amount: '10.01'
        creditParty: {}
        remittanceInformation: Information...
        paymentType: IMMEDIATE
        transactionType: CHANGE
        initiationType: MANUAL
        urgency: HIGH
        vlcpAmount: '5.01'
        vldnAmount: '5.00'
    PixPaymentMaskedInformationResponseBodyInternal:
      title: Root Type for PixPaymentResponseBodyInternal
      description: ''
      required:
        - debitParty
        - endToEndId
        - creditParty
        - amount
        - urgency
        - transactionType
        - paymentType
        - initiationType
      type: object
      properties:
        transactionIdentification:
          description: If present on StaticBRCode must be preserved and informed here. It's always present on DynamicBRCode and need to be informed here as well.
          pattern: '[a-zA-Z0-9]{1,35}'
          type: string
        debitParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyDebitParty'
          description: Data object containing debited's account information.
        endToEndId:
          description: End-to-end payment identifier associated with this request. The same used on DICT GET request.
          type: string
        amount:
          format: decimal
          description: The transaction amount.
          pattern: \d{1,10}\.\d{2}
          type: number
        creditParty:
          $ref: '#/components/schemas/PixPaymentMaskedInformationResponseBodyCreditParty'
          description: Data object containing credited's account information.
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").
          maxLength: 140
          type: string
        paymentType:
          description: The payment type.
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        transactionType:
          description: The transaction type.
          enum:
            - TRANSFER
            - CHANGE
            - WITHDRAWAL
          type: string
        urgency:
          description: The urgency of Pix.
          enum:
            - HIGH
            - NORMAL
          type: string
        initiationType:
          description: The initiation type.
          enum:
            - MANUAL
            - DICT
            - STATIC_QRCODE
            - DYNAMIC_QRCODE
            - PAYMENT_INITIATOR
          type: string
        vlcpAmount:
          format: decimal
          description: The amount of the purchase.
          pattern: \d{1,10}\.\d{2}
          type: number
        vldnAmount:
          format: decimal
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: number
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
        withdrawalAgentMode:
          description: Field used to discriminate the withdrawal agent mode and to identify the withdrawal service provider.
          enum:
            - AGTEC
            - AGTOT
            - AGPSS
          type: string
        withdrawalServiceProvider:
          description: The ISPB Identifier of the withdrawal service.
          pattern: '[0-9]{8}'
          type: string
      example:
        movementId: 4f3c1360-c1d4-4e6b-b261-14ef479b4181
        transactionIdentification: dc8cf02b-81b5-4bd5-9323-453b207e704a
        debitParty: {}
        endToEndId: E3030629420200808185300887639654
        amount: '10.01'
        creditParty: {}
        remittanceInformation: Information...
        paymentType: IMMEDIATE
        transactionType: CHANGE
        initiationType: MANUAL
        urgency: HIGH
        vlcpAmount: '5.01'
        vldnAmount: '5.00'
    PixPaymentMerchantMaskedInformationResponseEnvelopeInternalBody:
      title: Root Type for PixPaymentMerchantResponseEnvelopeInternalBody
      description: ''
      required:
        - amount
        - endToEndId
        - creditParty
        - debitParty
        - initiationType
        - paymentType
        - transactionType
        - urgency
      type: object
      properties:
        debitParty:
          $ref: '#/components/schemas/PixPaymentResponseBodyDebitParty'
          description: The Debit Party instance.
          properties:
            account:
              type: string
            personType:
              type: string
            taxId:
              type: string
            accountType:
              type: string
            branch:
              type: string
            bank:
              type: string
            name:
              type: string
        creditParty:
          $ref: '#/components/schemas/PixPaymentMaskedInformationResponseBodyCreditParty'
          description: The Credit Party instance.
          properties:
            account:
              type: string
            accountType:
              type: string
            taxId:
              type: string
            personType:
              type: string
            branch:
              type: string
            bank:
              type: string
            name:
              type: string
        amount:
          format: decimal
          description: The amount value.
          type: number
        endToEndId:
          description: End-to-end payment identifier associated with this request. The same used on DICT GET request.
          type: string
        remittanceInformation:
          description: Text written by the payer on payment. (e.g., "barbecue payment").\r\n
          maxLength: 140
          type: string
        paymentType:
          description: The payment type.
          enum:
            - IMMEDIATE
            - FRAUD
            - SCHEDULED
          type: string
        transactionType:
          description: The transaction type.
          enum:
            - TRANSFER
            - CHANGE
            - WITHDRAWAL
          type: string
        urgency:
          description: The urgency of Pix.
          enum:
            - HIGH
            - NORMAL
          type: string
        initiationType:
          description: The initiation type.
          enum:
            - MANUAL
            - DICT
            - STATIC_QRCODE
            - DYNAMIC_QRCODE
            - PAYMENT_INITIATOR
          type: string
        vlcpAmount:
          format: decimal
          description: The amount of the purchase.
          pattern: \d{1,10}\.\d{2}
          type: number
        vldnAmount:
          format: decimal
          description: The cash value made available.
          pattern: \d{1,10}\.\d{2}
          type: number
        taxIdPaymentInitiator:
          description: The CNPJ of the payment initiator.
          pattern: \d{14}
          type: string
      example:
        amount: '10.01'
        debitParty:
          account: '10'
          personType: NATURAL_TYPE
          taxId: '11111111111'
          accountType: CACC
          branch: '10'
          bank: '30306294'
          name: Fulano de Tal
        creditParty:
          account: '10'
          accountType: CACC
          taxId: '22222222222'
          personType: NATURAL_TYPE
          branch: '10'
          bank: '30306294'
          name: Beltrano de Tal
        endToEndId: E3030629420200808185300887639654
        remittanceInformation: Informação para ser apresentada
        paymentType: IMMEDIATE
        transactionType: CHANGE
        initiationType: MANUAL
        urgency: HIGH
        vlcpAmount: '5.01'
        vldnAmount: '5.00'
  responses:
    SuccessCreateResource:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SingleResponse'
          examples:
            SuccessCreateResourceExample:
              value:
                version: '1.0'
                status: 202
                body:
                  clientRequestId: b2af2d7a-23b5-4cfb-b879-0b6fa705beb2
                  pactualId: 71a16885-4f6d-492f-a741-d0d3a106cfa1
      description: A success api response for create single resources.
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            InternalServerErrorExample:
              value:
                version: 1.0.0
                status: 500
                errors:
                  - errorCode: PIE001
                    message: Internal server error
      description: Internal server error responses.
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            BadRequestExample:
              value:
                version: 1.0.0
                status: 400
                errors:
                  - errorCode: PCE001
                    message: The field 'name' is mandatory.
                  - errorCode: PCE001
                    message: The field 'accountNumber' is mandatory.
      description: A BadRequest response.
    Unauthorized:
      description: Response when a request is not athorized for the user.
    Forbiden:
      description: Response when the resource can not be accessed by the user.
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            NotFoundExample:
              value:
                version: 1.0.0
                status: 404
      description: A NotFound response.
    TooManyRequests:
      description: Too many requests. Try wait and call again later.
    GatewayTimeout:
      description: Received a timeout from an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
    EmptyOKResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmptyOKResponse'
          examples:
            EmptyOKResponse:
              value:
                version: 1.0.0
                status: 200
      description: ''
    Conflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            BadRequestExample:
              value:
                version: 1.0.0
                status: 409
                errors:
                  - errorCode: PCE001
                    message: The message has already been processed.
      description: Happens when conflicting messages are submitted.
    BacenBadRequest:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BacenErrorResponse'
          examples:
            ErrorBadRequest:
              value:
                type: https://pix.bcb.gov.br/api/v2/error/CobOperacaoInvalida
                title: Cobrança inválida.
                status: 400
                detail: A requisição que busca alterar ou criar uma cobrança para pagamento imediato não respeita o schema ou está semanticamente errada.
                correlationId: 3ec10393-04da-4c50-ae51-a1b66d8ed672
                violations:
                  - reason: O campo cob.valor.original não respeita o schema.
                    property: cob.valor.original
                    value: '0'
      description: Invalid format request
    BacenForbidden:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BacenErrorResponse'
          examples:
            Example Forbidden:
              value:
                type: https://pix.bcb.gov.br/api/v2/error/AcessoNegado
                title: Acesso Negado
                status: 403
                detail: Requisição de participante autenticado que viola alguma regra de autorização.
      description: Request for authenticated participant that violates any authorization rule
    BacenInternalServer:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BacenErrorResponse'
          examples:
            ExampleInternalServerError:
              value:
                type: https://pix.bcb.gov.br/api/v2/error/ErroInternoDoServidor
                title: Erro Interno do Servidor
                status: 500
                detail: Condição inesperada ao processar requisição.
                correlationId: a65df29a-53c0-45dd-ba7a-f07d800f97c5
      description: Internal server error
    BacenServiceUnavailable:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BacenErrorResponse'
          examples:
            ExampleServiceUnavailable:
              value:
                type: https://pix.bcb.gov.br/api/v2/error/ServicoIndisponivel
                title: Serviço Indisponível
                status: 503
                detail: Serviço não está disponível no momento. Serviço solicitado pode estar em manutenção ou fora da janela de funcionamento.
      description: Service is not currently available. Service requested may be in maintenance or outside the operating window.
    BacenNotFound:
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/BacenErrorResponse'
          examples:
            ExampleNotFound:
              value:
                type: https://pix.bcb.gov.br/api/v2/error/NaoEncontrado
                title: Nao Encontrado
                status: 404
                detail: Entidade não encontrada.
      description: Entity not found
    TooManyRequestsRetryAfter:
      headers:
        TokenBucket:
          schema:
            $ref: '#/components/schemas/tokenBucketHeadersOn429'
      description: Too many requests. Try wait and call again later.
    NotFoundTokenBucket:
      headers:
        TokenBucket:
          schema:
            $ref: '#/components/schemas/tokenBucketHeaders'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            NotFoundExample:
              value:
                version: 1.0.0
                status: 404
      description: A NotFound response.
  parameters:
    inicio:
      name: inicio
      schema:
        format: date-time
        title: Initial Date
        description: Filters records whose creation date is greater than or equal to the start date. Respects RFC 3339.
        type: string
      in: query
      required: true
    fim:
      name: fim
      schema:
        format: date-time
        title: Initial Date
        description: Filters records whose creation date is greater than or equal to the start date. Respects RFC 3339.
        type: string
      in: query
      required: true
    paginaAtual:
      name: paginacao.paginaAtual
      schema:
        format: int32
        title: Current Page
        description: Page to be returned by the query. If not informed, the PSP will assume it will be 0.
        default: 0
        minimum: 0
        type: integer
      in: query
      required: false
    itensPorPagina:
      name: paginacao.itensPorPagina
      schema:
        format: int32
        title: Items per Page
        description: Maximum number of records returned on each page. Only the last page can contain a smaller amount of records.
        default: 100
        maximum: 1000
        minimum: 1
        type: integer
      in: query
      required: false
  examples:
    retorno7:
      summary: Exemplo 1
      value:
        id: '123456'
        rtrId: D12345678202009091000abcde123456
        valor: '7.89'
        horario:
          solicitacao: '2020-09-11T15:25:59.411Z'
        status: EM_PROCESSAMENTO
    corpo1:
      summary: Exemplo 1
      value:
        calendario:
          expiracao: '3600'
        devedor:
          cpf: '12345678909'
          nome: Francisco da Silva
        valor:
          original: '123.45'
        chave: 71cdf9ba-c695-4e3c-b010-abb521a3f1be
        solicitacaoPagador: Cobrança dos serviços prestados.
    corpo2:
      summary: Exemplo 2
      value:
        calendario:
          expiracao: '3600'
        devedor:
          cnpj: '12345678000195'
          nome: Empresa de Serviços SA
        valor:
          original: '37.00'
        chave: ac107ed7-97cd-4fe7-8df5-a5f5659bf2f3
        solicitacaoPagador: Serviço realizado.
        infoAdicionais:
          - nome: Campo 1
            valor: Informação Adicional1 do PSP-Recebedor
          - nome: Campo 2
            valor: Informação Adicional2 do PSP-Recebedor
    corpo5:
      summary: Exemplo 1
      value:
        status: REMOVIDA_PELO_USUARIO_RECEBEDOR
    retorno1V2x:
      summary: Exemplo 1
      value:
        status: ATIVA
        calendario:
          criacao: '2020-09-09T20:15:00.358Z'
          expiracao: '3600'
        location: pix.example.com/qr/9d36b84fc70b478fb95c12729b90ca25
        loc:
          id: 4f1b794d-2308-49ff-891c-cb49baf3632e
          location: pix.example.com/qr/9d36b84f70b478fb95c12729b90ca25
          tipoCob: COB
        txid: 7978c0c97ea847e78e8849634473c1f1
        revisao: 1
        devedor:
          cnpj: '12345678000195'
          nome: Empresa de Serviços SA
        valor:
          original: '567.89'
        chave: a1f4102e-a446-4a57-bcce-6fa48899c1d1
        solicitacaoPagador: Informar cartão fidelidade
    retorno2V2x:
      summary: Exemplo 2
      value:
        status: CONCLUIDA
        calendario:
          criacao: '2020-09-09T20:15:00.358Z'
          expiracao: '3600'
        location: pix.example.com/qr/1dd7f893a58e417287028dc33e21a403
        loc:
          id: 4f1b794d-2308-49ff-891c-cb49baf3632e
          location: pix.example.com/qr/1dd7f893a58e417287028dc33e21a403
          tipoCob: COB
        txid: 655dfdb1a4514b8fbb58254b958913fb
        revisao: 1
        devedor:
          cnpj: '12345678000195'
          nome: Empresa de Serviços SA
        valor:
          original: '100.00'
        chave: 40a0932d-1918-4eee-845d-35a2da1690dc
        solicitacaoPagador: Informar cartão fidelidade
        pix:
          - endToEndId: E12345678202009091221kkkkkkkkkkk
            txid: 655dfdb1-a451-4b8f-bb58-254b958913fb
            valor: '110.00'
            horario: '2020-09-09T20:15:00.358Z'
            pagador:
              cnpj: '12345678000195'
              nome: Empresa de Serviços SA
            infoPagador: '0123456789'
            devolucoes:
              - id: 123ABC
                rtrId: Dxxxxxxxx202009091221kkkkkkkkkkk
                valor: '10.00'
                horario:
                  solicitacao: '2020-09-09T20:15:00.358Z'
                status: EM_PROCESSAMENTO
    getPix1:
      summary: Exemplo 1
      value:
        parametros:
          inicio: '2020-04-01T00:00:00Z'
          fim: '2020-04-01T23:59:59Z'
          paginacao:
            paginaAtual: 0
            itensPorPagina: 100
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 2
        pix:
          - endToEndId: E12345678202009091221abcdef12345
            txid: cd1fe328c875481285a6f233ae41b662
            valor: '100.00'
            horario: '2020-09-10T13:03:33.902Z'
            pagador:
              cnpj: '12345678000195'
              nome: Empresa de Serviços SA
            infoPagador: Reforma da casa
            devolucoes:
              - id: 000AAA111
                rtrId: D12345678202009091000abcde123456
                valor: '11.00'
                horario:
                  solicitacao: '2020-09-10T13:03:33.902Z'
                status: EM_PROCESSAMENTO
          - endToEndId: E12345678202009091221ghijk78901234
            txid: 5b933948f3224266b1050ac54319e775
            valor: '200.00'
            horario: '2020-09-10T13:03:33.902Z'
            pagador:
              cpf: '12345678909'
              nome: Francisco da Silva
            infoPagador: Revisão do carro
    getPix1V2X:
      summary: Exemplo 1
      value:
        parametros:
          inicio: '2020-04-01T00:00:00Z'
          fim: '2020-04-01T23:59:59Z'
          paginacao:
            paginaAtual: 0
            itensPorPagina: 100
            quantidadeDePaginas: 1
            quantidadeTotalDeItens: 2
        pix:
          - endToEndId: E12345678202009091221abcdef12345
            txid: cd1fe328c875481285a6f233ae41b662
            valor: '100.00'
            horario: '2020-09-10T13:03:33.902Z'
            infoPagador: Reforma da casa
            devolucoes:
              - id: 000AAA111
                rtrId: D12345678202009091000abcde123456
                valor: '11.00'
                horario:
                  solicitacao: '2020-09-10T13:03:33.902Z'
                status: EM_PROCESSAMENTO
          - endToEndId: E12345678202009091221ghijk78901234
            txid: 5b933948f3224266b1050ac54319e775
            valor: '200.00'
            horario: '2020-09-10T13:03:33.902Z'
            infoPagador: Revisão do carro
  requestBodies:
    PixCobBody:
      description: Request for collection generation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PixCobSolicitada'
          examples:
            exemplo1:
              $ref: '#/components/examples/corpo1'
            exemplo2:
              $ref: '#/components/examples/corpo2'
      required: true
    PixCobBodyV2X:
      description: Request for collection generation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PixCobSolicitadaV2X'
      required: true
    PixCobBodyRevisada:
      description: Request for collection generation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PixCobRevisada'
          examples:
            exemplo1:
              $ref: '#/components/examples/corpo5'
      required: true
    PixCobBodyRevisadaV2X:
      description: Request for collection generation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PixCobRevisadaV2X'
      required: true
    PixWebhookPixBody:
      description: Dados para notificação dos Pix.
      content:
        application/json:
          schema:
            properties:
              pix:
                type: array
                items:
                  $ref: '#/components/schemas/PixCob'
                example:
                  - endToEndId: E12345678202009091221kkkkkkkkkkk
                    txid: c3e0e7a4e7f1469a9f78-2d3d4999343c
                    valor: '110.00'
                    horario: '2020-09-09T20:15:00.358Z'
                    infoPagador: '0123456789'
                    devolucoes:
                      id: 123ABC
                      rtrId: D12345678202009091221abcdf098765
                      valor: '10.00'
                      horario:
                        solicitacao: '2020-09-09T20:15:00.358Z'
                      status: EM_PROCESSAMENTO
                  - endToEndId: E87654321202009091221dfghi123456
                    txid: 971122d8f37211eaadc10242ac120002
                    valor: '110.00'
                    horario: '2020-09-09T20:15:00.358Z'
                    infoPagador: '0123456789'
      required: true
  securitySchemes:
    BaaSAuthorizer:
      type: apiKey
      description: 'JWT Authorization header using the Bearer scheme. Example: "Authorization: Bearer { token }"'
      name: Authorization
      in: header
security:
  - BaaSAuthorizer: []
tags:
  - name: PixCobV2.x
    description: Gathers endpoints to deal with debt collection management in second version and higher.
    x-displayName: Debt Collection Management V2.x
  - name: PixBacenCobDueDateV2.x
    description: Gathers endpoints to deal with debt collection due date management.
    x-displayName: Debt Collection Due Date Management V2.x
  - name: PixBacenBulkCobDueDateV2.x
    description: It brings together endpoints designed to handle batch payment collection management..
    x-displayName: Bulk collection due date management V2.x
  - name: Merchant
    description: This session deals with payments made by Transactional Customers.
    x-displayName: PixPayment
  - name: MerchantUsingAccountId
    description: This session deals with payments using accountId made by Transactional Customers.
    x-displayName: PixPayment using AccountId
  - name: MerchantPaymentSearch
    description: This session deals with payments searchs.
    x-displayName: PixPayment Consulting
  - name: MerchantReversalSearch
    description: This session deals with reversal searchs.
    x-displayName: PixReversal Consulting
  - name: PixLocV2.x
    description: Gathers endpoints to deal with setting up locations for payload.
    x-displayName: Setting up locations for payloads V2.x
  - name: PixJsonPayloadCobsV2.x
    description: |-
      Gathers endpoints (locations) used by the PSP paying software to recover the JSON payload that represents a charge. 
      The endpoints listed in this Tag have different authentication and authorization requirements compared to the other endpoints listed in this API. 
      They are __open__ endpoints so that any internet client can connect. Each _location_ is an _[url of capacity](https://www.w3.org/TR/capability-urls/)_, functionality implemented via the `pixurlAcessToken` fragment. 
      For more information, see the [Standards Manual for Pix startup](https://www.bcb.gov.br/estabilidadefinanceira/pix).
    x-displayName: Gathers endpoints (locations) that return the JSON Payload that represents a Collection V2.x.
  - name: PixIncomingV2.x
    description: It gathers endpoints to deal with incoming Pix management in second version V2.X.
    x-displayName: Incoming Pix Management V2.X
  - name: DynamicBRCode
    description: This session handles PIX dynamic qrcodes issuing.
    x-displayName: Dynamic QrCode
  - name: StaticBRCode Rules based on the initiationType value.
    description: This session handles PIX static BRCodes issuing.
    x-displayName: Static QrCode
  - name: ImmediateCollection
    description: This session handles PIX immediate QrCodes issuing.
  - name: DueDateCollection
    description: This session handles PIX due date QrCodes issuing.
  - name: MerchantLimitValidator
    description: |-
      This session handles PIX transactions and QRCode creations passing through a limit validator. 

      A prior commercial agreement is required before using the service.
    x-displayName: Merchant Limit Validator
  - name: MerchantLimitValidatorV2
    description: |-
      This session handles PIX transactions and QRCode creations passing through a limit validator v2. 

      A prior commercial agreement is required before using the service.
    x-displayName: Merchant Limit Validator V2
  - name: BacenWebhook
    description: |-
      Gathers endpoints to deal with setting up webhooks.

      ## Pix Webhook
      The following code represents the structure of a pix Webhook.

      ```

      {
        "pix": [
          {
            "horario": "2023-08-23T14:22:00.759Z",
            "devolucoes": null,
            "componentesValor": {
              "original": {
                "valor": "39.18"
              }
            },
            "valor": "39.18",
            "txid": "4276CE7D51914D909FB155383B4DBE91",
            "endToEndId": "E3030629420230823142100048805639"
          }
        ]
      }

      ```
    x-displayName: Setting up for Webhooks
  - name: MerchantPixWebhook
    description: |-
      Pix Webhooks.

      **Important to know:**

      - PactualId: BTG Pactual's unique identifier
      - ClientRequestId: Customer's unique identifier
      - EndToEndId: Payment's unique identifier at the Central Bank
      - TransactionIdentification: Unique identifier of charges
      - MovementId: Master account impact identifier

      ## PixPayment/PixReversal Error Codes


      | Error Code |Error Description|
      |----------|------|
      |PBE105|No Limit Available.|
      |PBE150|General reject operation.|
      |PBE304|Dict bind was not found with this key: {key}.|
      |PBE308|Registered account does not allow PIX payment transactions.|
      |PBE309|It is not possible update a payment with a status different of 'INITIATED'. Current status is: 'PROCESSING'|
      |PBE310|Invalid key format. The accepted key formats, are from: CPF, CNPJ, EMAIL, EVP and PHONE|
      |PBE316|Inner PSP transactions calls are not allowed.|
      |PBE317|Entry queried is in custody of participant making the query.|
      |PBE320/PBE399|Duplicated EndToEndId.|
      |PBE324|AbortedSettlementTimeout|Settlement aborted due to timeout.|
      |PBE325|Transaction stopped due to error at the Creditor Agent.|
      |PBE326|InvalidCreditorAccountNumber|Creditor account number invalid or missing.|
      |PBE327|Account specified is blocked, prohibiting posting of transactions against it.|
      |PBE328|Creditor account number closed|
      |PBE329|Creditor account type missing or invalid|
      |PBE330|Transaction type not supported/authorized on this account.|
      |PBE332|Specified message amount is equal to zero|
      |PBE333|Amount of funds available to cover specified message amount is insufficient.|
      |PBE334|Amount received is not the amount agreed or expected|
      |PBE335|Number of transactions is invalid or missing. Generic usage if cannot specify between group and payment information levels|
      |PBE336|Identification of end customer is not consistent with associated account number. (formerly CreditorConsistency).|
      |PBE337|Value in Creditor Identifier is incorrect|
      |PBE338|Content is incorrect|
      |PBE339|The order was rejected by the bank side (for reasons concerning content)|
      |PBE341|Invalid creation date and time in Group Header (eg, historic date)|
      |PBE342|Associated message, payment information block or transaction was received after agreed processing cut-off date, i.e., date in the past.|
      |PBE343|Settlement of the transaction has failed|
      |PBE344|End to End Id missing or invalid|
      |PBE345|InvalidDebtorClearingSystemMemberIdentifier|Debtor ClearingSystemMember identifier is invalid or missing|
      |PBE346|InvalidCreditorClearingSystemMemberIdentifier|Creditor ClearingSystemMember identifier is invalid or missing|
      |PBE353|Entity not found.|
      |PBE396|Json payload not found.|
      |PBE397|Json payload gone.|
      |PBE398|Unable to read json payload.|
      |PBE414|Specific transaction/message amount is greater than allowed maximum|
      |PBE415|Creditor or Ultimate Creditor identification code missing or invalid|
      |PBE417|Due to specific service offered by the Creditor Agent.|
      |PBE419|The value of property 'Urgency' must be NORMAL when 'PaymentType' is SCHEDULED.|
      |PBE423|The AdditionalInformation field should be blank.|
      |PBE424|Please add text to AdditionalInformation.|
      |PBE425|The AdditionalInformation field must be up to 105 characters.|
      |PBE428|'VlcpAmount' and 'VldnAmount' properties are required when 'TransactionalType' is CHANGE.|
      |PBE429|'VldnAmount' property is required when 'TransactionType' is WITHDRAWAL.|
      |PBE430|It is not possible send a value in 'VlcpAmount' when 'TransactionType' is WITHDRAWAL.|
      |PBE431|'VldnAmount' property must have the same value than 'Amount' property when 'TransactionType' is WITHDRAWAL.|
      |PBE433|It is not possible send a value in 'VlcpAmount' or 'VldnAmount' when 'TransactionType' is TRANSFER.|
      |PBE7000|Creditor name invalid or missing.|
      |PBE7001|Creditor person type invalid or missing.|
      |PBE7002|Creditor titularity invalid or missing.|
      |PBE7003|Account invalid or missing.|
      |PBE7004|Account ISPB invalid or missing.|
      |PBE7005|Account status invalid.|
      |PBE7006|Creditor status invalid.|
      |PBE7007|Block by AML API.|
      |PBE7008|TaxIdPaymentInitiator' property is required when 'InitiationType' is PAYMENT_INITIATOR.|
      |PBE7009|'TransactionIdentification' value must be an identifier from a STATIC_QRCODE when 'InitiationType' is PAYMENT_INITIATOR.|
      |PBE7010|It is not possible send a value in 'CreditParty.Key' when 'InitiationType' is MANUAL.|
      |PBE7011|CreditParty.Key' property is required when 'InitiationType' is DICT, STATIC_QRCODE or DYNAMIC_QRCODE.|
      |PBE7012|Limit has been rejected.|
      |PBE7013|CNPJ of the payment initiator is not registered in the Pix arrangement.|
      |PBE7014|It is not possible send 'TransactionIdentification' property when 'InitiationType' is MANUAL or DICT.|
      |PBE7015|'TransactionIdentification' property is required and must be between 26 and 35 characters when 'InitiationType' is DYNAMIC_QRCODE.|
      |PBE7016|It is not possible send 'TaxIdPaymentInitiator' property when the EMV is from a DYNAMIC_QRCODE.|
      |PBE7017|'TransactionIdentification' property must be up to 25 characteres when is present and 'InitiationType' is STATIC_QRCODE.|
      |PBE7018|The user is not yet activated.|
      |PBE7019|There are some invalid character on texts fields.|
      |PBE7020|Some value is invalid according to its datatype defined by SPI.|
      |PBE7021|'ExpectedPaymentDate' property must be greater than today's date.|
      |PBE7022|Bacen is experiecing technical issues, try again in minutes.|
      |PBE7023|Confirmation time expired for this transaction|
      |PBE7024|The value of property 'PaymentType' must be SCHEDULED when 'ExpectedPaymentDate' is filled|
      |PBE7026|Service is temporarily unavailable. Please try again.|
      |PBE7047|Transaction denied because one of the accounts involved in the process is being closed.|
      |PBE7048|Waiting time expired due to incomplete order.|
      |PBE7053|It's not possible to create a charge when the 'Amount.ChangeType' and 'Amount.Original' are 0.|
      |PBE7054|Withdrawal service provider is not able to make pix payment transactions.|
      |PBE7055|Transaction settlement denied due to counterparty response timeout.|
      |PBE7056|Receiving participant terminated in the SPI.|
      |PBE7058|WithdrawalAgentMode is required when transactionType is WITHDRAWAL or CHANGE.|
      |PBE7059|Invalid withdrawalAgentMode for this transaction type.|
      |PBE7065|Original received payment not found.|
      |PBE7067|'TaxIdPaymentInitiator' property is required only when 'InitiationType' is PAYMENT_INITIATOR.|
      |PCE001|The 'Amount' field must be a positive number.|
      |PCE001|Basic contract validation error.|
      |PCE005|Duplicated ClientRequestId.|
      |PIE002|Unexpected condition when processing request. / Error calling internal api. Please contact our team.|
      |PIE003|Error calling third-part api.|
      |PBE7098|Cash-in denied due to validation API timeout.|
    x-displayName: Entities
x-tagGroups:
  - name: Merchant Dedicated Methods
    tags:
      - Merchant
      - MerchantUsingAccountId
      - MerchantPaymentSearch
      - MerchantReversalSearch
      - MerchantLimitValidator
      - MerchantLimitValidatorV2
  - name: Webhooks
    tags:
      - MerchantPixWebhook
  - name: QRCode
    tags:
      - StaticBRCode
  - name: Pix Api V2.x (Merchant)
    tags:
      - BacenWebhook
      - PixJsonPayloadCobsV2.x
      - PixCobV2.x
      - PixBacenCobDueDateV2.x
      - PixLocV2.x
      - PixIncomingV2.x
      - PixBacenBulkCobDueDateV2.x
x-webhooks:
  pix-payment-webhook:
    post:
      summary: Pix Payment Entity
      operationId: pix-payment-webhook
      tags:
        - MerchantPixWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixPaymentWebhook'
            examples:
              PixPaymentError:
                value:
                  pactualId: 9dcfa089-b132-4591-a936-467825f9cd36
                  clientRequestId: 21526580-149b-4ce1-b976-c00d18a41028
                  entity: PixPayment
                  createTimestamp: '2021-08-11T13:47:27.5439206+00:00'
                  status: ERROR
                  errorCode: PBE343
                  errorDescription: Settlement of the transaction has failed
                  body:
                    amount: 10.02
                    remittanceInformation: informacao adicional teste
                    creditParty:
                      account: '12345678'
                      accountType: CACC
                      bank: '87654321'
                      branch: '1'
                      key: teste@teste.com.br
                      name: Cliente Teste
                      personType: NATURAL_PERSON
                      taxId: '11122233344'
                    debitParty:
                      account: '22336611'
                      accountType: CACC
                      bank: '54412260'
                      branch: '1'
                      name: Usuário Teste
                      personType: NATURAL_PERSON
                      taxId: '44433322211'
                    endToEndId: E5441226020210811134701321844175
                    initiationType: MANUAL
                    movementId: '12345678'
                    movementIds:
                      - '12345678'
                      - '87654321'
                    paymentType: IMMEDIATE
                    transactionType: TRANSFER
                    urgency: HIGH
                    vlcpAmount: 5.01
                    vldnAmount: 50.1
                  tags:
                    - 123teste
                    - Teste123
              PixPaymentConfirmed:
                value:
                  pactualId: 9dcfa089-b132-4591-a936-467825f9cd36
                  clientRequestId: 21526580-149b-4ce1-b976-c00d18a41028
                  entity: PixPayment
                  createTimestamp: '2021-08-11T13:47:27.5439206+00:00'
                  status: CONFIRMED
                  body:
                    amount: 10.02
                    remittanceInformation: informacao adicional teste
                    creditParty:
                      account: '12345678'
                      accountType: CACC
                      bank: '87654321'
                      branch: '1'
                      key: teste@teste.com.br
                      name: Cliente Teste
                      personType: NATURAL_PERSON
                      taxId: '11122233344'
                    debitParty:
                      account: '22336611'
                      accountType: CACC
                      bank: '54412260'
                      branch: '1'
                      name: Usuário Teste
                      personType: NATURAL_PERSON
                      taxId: '44433322211'
                    endToEndId: E5441226020210811134701321844175
                    initiationType: MANUAL
                    movementId: '12345678'
                    movementIds:
                      - '12345678'
                    paymentType: IMMEDIATE
                    transactionType: TRANSFER
                    urgency: HIGH
                    vlcpAmount: 5.01
                    vldnAmount: 5.01
                  tags:
                    - 123teste
                    - Teste123
              PixPaymentInboundConfirmed:
                value:
                  pactualId: 9dcfa089-b132-4591-a936-467825f9cd36
                  clientRequestId: 21526580-149b-4ce1-b976-c00d18a41028
                  entity: PixPaymentInbound
                  createTimestamp: '2021-08-11T13:47:27.5439206+00:00'
                  status: CONFIRMED
                  body:
                    amount: 10.02
                    remittanceInformation: informacao adicional teste
                    creditParty:
                      account: '12345678'
                      accountType: CACC
                      bank: '87654321'
                      branch: '1'
                      key: teste@teste.com.br
                      name: Cliente Teste
                      personType: NATURAL_PERSON
                      taxId: '11122233344'
                    debitParty:
                      account: '22336611'
                      accountType: CACC
                      bank: '54412260'
                      branch: '1'
                      name: Usuário Teste
                      personType: NATURAL_PERSON
                      taxId: '44433322211'
                    transactionIdentification: 05f1040098114b9cb7f8ad73922c2885
                    endToEndId: E5441226020210811134701321844175
                    initiationType: MANUAL
                    movementId: '12345678'
                    movementIds:
                      - '12345678'
                      - '87654321'
                    paymentType: IMMEDIATE
                    transactionType: TRANSFER
                    urgency: HIGH
                    vlcpAmount: 5.01
                    vldnAmount: 5.01
                  tags:
                    - 123teste
                    - Teste123
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
  pix-reversal-webhook:
    post:
      summary: Pix Reversal Entity
      operationId: pix-reversal-webhook
      tags:
        - MerchantPixWebhook
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PixReversalWebhook'
            examples:
              PixReversalError:
                value:
                  pactualId: 74ab3e2c-f69c-4a59-a507-8302186ee743
                  clientRequestId: 40a9bab9eda647f1b21c17bba36e2add
                  entity: PixReversal
                  createTimestamp: '2021-06-09T13:40:45.1580102+00:00'
                  lastUpdateTimestamp: '2021-06-09T13:40:45.1580102+00:00'
                  status: ERROR
                  errorCode: PBE343
                  errorDescription: Settlement of the transaction has failed
                  body:
                    additionalInformation: Devolvendo valor pago
                    amount: 1.23
                    movementId: '12345'
                    movementIds:
                      - '12345'
                    originalEndToEndId: E30306294202106092202UYRCDKUVCIF
                    originalPactualId: b9be3bb7-8a12-44b9-9f5e-224d4615656f
                    reason: BE08
                    returnIdentification: D000000002021060920097z282ZXleEs
                    nature: ORIGINAL
                  tags:
                    - Teste123
                    - 123Teste
              PixReversalConfirmed:
                value:
                  pactualId: 74ab3e2c-f69c-4a59-a507-8302186ee743
                  clientRequestId: 40a9bab9eda647f1b21c17bba36e2add
                  entity: PixReversal
                  createTimestamp: '2021-06-09T13:40:45.1580102+00:00'
                  lastUpdateTimestamp: '2021-06-09T13:40:45.1580102+00:00'
                  status: CONFIRMED
                  body:
                    additionalInformation: Devolvendo valor pago
                    amount: 1.23
                    movementId: '12345'
                    movementIds:
                      - '12345'
                    originalEndToEndId: E30306294202106092202UYRCDKUVCIF
                    originalPactualId: b9be3bb7-8a12-44b9-9f5e-224d4615656f
                    reason: BE08
                    returnIdentification: D000000002021060920097z282ZXleEs
                    nature: ORIGINAL
                  tags:
                    - Teste123
                    - 123Teste
              PixReversalInboundConfirmed:
                value:
                  pactualId: 74ab3e2c-f69c-4a59-a507-8302186ee743
                  clientRequestId: 40a9bab9eda647f1b21c17bba36e2add
                  entity: PixReversalInbound
                  createTimestamp: '2021-06-09T13:40:45.1580102+00:00'
                  lastUpdateTimestamp: '2021-06-09T13:40:45.1580102+00:00'
                  status: CONFIRMED
                  body:
                    additionalInformation: Devolvendo valor pago
                    amount: 1.23
                    movementId: '12345'
                    movementIds:
                      - '12345'
                    originalEndToEndId: E30306294202106092202UYRCDKUVCIF
                    originalPactualId: b9be3bb7-8a12-44b9-9f5e-224d4615656f
                    reason: BE08
                    returnIdentification: D000000002021060920097z282ZXleEs
                    nature: ORIGINAL
                  tags:
                    - Teste123
                    - 123Teste
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
