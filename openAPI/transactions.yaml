openapi: 3.0.1
info:
  title: BTG Pactual Banking as a Service (Transactions)
  version: 2.0.0
  description: "Digital plataform developed by BTG Pactual engineers as an on demand banking service provider.\r\n\r\n[**Documentation Hub**](https://developer.btgpactual.com/dochub)  \r\n    - [Commom Methods](https://developer.btgpactual.com/doccm)  \r\n    - [Onboarding](https://developer.btgpactual.com/docob)  \r\n    - [Transactions](https://developer.btgpactual.com/doctr)  \r\n    - [Openfinance](https://developer.btgpactual.com/docbk)  \r\n    - [PIX Commom Funcionalities](https://developer.btgpactual.com/docpc)  \r\n    - [PIX Indirect Participant](https://developer.btgpactual.com/docpi)  \r\n    - [PIX Merchant Clients](https://developer.btgpactual.com/docpm)  \r\n\r\n|BaaS Transactions API| |\r\n|------------------------|-------------------------------|\r\n|Sandbox |https://api.sandbox.developer.btgpactual.com/tr|\r\n|Sandbox (with mTLS) |https://sandbox.developer.api.btgpactual.com/tr|\r\n|Production |https://api.developer.btgpactual.com/tr|\r\n|Production (with mTLS) |https://developer.api.btgpactual.com/tr|\r\n\r\n\r\n## Response Envelopes\r\n\r\nAll our responses follow the same pattern. They are sent respecting a default response envelope as shown bellow.\r\n```\r\n# Default Envelope\r\n{\r\n    \"version\": \"0.1.0\",\r\n    \"status\": 204\r\n}\r\n\r\n# Envelope with response body\r\n{\r\n    \"version\": \"0.1.0\",\r\n    \"status\": 201,\r\n    \"body\": {\r\n        \"exampleValue\": \"30306294\"\r\n    }\r\n}\r\n\r\n```\r\n\r\n## Error Messages\r\n\r\nAll errors returned from one of ours APIs will follow the same pattern as shown bellow. They will be always contained in an invelope as the example. \r\n\r\n\r\n```\r\n# Default Envelope\r\n{\r\n    \"status\": 404,\r\n    \"version\": \"1.0.0\"\r\n}\r\n\r\n# Envelope with optional error codes\r\n{\r\n    \"version\": \"1.0.0\",\r\n    \"status\": 400,\r\n    \"errors\": [\r\n        {\r\n            \"errorCode\": \"PCE001\",\r\n            \"message\": \"The field 'name' is mandatory.\"\r\n        }\r\n    ]\r\n}\r\n```\r\n"
  contact:
    name: BTG Pactual Team
    url: https://developer.btgpactual.com
    email: baas@btgpactual.com
servers:
  - url: https://api.sandbox.developer.btgpactual.com/tr
    description: BaaS API (Sandbox)
  - url: https://sandbox.developer.api.btgpactual.com/tr
    description: BaaS API (Sandbox with mTLS)
  - url: https://api.developer.btgpactual.com/tr
    description: BaaS API (Production)
  - url: https://developer.api.btgpactual.com/tr
    description: BaaS API (Production with mTLS)
paths:
  /depositary-bank/assignees:
    get:
      tags:
        - Depositary Bank
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssigneesResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: depositary-bank-assignees-get
      summary: Get all Assignees
      description: This method is called to get all assignees.
  /depositary-bank/payment-networks:
    get:
      tags:
        - Depositary Bank
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentNetworkResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: depositary-bank-payment-networks-get
      summary: Get Payment Networks
      description: This method is called to get payment networks.
  /depositary-bank/assignee/{assigneeAccountId}:
    get:
      tags:
        - Depositary Bank
      parameters:
        - name: assigneeAccountId
          description: Id of the Assignee
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssigneeResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: depositary-bank-assignee-get
      summary: Get a Assignee
      description: This method is called to get an assignee.
  /depositary-bank/card-issuer/search:
    get:
      tags:
        - Depositary Bank
      parameters:
        - name: paymentNetwork
          schema:
            description: The Payment Network of the value to be reserved
            enum:
              - VISA
              - MASTERCARD
              - ELO
              - HIPERCARD
            type: string
          in: query
        - name: taxId
          schema:
            description: Tax ID (CNPJ) of the card issuer
            type: string
          in: query
        - name: cardIssuerId
          schema:
            description: ID of the card issuer
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardIssuersResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: depositary-bank-card-issuer-get
      summary: Get Card Issuers
      description: This method is called to get card issuers.
  /depositary-bank/credit-reservation:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreditReservationRequest'
        required: true
      tags:
        - Depositary Bank
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditReservationResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: depositary-bank-credit-reservation-post
      summary: Post credit reservation operation
      description: This method is called to post a credit reservation operation.
  /depositary-bank/credit-reservations/{dateFrom}/{dateTo}:
    get:
      tags:
        - Depositary Bank
      parameters:
        - name: paymentNetwork
          schema:
            description: The Payment Network of the value to be reserved
            enum:
              - VISA
              - MASTERCARD
              - ELO
              - HIPERCARD
            type: string
          in: query
        - name: dateFrom
          schema:
            description: 'The start date of the search. Format: yyyy-MM-dd'
            type: string
            example: '2024-01-15'
          in: path
          required: true
        - name: dateTo
          schema:
            description: 'The end date of the search. Format: yyyy-MM-dd'
            type: string
            example: '2024-06-15'
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditReservationsResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: depositary-bank-credit-reservations-get
      summary: Get credit reservation operations
      description: This method is called to get credit reservation operations in a period, from dateFrom to dateTo.
  /depositary-bank/credit-reservation/{pactualId}:
    get:
      tags:
        - Depositary Bank
      parameters:
        - name: pactualId
          description: Id of the Operation
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditReservationResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: depositary-bank-credit-reservation-get
      summary: Get credit reservation operation
      description: This method is called to get a credit reservation operation by its pactualId.
  /depositary-bank/credit-reservation/balance/{dateTo}:
    get:
      tags:
        - Depositary Bank
      parameters:
        - name: paymentNetwork
          schema:
            description: The Payment Network of the value to be reserved
            enum:
              - VISA
              - MASTERCARD
              - ELO
              - HIPERCARD
            type: string
          in: query
        - example: '2024-06-15'
          name: dateTo
          description: 'The end limit date of the search. It has to be a future date, and can''t be higher than one year from now. Format: yyyy-MM-dd'
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredReservBalanceResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: depositary-bank-credit-reservations-balance-get
      summary: Get credit reservation balance
      description: 'This method is called to get credit reservation balances of a period, from today until the dateTo parameter. '
  /payment/payment-slip/account/{accountId}:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipRequest'
        required: true
      tags:
        - Payment Slips
      parameters:
        - name: accountId
          description: 'The Account Id (Uuid) of Beneficiary. For example: {54c4ed21-5f1f-4942-a3f8-b96537566cb5}'
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 202
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-account
      summary: Generate a payment slip for specific account
      description: This method is called when sending single instances of payment slip to be processed by our infrastructure.
  /payment/payment-slip/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PaymentSlipRequest'
      tags:
        - Payment Slips
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 202
                    body:
                      pactualBatchId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      items:
                        - clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                          pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: payment-slip-bulk
      summary: Generate multiple payment slips for default account (bulk)
      description: |-
        This method is called to send multiple instances of payment slip to be procesed by our infratructure.
        The maximum number of payment slips that can be created in the same request is 25.
  /payment/payment-slip/account/{accountId}/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PaymentSlipRequest'
      tags:
        - Payment Slips
      parameters:
        - name: accountId
          description: 'The Account Id (Uuid) of Beneficiary. For example: {54c4ed21-5f1f-4942-a3f8-b96537566cb5}'
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 202
                    body:
                      pactualBatchId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      items:
                        - clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                          pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: payment-slip-account-bulk
      summary: Generate multiple payment slips for specific account (bulk)
      description: |-
        This method is called to send multiple instances of payment slip to be procesed by our infratructure.
        The maximum number of payment slips that can be created in the same request is 25.
  /payment/payment-slip/bulk/{pactualBulkId}:
    get:
      tags:
        - Payment Slips
      parameters:
        - name: pactualBulkId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipBulkResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 100
                    body:
                      pactualBulkId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      items:
                        - pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                          clientRequestId: string
                          createTimestamp: string
                          lastUpdateTimestamp: string
                          entity: string
                          status: string
                          errorCode: string
                          errorDescription: string
                          tags:
                            - Warsupply
                            - Invoice_1234
                          body:
                            amount: 400000
                            dueDate: '2019-07-20'
                            customer:
                              name: Alex
                              taxId: '61718265298'
                              street: Av. Faria Lima, 0001
                              number: 13A
                              numberComplement: Sala 101 3 andar
                              neighborhood: Itaim Bibi
                              city: string
                              stateCode: string
                              zipCode: 12345678
                            fine:
                              date: '2019-07-20'
                              value: 1.1
                            interest:
                              date: '2019-07-20'
                              value: 1.1
                            discounts:
                              discount1:
                                date: '2020-07-01T00:00:00.000Z'
                                value: 15
                                type: '2'
                              discount2:
                                date: '2020-07-10T00:00:00.000Z'
                                value: 10
                                type: '2'
                              discount3:
                                date: '2020-07-15T00:00:00.000Z'
                                value: 5
                                type: '2'
                            guarantorDrawer:
                              documentType: 1
                              documentNumber: 26671395934
                              name: Tereza Silvana
                            ourNumber: string
                            ourNumberDigit: string
                            overdueDate: '2019-07-20'
                            description: string
                            issueDate: '2019-07-20'
                            barCode: '20898000000000001000001010000000003700451520'
                            digitableLine: '20890001091000000000937004515203800000000000100'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-payment-slip-bulk-pactualBatchId
      summary: Get payment slips by bulk Id
      description: This method is called to get a payment slip bulk by passing the bulks pactulBulkId as a parameter.
  /payment/payment-slip/sync/account/{accountId}:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipRequest'
        required: true
      tags:
        - Payment Slips
      parameters:
        - name: accountId
          description: 'The Account Id (Uuid) of Beneficiary. For example: {54c4ed21-5f1f-4942-a3f8-b96537566cb5}'
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipGetResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 100
                    body:
                      pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      clientRequestId: string
                      createTimestamp: string
                      lastUpdateTimestamp: string
                      entity: string
                      status: string
                      errorCode: string
                      errorDescription: string
                      tags:
                        - Warsupply
                        - Invoice_1234
                      body:
                        amount: 400000
                        dueDate: '2019-07-20T00:00:00.000Z'
                        customer:
                          name: Alex
                          taxId: '12345678910'
                          street: Av. Faria Lima, 0001
                          number: 13A
                          numberComplement: Sala 101 3 andar
                          neighborhood: Itaim Bibi
                          city: string
                          stateCode: string
                          zipCode: 12345678
                        fine:
                          date: '2019-07-20T00:00:00.000Z'
                          value: 1.1
                        interest:
                          date: '2019-07-20T00:00:00.000Z'
                          value: 1.1
                        discounts:
                          discount1:
                            date: '2020-07-01T00:00:00.000Z'
                            value: 15
                            type: '2'
                          discount2:
                            date: '2020-07-10T00:00:00.000Z'
                            value: 10
                            type: '2'
                          discount3:
                            date: '2020-07-15T00:00:00.000Z'
                            value: 5
                            type: '2'
                        overdueDate: '2019-07-20T00:00:00.000Z'
                        description: string
                        issueDate: '2019-07-20T00:00:00.000Z'
                        barCode: '20898000000000001000001010000000003700451520'
                        digitableLine: '20890001091000000000937004515203800000000000100'
                        ourNumber: string
                        ourNumberDigit: string
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-sync-account
      summary: Generate a payment slip for specific account (Sync)
      description: Synchronous API for processing payment slips to an specific account.
  /payment/payment-slip/utilities/{digitableLine}:
    get:
      tags:
        - Bills
      parameters:
        - name: digitableLine
          description: Identification digitable line of the slip.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipUtilitiesResponse'
              examples:
                Example:
                  value:
                    version: 1.2.5
                    status: 200
                    body:
                      type: utilities
                      assignor: LIGHT
                      segment: ENERGY BILL
                      state: RJ
                      amount: 38716
                      digitableLine: '836500000000001600531077589007190012100361364381'
                      settlementDate: '2022-06-21'
                      startTime: '07:00'
                      endTime: '22:00'
                      dueDate: '2022-06-21'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-payment-slip-utilities-digitableline
      summary: Get the information of a submitted Utilities Payment
      description: Use this endpoint in order to require the information of a submitted Utilities Payment by passing the payments digitable line.
  /payment/payment-slip/search:
    get:
      tags:
        - Payment Slips
      parameters:
        - name: tag
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            start:
              value: '0'
          name: start
          description: 'The position of first returned item. Default: 0.'
          schema:
            type: integer
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipSearchResponseBody'
          description: The search response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: payment-slip-search
      summary: Payment slip search (max 10,000 hits)
      description: Use to search your generated payment slips. (you cannot page through more than 10,000 hits. To page through more hits, use the /financial-transaction/search/to-scroll.)
  /payment/payment-slip/search/to-scroll:
    get:
      tags:
        - Payment Slips
      parameters:
        - name: tag
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipSearchResponseBody'
          description: The search response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: payment-slip-search-to-scroll
      summary: Payment slip search (only more then 10,000 hits)
      description: |-
        Use to search payment slip transactions. (use this operation to page through more than 10,000 hits. For less, use the /payment/payment-slip/search)

        After the search request, use scroll (/payment/payment-slip/search/scroll) to request the next batch of results. The time between each request must be less than 2 minutes.
  /payment/payment-slip/search/scroll:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScrollRequest'
      tags:
        - Payment Slips
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipSearchResponseBody'
          description: The search response.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: payment-slip-search-scroll
      summary: Next batch of results (Payment slip search)
      description: |-
        Retrieves the next batch of results of Payment slip search (/payment/payment-slip/search/to-scroll).

        The time between each request must be less than 2 minutes.

        The results that are returned from a scroll request reflect the state of the data at the time that the initial search request. Subsequent changes will only affect later search requests.        
  /payment/payment-slip/{pactualId}:
    get:
      tags:
        - Payment Slips
      parameters:
        - name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipGetResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 200
                    body:
                      pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      clientRequestId: string
                      createTimestamp: string
                      lastUpdateTimestamp: string
                      entity: string
                      status: string
                      errorCode: string
                      errorDescription: string
                      tags:
                        - Warsupply
                        - Invoice_1234
                      body:
                        amount: 400000
                        dueDate: '2019-07-20T00:00:00.000Z'
                        customer:
                          name: Alex
                          taxId: '12345678910'
                          street: Av. Faria Lima, 0001
                          number: 13A
                          numberComplement: Sala 101 3 andar
                          neighborhood: Itaim Bibi
                          city: string
                          stateCode: string
                          zipCode: 12345678
                        fine:
                          date: '2019-07-20T00:00:00.000Z'
                          value: 1.1
                        interest:
                          date: '2019-07-20T00:00:00.000Z'
                          value: 1.1
                        discounts:
                          discount1:
                            date: '2020-07-01T00:00:00.000Z'
                            value: 15
                            type: '2'
                          discount2:
                            date: '2020-07-10T00:00:00.000Z'
                            value: 10
                            type: '2'
                          discount3:
                            date: '2020-07-15T00:00:00.000Z'
                            value: 5
                            type: '2'
                        guarantorDrawer:
                          documentType: 1
                          documentNumber: 26671395934
                          name: Tereza Silvana
                        overdueDate: '2019-07-20T00:00:00.000Z'
                        description: string
                        issueDate: '2019-07-20T00:00:00.000Z'
                        barCode: '20898000000000001000001010000000003700451520'
                        digitableLine: '20890001091000000000937004515203800000000000100'
                        movementId: string
                        amountPaid: 400000
                        movementDate: '2019-07-14T00:00:00Z'
                        ourNumber: string
                        ourNumberDigit: string
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 202
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Internal Server Error
      security:
        - BaaSAuthorizer: []
      operationId: get-payment-slip-pactualId
      summary: Get a payment slip
      description: This method is called to get the information regarding a single payment slip by passing it's pactualId.
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipUpdateRequestBody'
            examples:
              Example:
                value:
                  description: string
                  amount: 0
                  dueDate: string
                  overdueDate: string
                  interest:
                    date: string
                    value: 0
                    code: AMOUNT_CALENDAR_DAYS
                  fine:
                    date: string
                    value: 0
                    code: FIXED_VALUE
                  clientRequestId: string
                  tags:
                    - string
        required: true
      tags:
        - Payment Slips
      parameters:
        - name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 200
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: payment-slip-update
      summary: Payment Slip Update
      description: Use this method to update an already issued payment slip by passing it's pactualId.
  /payment/payment-slip/pay:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayPaymentSlipRequest'
        required: true
      tags:
        - Bills
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-bar-code
      summary: Pay a Bill transaction
      description: |-
        Use this endpoint in order to submit a Bill payment to our API from your own application.

        All Consumer bills with a digitable line are accepted Utilities such as water, light, telephone etc... It is also possible to pay Payment-Slips through this method.

        The amount passed is optional, however, if none is passed, the value recovered with the digitable line is the one that is going to be used in the transaction.
  /payment/payment-slip/pay/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayPaymentSlipRequest'
        required: true
      tags:
        - Bills
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-bar-code-account
      summary: Pay a Bill transaction with a specific account
      description: |-
        Use this endpoint in order to submit a Bill payment to our API from your own application using a specific account. The chosen debit account is the one impacted with the bill payment.

        All Consumer bills with a digitable line are accepted Utilities such as water, light, telephone etc... It is also possible to pay Payment-Slips through this method.

        The amount passed is optional, however, if none is passed, the value recovered with the digitable line is the one that is going to be used in the transaction.
    parameters:
      - examples:
          AccountId:
            value: 54c4ed21-5f1f-4942-a3f8-b96537566cb5
        name: accountId
        description: The Account Id (Uuid) of Beneficiary.
        schema:
          type: string
        in: path
        required: true
  /payment/payment-slip/pay/sub-account:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayPaymentSlipSubAccountRequest'
        required: true
      tags:
        - Bills
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-pay-sub-account
      summary: Pay a Bill transaction with a sub-account
      description: |-
        Use this endpoint to send a bill payment debited from a sub-account. (This feature is used for specific cases and requires pre-configuration in baas)

        All Consumer bills with a digitable line are accepted Utilities such as water, light, telephone etc... It is also possible to pay Payment-Slips through this method.

        The amount passed is optional, however, if none is passed, the value recovered with the digitable line is the one that is going to be used in the transaction.
  /payment/payment-slip/pay/barcode:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipPayBarcodeRequestBody'
        required: true
      tags:
        - Bills
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 200
                    body:
                      clientRequestId: bb6fb4eb-xxxx-xxxx-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-xxxx-xxxx-a2b3-eba424f6dca4
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: paymentslip-pay-barcode
      summary: Pay a Bill with Barcode
      description: Pay a bill by passing the transaction barcode value in the requisition body.
  /payment/payment-slip/pay/barcode/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipPayBarcodeRequestBody'
        required: true
      tags:
        - Bills
      parameters:
        - examples:
            AccountId:
              value: 54c4ed21-5f1f-4942-a3f8-b96537566cb5
          name: accountId
          description: The Account Id (Uuid) of Beneficiary.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 200
                    body:
                      clientRequestId: bb6fb4eb-xxxx-xxxx-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-xxxx-xxxx-a2b3-eba424f6dca4
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: paymentslip-pay-barcode-specific-account
      summary: Pay a Bill with Barcode for a specific account
      description: Pay a bill by passing the transaction barcode value in the requisition body with a specific account.
  /payment/payment-slip/pay/barcode/sub-account:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PayPaymentSlipBarSubAccountRequest'
        required: true
      tags:
        - Bills
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 200
                    body:
                      clientRequestId: bb6fb4eb-xxxx-xxxx-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-xxxx-xxxx-a2b3-eba424f6dca4
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: paymentslip-pay-barcode-sub-account
      summary: Pay a Bill with Barcode for a sub-account
      description: Use this endpoint to send a bill payment by barcode debited from a sub-account. (This feature is used for specific cases and requires pre-configuration in baas)
  /payment/payment-slip/cancel/{pactualId}:
    delete:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipCancelRequestBody'
            examples:
              Example:
                value:
                  reasonDescription: string
                  reason: ERROR_ISSUED
                  clientRequestId: string
                  tags:
                    - string
        required: true
      tags:
        - Payment Slips
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: 3fa85f64-xxx-xxxx-xxxx-2c963f66afa6
                      status: string
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-payment-slip-cancel-pactualid
      summary: Cancel an issued payment Slip using the PactualId
      description: Use this method to cancel a an issued Payment Slip by passing the pactualId value in the request and the reason in the request body.
    parameters:
      - name: pactualId
        description: Unique resource Identifier (Uuid) generated by api.
        schema:
          type: string
        in: path
        required: true
  /payment/payment-slip/scheduler/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SchedulePaymentSlipPayRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: daf17267-f26d-43e5-baef-074bb67c95c8
                  tags:
                    - string
                  amount: 1000
                  digitableLine: XXX93130225083141459905006305204870010000002XXX
                  payer:
                    name: string
                    taxId: string
        required: true
      tags:
        - Bills
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-scheduler-payment-slip-account
      summary: Schedule the Payment of a Bill transaction with a specific account
      description: 'Use this endpoint in order to schedule a payment of a submitted Bill payment to our API from your own application using a specific account. '
    parameters:
      - examples:
          AccountId:
            value: 54c4ed21-5f1f-4942-a3f8-b96537566cb5
        name: accountId
        description: The Account Id (Uuid) of Beneficiary.
        schema:
          type: string
        in: path
        required: true
  /payment/payment-slip/scheduler/barcode/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloneOfSchedulePaymentSlipPayBarcodeRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: daf17267-f26d-43e5-baef-074bb67c95c8
                  tags:
                    - string
                  amount: 1000
                  barcode: XXX931302250831414599050063005006305204870010000002XXX
                  payer:
                    name: string
                    taxId: string
        required: true
      tags:
        - Bills
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-scheduler-payment-slip-account-barcode
      summary: Schedule the Payment of a Bill transaction with a specific account and barcode value
      description: 'Use this endpoint in order to schedule a payment of a submitted Bill payment to our API from your own application using a specific account and it''s barcode value. '
    parameters:
      - examples:
          AccountId:
            value: 54c4ed21-5f1f-4942-a3f8-b96537566cb5
        name: accountId
        description: The Account Id (Uuid) of Beneficiary.
        schema:
          type: string
        in: path
        required: true
  /payment/payment-slip/scheduler/cancel/{pactualId}:
    delete:
      tags:
        - Bills
      parameters:
        - examples:
            Guid:
              value: '"6d294b8e-7c1a-44e1-9300-304e731e867c"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                DeleteExample:
                  value:
                    version: 1.0.0
                    status: 200
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: delete-scheduler-payment-slip
      summary: Cancel schedule the Payment of a Bill transaction
      description: Use this endpoint in order to cancel schedule a payment of a submitted Bill payment to our API from your own application.
    parameters:
      - name: pactualId
        schema:
          type: string
        in: path
        required: true
  /payment/payment-slip/scheduler/pactualId/{pactualId}:
    get:
      tags:
        - Bills
      parameters:
        - examples:
            Guid:
              value: '"f7b6db6a-f202-4de0-abeb-c6d2fe3f0334"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchedulerResponseBody'
              examples:
                response:
                  value:
                    version: 1.8.0
                    status: 200
                    body:
                      accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                      scheduleDate: '2022-03-29'
                      scheduleDateTime: '2022-03-29T10:00:00+00:00'
                      pactualId: b0da44eb-8b06-46d5-8a21-5a4c834bfa03
                      clientRequestId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                      createTimestamp: '2022-03-28T20:03:05.3795102+00:00'
                      lastUpdateTimestamp: '2022-03-28T20:03:05.3795708+00:00'
                      entity: FinancialScheduler
                      status: PENDING
                      body:
                        amount: 80006
                        digitableLine: '03399201595100028823681904501020389370000080006'
                        financialType: PaymentSlip
                      tags:
                        - test
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-scheduler-payment-slip
      summary: Get schedule the Payment of a Bill transaction
      description: Use this endpoint in order to get schedule a payment of a submitted Bill payment to our API from your own application.
  /payment/payment-slip/bank-slip/client-request-id/{clientRequestId}:
    get:
      tags:
        - Bills
      parameters:
        - examples:
            cid:
              value: ee9e1720-c9d4-441b-b1de-e0c07504454e
          name: clientRequestId
          description: The unique transaction identification given by the client side.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankSliClientRequestIdResponse'
              examples:
                Example:
                  value:
                    version: 1.6.1
                    status: 200
                    body:
                      status: CONFIRMED
                      pactualId: xxxxxxxx-4034-4d1a-9f06-e29a8e805491
                      amount: 12389
                      digitableLine: xxxxxxxx247086023000500000000000287670000012389
                      authentication: xxxxxxxx1b8846abbd3064ca7b180b6b
                      consumer: BAAS
                      issuer: BANK ABC
                      receiverBankCode: 208
                      dueDate: '20211008'
                      fine: 0
                      discount: 0
                      interest: 0
                      paymentDate: '20211207'
                      beneficiary:
                        name: BANK ABC
                        taxId: XXXXXX90000104
                      accountInformation:
                        accountType: CC
                        personType: F
                        taxId: XXXX3440704
                        account: 32161
                        cge: 0
                        branch: 20
                        bank: 208
                        name: John Doe
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-payment-slip-bank-slip-client-request-id
      summary: Get a Bill transaction using the Client Request Id
      description: Use this endpoint access the information of a valid bill payment by passing the payments Client Request Id.
  /topup/providers:
    get:
      tags:
        - Top Up
      parameters:
        - name: category
          description: "PHONE, GAMES, TV, TRANSPORT, DIGITAL_CONTENT\r\n\r\n> The Enum string values are NOT case sensitive. "
          schema:
            enum:
              - PHONE
              - GAMES
              - TV
              - TRANSPORT
              - DIGITAL_CONTENT
            type: string
          in: query
          required: false
        - name: stateCode
          description: ''
          schema:
            type: integer
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopupProvidersResponse'
              examples:
                Example:
                  value:
                    version: 1.0.3
                    status: 200
                    body:
                      providers:
                        - name: Bilhete unico
                          providerId: 2142
                          category: TRANSPORT
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-topup-providers
      summary: Get Top Up Providers
      description: |-
        Retrieves the providers filtered by category and state code.

        > If the category query parameter is not sent, all available topup providers from all categories are returned.
  /topup/products/{providerId}:
    get:
      tags:
        - Top Up
      parameters:
        - name: stateCode
          description: ''
          schema:
            type: integer
          in: query
        - name: providerId
          schema:
            type: string
          in: path
          required: true
        - name: clientIdentification
          description: ''
          schema:
            format: int32
            type: integer
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopupProvidersResponse'
              examples:
                Example:
                  value:
                    version: 1.0.3
                    status: 200
                    body:
                      products:
                        - maxValue: 3500
                          minValue: 3500
                          productName: ''
                          quotaValue: 3500
                        - maxValue: 5000
                          minValue: 5000
                          productName: ''
                          quotaValue: 5000
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-topup-providers-products
      summary: Get Top Up Providers Products
      description: |-
        Retrieves the providers filtered by category and state code.

        > The clientIdentification query parameter is required if the provider belongs to 4 = TRANSPORT category. If the clientIdentification is not sent or is invalid, it will return a 404 error saying that the provider was not found (transport providers only).
  /topup/pay/phone:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpPhonePayRequest'
        required: true
      tags:
        - Top Up
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-topup-phone
      summary: Phone Top Up
      description: Sends a request to make a Phone top up.
  /topup/pay/signature:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpSignaturePayRequest'
        required: true
      tags:
        - Top Up
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-topup-signature
      summary: Signature Top Up
      description: 'Sends a request to make a signature topup. Use this endpoint to make top up signatures to provider with the following options: 2 = Games, 3 = TV and 5 = Digital Content categories.'
  /topup/pay/phone/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpPhonePayRequest'
        required: true
      tags:
        - Top Up
      parameters:
        - name: accountId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-topup-phone-specific-account
      summary: Phone Top Up to a Specific Account
      description: Sends a request to make a Phone Topup to a specific accountId, the account must belong to the same ClientId on the Bearer Token used on the request, otherwise there will be a validation error.
  /topup/pay/signature/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpSignaturePayRequest'
        required: true
      tags:
        - Top Up
      parameters:
        - name: accountId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-topup-signature-specific-account
      summary: Signature Top Up to a Specific Account
      description: 'Sends a request to make a signature topup to a specific account. Use this endpoint to make top up signatures to provider with the following options: 2 = Games, 3 = TV and 5 = Digital Content categories.'
  /topup/pay/phone/sub-account:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpPhonePaySubAccountRequest'
        required: true
      tags:
        - Top Up
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-topup-phone-sub-account
      summary: Phone Top Up with sub-account
      description: Sends a request to make a Phone top up debited from a sub-account. (This feature is used for specific cases and requires pre-configuration in baas).
  /topup/pay/signature/sub-account:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TopUpSignaturePaySubAccountRequest'
        required: true
      tags:
        - Top Up
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-topup-signature-sub-account
      summary: Signature Top Up with sub-account
      description: 'Sends a request to make a signature topup debited from a sub-account. (This feature is used for specific cases and requires pre-configuration in baas). Use this endpoint to make top up signatures to provider with the following options: 2 = Games, 3 = TV and 5 = Digital Content categories.'
  /topup/{pactualId}:
    get:
      tags:
        - Top Up
      parameters:
        - name: pactualId
          description: ''
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopupResponse'
              examples:
                Example:
                  value:
                    version: 1.0.3
                    status: 200
                    body:
                      pactualId: ce0063ae-d12a-49e7-87dd-ba4b21235c09
                      clientRequestId: 1a700b8c-f376-4b60-9416-07beeecb2c81
                      createTimestamp: '2020-09-14T18:20:11.2837151+00:00'
                      lastUpdateTimestamp: '2020-09-14T18:20:31.6359848+00:00'
                      entity: Topup
                      status: CONFIRMED
                      errorCode: ''
                      errorDescription: ''
                      body:
                        origin: BAAS
                        topupDetail:
                          code: 0
                          qtyTopup: 0
                          provider:
                            name: Claro
                            providerId: 1187
                            category: PHONE
                          topupPhone:
                            stateCode: 11
                            countryCode: 55
                            number: 332655638
                          amount: 1500
                        accountInformation:
                          accountId: 1319434a1-6da7-4748-9d09-6849f4b372c6
                          clientId: 1a722b8c-f377-4b60-9416-07beeecb2c81
                          account: 37466109
                          branch: 30
                          bank: 208
                          taxId: 946138660188
                          name: PARTNERS LTDA
                          personType: J
                          accountType: CC
                          status: CREATED
                          bankBranchAccount: '208_30_37480109'
                          createTimestamp: '2020-09-01T18:50:56.9472357+00:00'
                          lastUpdateTimestamp: '2020-09-01T18:50:56.9472465+00:00'
                          beneficiaryTreatyCode: 7324397876994911
                          beneficiaryMarketTreatyCode: '01'
                          defaultAccount: true
                          markups:
                            - SLC0001
                            - aliasbank
                      tags: []
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbiden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-topup
      summary: Get Top Up
      description: Retrieves the top up associated with the given pactualId.
  /transfer/external:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
            examples:
              Example:
                value:
                  clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
                  branchFrom: 20
                  accountFrom: 340475
                  bankTo: 237
                  branchTo: 1
                  accountTo: 288761
                  taxIdTo: '43985916000150'
                  nameTo: ABC Fund
                  amount: 50000
                  accountTypeTo: CC
        required: true
      tags:
        - External Transfers
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: '1.0'
                    status: 202
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-transfer-external
      summary: Process a transfer to external account
      description: This method is called to send individual instances of external payments to be processed by our infrastructure.
  /transfer/external/{pactualId}:
    get:
      tags:
        - External Transfers
      parameters:
        - examples:
            PID:
              value: 0378dce3-36e9-4dd7-9581-d40212a0909b
          name: pactualId
          description: Unique resource identificator (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessTransferResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 200
                    body:
                      pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      clientRequestId: string
                      createTimestamp: string
                      lastUpdateTimestamp: string
                      entity: string
                      status: string
                      errorCode: string
                      errorDescription: string
                      body:
                        movementId: string
                        amount: 0
                        debitParty:
                          bank: 0
                          branch: 0
                          account: 0
                          name: string
                          taxId: string
                          personType: 0
                          accountType: 0
                        creditParty:
                          bank: 0
                          branch: 0
                          account: 0
                          name: string
                          taxId: string
                          personType: 0
                          accountType: 0
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-transfer-external-pactualId
      summary: Get a external transfer
      description: This method is called to get a single external payment instance by passing the pactualId of the target payment as a parameter.
  /transfer/external/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PaymentRequest'
            examples:
              Example:
                value:
                  - clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
                    branchFrom: 20
                    accountFrom: 340475
                    bankTo: 237
                    branchTo: 1
                    accountTo: 288761
                    taxIdTo: '43985916000150'
                    nameTo: ABC Fund
                    amount: 50000
                    accountTypeTo: CC
        required: true
      tags:
        - External Transfers
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 202
                    body:
                      pactualBatchId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      items:
                        - clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                          pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-transfer-external-bulk
      summary: Process multiple transfers to external accounts (Bulk)
      description: |-
        This method is called when sending multiple instances of external payment to be processed by our infrastructure.
        The maximum number of payment slips that can be created in the same request is 25.
  /transfer/external/bulk/{pactualBulkId}:
    get:
      tags:
        - External Transfers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialMovementGetBulkResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 100
                    body:
                      pactualBatchId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      items:
                        - pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                          clientRequestId: string
                          createTimestamp: string
                          lastUpdateTimestamp: string
                          entity: string
                          status: string
                          errorCode: string
                          errorDescription: string
                          body:
                            movementId: string
                            amount: 0
                            debitParty:
                              bank: 0
                              branch: 0
                              account: 0
                              name: string
                              taxId: string
                              personType: 0
                              accountType: 0
                            creditParty:
                              bank: 0
                              branch: 0
                              account: 0
                              name: string
                              taxId: string
                              personType: 0
                              accountType: 0
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-transfer-externa-bulkl-pactualBatchId
      summary: Get many external transfers by bulk Id
      description: This method is called to get a bulk of external transfers by passing the pactualBulkId of the needed transfer bulk.
    parameters:
      - examples:
          PID:
            value: 0378dce3-36e9-4dd7-9581-d40212a0909b
        name: pactualBulkId
        description: Unique resource identificator (Uuid) generated by api.
        schema:
          type: string
        in: path
        required: true
  /transfer/external/alias:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
            examples:
              Example:
                value:
                  clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
                  branchFrom: 20
                  accountFrom: 340475
                  bankTo: 237
                  branchTo: 1
                  accountTo: 288761
                  taxIdTo: '43985916000150'
                  nameTo: ABC Fund
                  amount: 50000
                  accountTypeTo: CC
        required: true
      tags:
        - External Transfers
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: '1.0'
                    status: 202
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-transfer-external-alias
      summary: Process a transfer to external account verified by a third party
      description: This method is called in case the validation of an instance of external payment needs to be done by a third party infrastructure. This process is called as "Alias Bank".
  /transfer/external/destination-validate:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentRequest'
            examples:
              Example:
                value:
                  clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
                  branchFrom: 20
                  accountFrom: 340475
                  bankTo: 237
                  branchTo: 1
                  accountTo: 288761
                  taxIdTo: '43985916000150'
                  nameTo: ABC Fund
                  amount: 50000
                  accountTypeTo: CC
        required: true
      tags:
        - External Transfers
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: '1.0'
                    status: 202
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-transfer-external-validate
      summary: Process a external transfer to validated destination account
      description: This method is called to send external transfers to validate the destination account.
  /transfer/external/search:
    get:
      tags:
        - External Transfers
      parameters:
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            start:
              value: '0'
          name: start
          description: 'The position of first returned item. Default: 0.'
          schema:
            type: integer
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - name: tag
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          $ref: '#/components/responses/SuccessTransferSearchResponse'
      security:
        - BaaSAuthorizer: []
      operationId: external-transfer-search
      summary: External transfer search (max 10,000 hits)
      description: 'Use to search your generated external transfers. (you cannot page through more than 10,000 hits. To page through more hits, use the /transfer/external/search/to-scroll.)    '
  /transfer/external/search/to-scroll:
    get:
      tags:
        - External Transfers
      parameters:
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - name: tag
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          $ref: '#/components/responses/SuccessTransferSearchResponse'
      security:
        - BaaSAuthorizer: []
      operationId: external-transfer-search-to-scroll
      summary: External transfer search (only more then 10,000 hits)
      description: |-
        Use to search your generated external transfers. (use this operation to page through more than 10,000 hits. For less, use the /transfer/external/search)

        After the search request, use scroll (/transfer/external/search/scroll) to request the next batch of results. The time between each request must be less than 2 minutes.    
  /transfer/external/search/scroll:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScrollRequest'
      tags:
        - External Transfers
      responses:
        '200':
          $ref: '#/components/responses/SuccessTransferSearchResponse'
      security:
        - BaaSAuthorizer: []
      operationId: external-transfer-search-scroll
      summary: Next batch of results (External transfer search)
      description: |-
        Retrieves the next batch of results of External transfer search (/transfer/external/search/to-scroll).

        The time between each request must be less than 2 minutes.

        The results that are returned from a scroll request reflect the state of the data at the time that the initial search request. Subsequent changes will only affect later search requests.          
  /transfer/internal:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
            examples:
              Example:
                value:
                  clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
                  branchFrom: 20
                  accountFrom: 340475
                  branchTo: 1
                  accountTo: 288761
                  amount: 50000
      tags:
        - Internal Transfers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 202
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-transfer-internal
      summary: Process a transfer to internal account
      description: This method is called to send a single instance of internal tranfer to be processed by our infrastructure.
  /transfer/internal/{pactualId}:
    get:
      tags:
        - Internal Transfers
      parameters:
        - name: pactualId
          description: Unique resource identificator (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessTransferResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 100
                    body:
                      pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      clientRequestId: string
                      createTimestamp: string
                      lastUpdateTimestamp: string
                      entity: string
                      status: string
                      errorCode: string
                      errorDescription: string
                      body:
                        movementId: string
                        amount: 0
                        debitParty:
                          bank: 0
                          branch: 0
                          account: 0
                          name: string
                          taxId: string
                          personType: 0
                          accountType: 0
                        creditParty:
                          bank: 0
                          branch: 0
                          account: 0
                          name: string
                          taxId: string
                          personType: 0
                          accountType: 0
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-transfer-internal-pactualId
      summary: Get a internal transfer
      description: This method is called to get an instance of internal transfer by passing the transfers pactualId.
  /transfer/internal/bulk:
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/TransferRequest'
            examples:
              Example:
                value:
                  - clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
                    branchFrom: 20
                    accountFrom: 340475
                    branchTo: 1
                    accountTo: 288761
                    amount: 50000
      tags:
        - Internal Transfers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
              examples:
                Example:
                  value:
                    version: string
                    status: 202
                    body:
                      pactualBatchId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      items:
                        - clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                          pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-transfers-internal-bulk
      summary: Process many transfers to internal accounts (Bulk)
      description: |-
        This method is called to send multiple instances of internal transfer to be processed by our infrastructure.
        The maximum number of transfer slips that can be created in the same request is 25.
  /transfer/internal/bulk/{pactualBulkId}:
    get:
      tags:
        - Internal Transfers
      parameters:
        - examples:
            PID:
              value: 0378dce3-36e9-4dd7-9581-d40212a0909b
          name: pactualBulkId
          description: Unique resource identificator (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FinancialMovementGetBulkResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 100
                    body:
                      pactualBatchId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      items:
                        - pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                          clientRequestId: string
                          createTimestamp: string
                          lastUpdateTimestamp: string
                          entity: string
                          status: string
                          errorCode: string
                          errorDescription: string
                          body:
                            movementId: string
                            amount: 0
                            debitParty:
                              bank: 0
                              branch: 0
                              account: 0
                              name: string
                              taxId: string
                              personType: 0
                              accountType: 0
                            creditParty:
                              bank: 0
                              branch: 0
                              account: 0
                              name: string
                              taxId: string
                              personType: 0
                              accountType: 0
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-transfer-internal-bulk-pactualBatchId
      summary: Get multiple internal transfers with the  bulk Id
      description: This method is called to get an internal tranfer bulk by passing the trasfers pactualBulkId as a request parameter.
  /transfer/internal/destination-validate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
            examples:
              Example:
                value:
                  clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
                  branchFrom: 20
                  accountFrom: 340475
                  branchTo: 1
                  accountTo: 288761
                  amount: 50000
      tags:
        - Internal Transfers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 202
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-transfer-internal-validate
      summary: Process a internal transfer to validated destination account
      description: This method is called to send internal transfers to validate the destination account.
  /transfer/internal/search:
    get:
      tags:
        - Internal Transfers
      parameters:
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            start:
              value: '0'
          name: start
          description: 'The position of first returned item. Default: 0.'
          schema:
            type: integer
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - name: tag
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          $ref: '#/components/responses/SuccessTransferSearchResponse'
      security:
        - BaaSAuthorizer: []
      operationId: internal-transfer-search
      summary: Internal transfer search (max 10,000 hits)
      description: 'Use to search your generated internal transfers. (you cannot page through more than 10,000 hits. To page through more hits, use the /transfer/internal/search/to-scroll.)      '
  /transfer/internal/search/to-scroll:
    get:
      tags:
        - Internal Transfers
      parameters:
        - examples:
            sortBy:
              value: lastUpdateTimestamp
          name: sortBy
          description: 'The field to use to sort the items. Default: createTimestamp.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateFrom
          description: 'Filter resources created from this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            date:
              value: '2020-02-01T00:00:00.000Z'
            dateAndTime:
              value: '2020-02-01T10:00:00.000Z'
          name: dateTo
          description: 'Filter resources created up to this date. Acceptable formats: yyyy-MM-dd or yyyy-MM-ddTHHH:mm-ss. All date and times are save in UTC.'
          schema:
            type: string
          in: query
        - examples:
            limit:
              value: '20'
          name: limit
          description: 'The number of total returned items. Default: 10. Max: 100.'
          schema:
            type: integer
          in: query
        - examples:
            status:
              value: CONFIRMED
          name: status
          description: Status to filter. Can be repeated.
          schema:
            type: string
          in: query
        - name: tag
          description: Tag to filter. Can be repeated.
          schema:
            type: string
          in: query
        - examples:
            dateTimeField:
              value: createTimestamp
          name: dateTimeField
          description: 'The field to use to filter the items by date time. The value must be "createTimestamp" or "lastUpdateTimestamp". Default: createTimestamp.'
          schema:
            type: string
          in: query
      responses:
        '200':
          $ref: '#/components/responses/SuccessTransferSearchResponse'
      security:
        - BaaSAuthorizer: []
      operationId: internal-transfer-search-to-scroll
      summary: Internal transfer search (only more then 10,000 hits)
      description: |-
        Use to search your generated internal transfers. (use this operation to page through more than 10,000 hits. For less, use the /transfer/internal/search)

        After the search request, use scroll (/transfer/internal/search/scroll) to request the next batch of results. The time between each request must be less than 2 minutes.    
  /transfer/internal/search/scroll:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScrollRequest'
      tags:
        - Internal Transfers
      responses:
        '200':
          $ref: '#/components/responses/SuccessTransferSearchResponse'
      security:
        - BaaSAuthorizer: []
      operationId: internal-transfer-search-scroll
      summary: Next batch of results (Internal transfer search)
      description: |-
        Retrieves the next batch of results of Internal transfer search (/transfer/internal/search/to-scroll).

        The time between each request must be less than 2 minutes.

        The results that are returned from a scroll request reflect the state of the data at the time that the initial search request. Subsequent changes will only affect later search requests.          
  /transfer/generic:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericTransferRequest'
        required: true
      tags:
        - Generic Transfers
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: '1.0'
                    status: 202
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-transfer-generic
      summary: Process a generic transfer
      description: This method sends a generic transfer with a specific processing code. Allowed processing codes can be listed in '/transfer/generic/processingCode', if you need another one, please ask BTG Pactual BaaS Operational Support.
  /transfer/generic/sub-account:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericTransferSubAccountRequest'
        required: true
      tags:
        - Generic Transfers
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: '1.0'
                    status: 202
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-transfer-generic-sub-account
      summary: Process a generic transfer with a sub-account
      description: This method sends a generic transfer with a specific processing code debited from a sub-account (This feature is used for specific cases and requires pre-configuration in baas). Allowed processing codes can be listed in '/transfer/generic/processingCode', if you need another one, please ask BTG Pactual BaaS Operational Support.
  /transfer/generic/{pactualId}:
    get:
      tags:
        - Generic Transfers
      parameters:
        - examples:
            PID:
              value: 0378dce3-36e9-4dd7-9581-d40212a0909b
          name: pactualId
          description: Unique resource identificator (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTransferResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-transfer-generic-pactualId
      summary: Get a generic transfer (by PactualId)
      description: This method is called to get a generic transfer by pactualId parameter.
  /transfer/generic/clientRequestId/{clientRequestId}:
    get:
      tags:
        - Generic Transfers
      parameters:
        - name: clientRequestId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericTransferResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-transfer-generic-clientRequestId
      summary: Get a generic transfer  (by ClientRequestId)
      description: This method is called to get a generic transfer by clientRequestId parameter.
  /transfer/generic/processingCode:
    get:
      tags:
        - Generic Transfers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProcessingCodeResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-transfer-generic-list-processingCode
      summary: Get all Processing Codes Information
      description: This method is called to get all Processing Codes Information.
  /transfer/generic/processingCode/{processingCode}:
    get:
      tags:
        - Generic Transfers
      parameters:
        - name: processingCode
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProcessingCodeResponse'
          description: OK
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-transfer-generic-processingCode
      summary: Get a Processing Code Information
      description: This method is called to get a Processing Code Information.
  /foreign-exchange/{pactualId}:
    get:
      tags:
        - Foreign Exchange Quotes
      parameters:
        - name: pactualId
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFxResponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: XXXXXXXX-9d90-4079-a9aa-2667b115ed53
                      clientRequestId: XXXXXXXX-a7f0-4559-82eb-5be5e2413cd6
                      createTimestamp: '2021-03-23T00:48:24.7533535+00:00'
                      lastUpdateTimestamp: '2021-03-23T00:48:57.8618332+00:00'
                      entity: ForeignExchange
                      status: ACCEPTED
                      body:
                        unitPrice: 5.6163
                        total: 61.77
                        expirationDate: '2021-03-23T00:50:23.9312113Z'
                        quoteTimestamp: '2021-03-23T00:48:24.5476711Z'
                        acceptTimestamp: '2021-03-23T00:48:57.319629Z'
                        operationSide: BUY
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-22T00:00:00Z'
                        baseCurrencySettlementDate: '2021-03-22T00:00:00Z'
                        bankingChannelId: XXXXXXXX-1679-4bff-9179-488405545b90
                        accountId: XXXXXXXX-6da7-4748-9d09-6849f4b372c6
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: fx-get-trade
      summary: Get FX trade
      description: Endpoint used to get a previously created quote/trade.
  /foreign-exchange/accept/{pactualId}:
    post:
      tags:
        - Foreign Exchange Quotes
      parameters:
        - name: pactualId
          description: PactualId from a previous created quote
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxAcceptQuoteResponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 3e36289d-a95a-4558-9b58-82b42a32a034
                      operationDateTime: '2024-07-23T16:23:33.6047326+00:00'
                      pactualBulkId: 59469018-f0ee-54ee-decc-add8039f51ca
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-accept-quote
      summary: Accept Quote
      description: Endpoint used to accept quotes for currency exchanges trades.
  /banking-channel/new:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewBankingChannelRequestBody'
            examples:
              Example:
                value:
                  nature:
                    codeOperationNature: '37217'
                    clientNature: '00'
                    avalNature: 0
                    payerNature: '00'
                    groupNature: '10'
                    relationshipNature: '10'
                  beneficiary:
                    name: First Test
                    countryId: BR
                  beneficiaryAccount:
                    accountNumber: '12345678'
                    currencyId: USD
                    countryId: US
                    expenseId: OUR
                  beneficiaryBank:
                    name: BTG PACTUAL SA
                    swiftCode: BPABBRRJ
                  link: 20
        required: true
      tags:
        - Foreign Exchange Banking Channel
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NewBankingChannelResponse'
              examples:
                Example:
                  value: "{\r\n{\r\n\"version\": \"0.1.0\",\r\n\"status\": 200,\r\n\"body\": {\r\n\"beneficiaryId\": \"aa9ce499242349d28c4facf5015555c8\"\r\n}\r\n}"
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-banking-channel-new
      summary: New Banking Channel
      description: Endpoint used to create a bankingChannel
  /tax/darf/pay/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DarfPayment'
        required: true
      tags:
        - DARF
      parameters:
        - examples:
            AccountId:
              value: ca4e04db-c9ed-45e7-8af5-09cbe0869947
          name: accountId
          description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-tax-payment-darf-account
      summary: Pay a tax DARF transaction with a specific account
      description: ''
    parameters:
      - name: accountId
        schema:
          type: string
        in: path
        required: true
  /tax/gru/pay/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GruPayment'
        required: true
      tags:
        - GRU
      parameters:
        - examples:
            AccountId:
              value: ca4e04db-c9ed-45e7-8af5-09cbe0869947
          name: accountId
          description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-tax-payment-gru-account
      summary: Pay a tax GRU transaction with a specific account
      description: ''
    parameters:
      - name: accountId
        schema:
          type: string
        in: path
        required: true
  /tax/gps/pay/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GpsPayment'
        required: true
      tags:
        - GPS
      parameters:
        - examples:
            AccountId:
              value: ca4e04db-c9ed-45e7-8af5-09cbe0869947
          name: accountId
          description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-tax-payment-gps-account
      summary: Pay a tax GPS transaction with a specific account
      description: ''
    parameters:
      - name: accountId
        schema:
          type: string
        in: path
        required: true
  /tax/darf/pay/sub-account:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DarfPaymentSubAccount'
        required: true
      tags:
        - DARF
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-tax-payment-darf-sub-account
      summary: Pay a tax DARF transaction with sub-account
      description: Use this endpoint to pay a tax DARF debited from a sub-account. (This feature is used for specific cases and requires pre-configuration in baas)
  /tax/gru/pay/sub-account:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GruPaymentSubAccount'
        required: true
      tags:
        - GRU
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-tax-payment-gru-sub-account
      summary: Pay a tax GRU transaction with sub-account
      description: Use this endpoint to pay a tax GRU debited from a sub-account. (This feature is used for specific cases and requires pre-configuration in baas)
  /tax/gps/pay/sub-account:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GpsPaymentSubAccount'
        required: true
      tags:
        - GPS
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-tax-payment-gps-sub-account
      summary: Pay a tax GPS transaction with sub-account
      description: Use this endpoint to pay a tax GPS debited from a sub-account. (This feature is used for specific cases and requires pre-configuration in baas)
  /tax/darf/{pactualId}:
    get:
      tags:
        - DARF
      parameters:
        - examples:
            PactualIdExample:
              value: '"53d837b1-f720-4190-9bc3-e356cd36756a"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DarfResponse'
              examples:
                DarfResponse:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      debitParty:
                        account: '5468327'
                        bank: '208'
                        branch: '30'
                        personType: J
                        taxId: '37880206000163'
                        accountType: CC
                        name: CORA SOCIEDADE DE CR�DITO DIRETO S/A
                      type: DARF
                      darfContent:
                        treasuryRevenueCode: TRC_6015
                        personType: F
                        taxId: '34687115810'
                        fineAmount: 0
                        name: Felipe Cardoso Garcia
                        interestAmount: 0
                        type: 'N'
                        dueDate: '2021-12-30'
                        mainAmount: 1500
                        referenceDate: '2021-11-30'
                      status: PAID
                      pactualId: 95658a65-d993-4498-9f2e-449cc36aec70
                      internalDescription: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0017R2 NR.OPERACAO 30306294202112167248250
                      treasuryResponse:
                        MessageCode: TES0020
                        History: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0017R2 NR.OPERACAO 30306294202112167248250
                        TreasuryDateTime: '2021-12-16T10:35:15'
                        TreasuryControlNumber: TES20211216106520574
                        TreasuryDocumentNumber: 0574TES22002021DF193604
          description: This method returns all payments slip active for an especfic tax identification.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-tax-darf
      summary: Get tax DARF transaction by pactualId
      description: ''
  /tax/gps/{pactualId}:
    get:
      tags:
        - GPS
      parameters:
        - examples:
            PactualIdExample:
              value: '"53d837b1-f720-4190-9bc3-e356cd36756a"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GpsResponse'
              examples:
                GpsResponse:
                  value:
                    version: 1.0.2
                    status: 200
                    body:
                      debitParty:
                        account: '6521458'
                        bank: '208'
                        branch: '30'
                        personType: J
                        taxId: '62086997000100'
                        accountType: CC
                        name: Miguel e Aurora Telecom ME
                      type: GPS
                      gpsContent:
                        anotherEntityAmount: 0
                        chargeAmount: 0
                        competenceDate: 202204
                        gpsCode: CODE_4308
                        inssAmount: 54265
                        name: Norte Produções em Comunicação LTDA
                        taxPayerIdentificationType: PIS
                        taxPayerIdentifier: '16849154000192'
                      movementId: '986452154'
                      status: PAID
                      pactualId: 5c93e235-c1f9-4c0a-bed3-3759be0cdb4d
                      internalDescription: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0018R2 NR.OPERACAO 65214524789654125478546
                      treasuryResponse:
                        MessageCode: TES0020
                        History: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0018R2 NR.OPERACAO 65214524789654125478546
                        TreasuryDateTime: '2022-04-25T13:10:30'
                        TreasuryControlNumber: TES13213215563156482
                        TreasuryDocumentNumber: 6543TES85462125GP542658
          description: This method returns all payments slip active for an especfic tax identification.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-tax-gps
      summary: Get tax GPS transaction by pactualId
      description: ''
  /tax/gru/{pactualId}:
    get:
      tags:
        - GRU
      parameters:
        - examples:
            PactualIdExample:
              value: '"53d837b1-f720-4190-9bc3-e356cd36756a"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GruResponse'
              examples:
                GRUResponse:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      debitParty:
                        account: '42161'
                        bank: '208'
                        branch: '20'
                        personType: F
                        taxId: 7693440704
                        accountType: CC
                        name: Davi Ferreira de Sousa
                      type: GRU
                      gruContent:
                        description: Teste Cristiano 1
                        discountAmount: 56
                        dueDate: '2021-08-12'
                        fineAmount: 55
                        gruReferenceNumber: '55242'
                        history: a bc
                        interestAmount: 54
                        mainAmount: 1000
                        managingUnitCode: '10'
                        name: Cristiano
                        otherAddedAmount: 5
                        otherDiscountAmount: 50
                        personType: F
                        taxId: 5168329721
                        treasureCollectionCode: TCC_10018
                        yearMonth13Competency: 202101
                      status: PROCESSING
                      pactualId: cd1b52c9-bb4a-414b-a285-03ab030b3383
                      internalDescription: ''
          description: This method returns all payments slip active for an especfic tax identification.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-tax-gru
      summary: Get tax GRU transaction by pactualId
      description: ''
  /tax/darf/client-request-id/{clientRequestId}:
    get:
      tags:
        - DARF
      parameters:
        - name: clientRequestId
          description: Unique identifier provided by the client. Can be used in response corelation.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DarfResponse'
              examples:
                DarfResponse:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      debitParty:
                        account: '5468327'
                        bank: '208'
                        branch: '30'
                        personType: J
                        taxId: '37880206000163'
                        accountType: CC
                        name: CORA SOCIEDADE DE CR�DITO DIRETO S/A
                      type: DARF
                      darfContent:
                        treasuryRevenueCode: TRC_6015
                        personType: F
                        taxId: '34687115810'
                        fineAmount: 0
                        name: Felipe Cardoso Garcia
                        interestAmount: 0
                        type: 'N'
                        dueDate: '2021-12-30'
                        mainAmount: 1500
                        referenceDate: '2021-11-30'
                      status: PAID
                      pactualId: 95658a65-d993-4498-9f2e-449cc36aec70
                      internalDescription: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0017R2 NR.OPERACAO 30306294202112167248250
                      treasuryResponse:
                        MessageCode: TES0020
                        History: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0017R2 NR.OPERACAO 30306294202112167248250
                        TreasuryDateTime: '2021-12-16T10:35:15'
                        TreasuryControlNumber: TES20211216106520574
                        TreasuryDocumentNumber: 0574TES22002021DF193604
          description: This method returns all payments slip active for an especfic tax identification.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-tax-darf-clientRequestId
      summary: Get tax DARF transaction by clientRequestId
      description: ''
  /tax/gps/client-request-id/{clientRequestId}:
    get:
      tags:
        - GPS
      parameters:
        - name: clientRequestId
          description: Unique identifier provided by the client. Can be used in response corelation.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GpsResponse'
              examples:
                GpsResponse:
                  value:
                    version: 1.0.2
                    status: 200
                    body:
                      debitParty:
                        account: '6521458'
                        bank: '208'
                        branch: '30'
                        personType: J
                        taxId: '62086997000100'
                        accountType: CC
                        name: Miguel e Aurora Telecom ME
                      type: GPS
                      gpsContent:
                        anotherEntityAmount: 0
                        chargeAmount: 0
                        competenceDate: 202204
                        gpsCode: CODE_4308
                        inssAmount: 54265
                        name: Norte Produções em Comunicação LTDA
                        taxPayerIdentificationType: PIS
                        taxPayerIdentifier: '16849154000192'
                      movementId: '986452154'
                      status: PAID
                      pactualId: 5c93e235-c1f9-4c0a-bed3-3759be0cdb4d
                      internalDescription: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0018R2 NR.OPERACAO 65214524789654125478546
                      treasuryResponse:
                        MessageCode: TES0020
                        History: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0018R2 NR.OPERACAO 65214524789654125478546
                        TreasuryDateTime: '2022-04-25T13:10:30'
                        TreasuryControlNumber: TES13213215563156482
                        TreasuryDocumentNumber: 6543TES85462125GP542658
          description: This method returns all payments slip active for an especfic tax identification.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-tax-gps-clientRequestId
      summary: Get tax GPS transaction by clientRequestId
      description: ''
  /tax/gru/client-request-id/{clientRequestId}:
    get:
      tags:
        - GRU
      parameters:
        - name: clientRequestId
          description: Unique identifier provided by the client. Can be used in response corelation.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GruResponse'
              examples:
                GRUResponse:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      debitParty:
                        account: '42161'
                        bank: '208'
                        branch: '20'
                        personType: F
                        taxId: 7693440704
                        accountType: CC
                        name: Davi Ferreira de Sousa
                      type: GRU
                      gruContent:
                        description: Teste Cristiano 1
                        discountAmount: 56
                        dueDate: '2021-08-12'
                        fineAmount: 55
                        gruReferenceNumber: '55242'
                        history: a bc
                        interestAmount: 54
                        mainAmount: 1000
                        managingUnitCode: '10'
                        name: Cristiano
                        otherAddedAmount: 5
                        otherDiscountAmount: 50
                        personType: F
                        taxId: 5168329721
                        treasureCollectionCode: TCC_10018
                        yearMonth13Competency: 202101
                      status: PROCESSING
                      pactualId: cd1b52c9-bb4a-414b-a285-03ab030b3383
                      internalDescription: ''
          description: This method returns all payments slip active for an especfic tax identification.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-tax-gru-clientRequestId
      summary: Get tax GRU transaction by clientRequestId
      description: ''
    parameters:
      - name: clientRequestId
        description: Unique identifier provided by the client. Can be used in response corelation.
        schema:
          type: string
        in: path
        required: true
  /clearing/ltr-operation/create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtrOperation'
        required: true
      tags:
        - LTR
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: clearing-ltr-create
      summary: Create LTR transaction
      description: These services are intended to perform real-time gross settlements and bilateral settlements of transactions carried out in clearing houses.
  /clearing/selic-operation/create:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelicOperation'
        required: true
      tags:
        - SELIC
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: clearing-selic-create
      summary: Create SELIC transaction
      description: Through these services, the RSFN (Rede do Sistema Financeiro Nacional) participant will be able to carry out all transactions with public securities allowed in the SELIC.
  /clearing/selic-operation/{pactualId}:
    get:
      tags:
        - SELIC
      parameters:
        - examples:
            PactualId:
              value: '"dc4abddb-f882-4408-850c-afc1b98d7fbb"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                SelicResponse:
                  value:
                    version: 1.0.1
                    status: 200
                    body:
                      clientId: 77652b8c-f376-4b60-9416-07beeecb29io
                      pactualId: 740411d7-42dd-4101-88d4-90a0c4df7665
                      clientRequestId: 52e79bcc-007d-4753-a00b-0a9b66e0b996
                      status: CREATED
                      body:
                        messageType: SEL1052
                        numOperation: ''
                        request:
                          pu: '717'
                          cnpJ_CPFCes: '30306294000189'
                          ctCes: '008300009'
                          ispbif: '30306299'
                          dtMovto: '2022-01-27'
                          identdTitSEL: '100000'
                          dtHrBC: 02/01/2022 18:26:16
                          tpCompr: '01'
                          codMsg: '041'
                          ifnLiqdant: '0'
                          cnpJ_CPFCed: '42730540000188'
                          dtOpOr: '2022-02-09'
                          ctCed: '006716578'
                          vlrFinanc: '48103.6'
                          tpDeb_Cred: C
                          dtVenc: '2025-01-01'
                          numOpSEL: '942269'
                          qtdTit: '67'
                          tpRetCompr: '01'
                          dtOp: '2022-02-09'
                          dtOpRet: '2022-02-09'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: clearing-get-selic-transaction
      summary: Get Selic transaction
      description: ''
  /clearing/ltr-operation/provision:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LTRProvisionRequest'
        required: true
      tags:
        - LTR
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LTRProvisionResponse'
              examples:
                LTRProvisionResponse:
                  value:
                    version: 1.2.1
                    status: 200
                    body:
                      clientId: 1a722b8c-f376-4b60-9416-07beeecb2c81
                      pactualId: 4ac0544f-d747-4392-b0e1-86ea6c445973
                      clientRequestId: 49c6e67c-2c41-4ac9-b4da-fb24e2e61693
                      status: CREATED
                      body:
                        request:
                          clientRequestId: 49c6e67c-2c41-4ac9-b4da-fb24e2e61693
                          id: '8147844'
                          amount: 24000
                          origin: BAAS
                          typeOperation: D
                          typeLiquidation: CETIP
                          nameOperator: BENDERMA
                          date: '2022-03-29T14:06:33'
                          status: Liquidado
                          party:
                            account: '000179778'
                            branch: '1'
                            documentNumber: '19449767000120'
                            cge: '114840'
                            name: BTG PACTUAL VIDA E PREVIDENCIA SA
                          counterParty:
                            account: '000205524'
                            branch: '1'
                            documentNumber: '59285411000113'
                            cge: '8841'
                            name: BANCO PAN S.A.
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: clearing-ltr-provision
      summary: Create LTR provision
      description: These services are intended to perform real-time gross settlements and bilateral settlements of transactions carried out in clearing houses.
  /clearing/ltr-operation/provision/{pactualId}:
    get:
      tags:
        - LTR
      parameters:
        - examples:
            GuidExample:
              value: '"24ce2593-b7a9-445c-b32e-9e1a9b9cf798"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LTRProvisionResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: clearing-ltr-provision-get
      summary: Get LTR provision
      description: ''
  /clearing/ltr-operation/{pactualId}:
    get:
      tags:
        - LTR
      parameters:
        - examples:
            PactualId:
              value: '"dc4abddb-f882-4408-850c-afc1b98d7fbb"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                LtrResponse:
                  value:
                    version: 1.0.1
                    status: 200
                    body:
                      clientId: 1a722b8c-f376-4b60-9416-07beeecb2c81
                      pactualId: a188ebba-e96b-4964-8bf0-8f12868c619e
                      clientRequestId: 153190c3-1ade-4777-814d-933818762101
                      status: PROCESSING
                      body:
                        messageType: LTR0002
                        request:
                          tpConf_Divg: C
                          codMsg: LTR0002
                          numCtrlLTROr: '2022010311544909'
                          ispbltr: '28719664'
                          numCtrlIF: SPR20220103012995509
                          ispbif: '30306294'
                          dtMovto: '2022-01-03'
                          dtHrIF: '2022-01-03T15:36:47'
                        numOperation: '28719664202203082409155'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: clearing-get-ltr-transaction
      summary: Get LTR transaction
      description: ''
  /clearing/ltr-operation/create/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LtrOperation'
        required: true
      tags:
        - LTR
      parameters:
        - examples:
            AccountIdExample:
              value: '"7ff77238-6ace-4347-b6a6-7c87cc73b70d"'
          name: accountId
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: clearing-ltr-create-accountId
      summary: Create LTR transaction with specific account
      description: These services are intended to perform real-time gross settlements and bilateral settlements of transactions carried out in clearing houses.
  /clearing/selic-operation/create/{accountId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelicOperation'
        required: true
      tags:
        - SELIC
      parameters:
        - examples:
            AccountIdExample:
              value: '"90f6f10b-0ec7-4fea-83e1-fb3faebeb3bb"'
          name: accountId
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: clearing-selic-create-accountId
      summary: Create SELIC transaction with specific account
      description: Through these services, the RSFN (Rede do Sistema Financeiro Nacional) participant will be able to carry out all transactions with public securities allowed in the SELIC.
  /clearing/selic-operation/provision:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelicProvision'
        required: true
      tags:
        - SELIC
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LTRProvisionResponse'
              examples:
                LTRProvisionResponse:
                  value:
                    version: 1.2.1
                    status: 200
                    body:
                      clientId: 1a722b8c-f376-4b60-9416-07beeecb2c81
                      pactualId: 4ac0544f-d747-4392-b0e1-86ea6c445973
                      clientRequestId: 49c6e67c-2c41-4ac9-b4da-fb24e2e61693
                      status: CREATED
                      body:
                        request:
                          clientRequestId: 49c6e67c-2c41-4ac9-b4da-fb24e2e61693
                          id: '8147844'
                          amount: 24000
                          origin: BAAS
                          typeOperation: D
                          typeLiquidation: CETIP
                          nameOperator: BENDERMA
                          date: '2022-03-29T14:06:33'
                          status: Liquidado
                          party:
                            account: '000179778'
                            branch: '1'
                            documentNumber: '19449767000120'
                            cge: '114840'
                            name: BTG PACTUAL VIDA E PREVIDENCIA SA
                          counterParty:
                            account: '000205524'
                            branch: '1'
                            documentNumber: '59285411000113'
                            cge: '8841'
                            name: BANCO PAN S.A.
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: clearing-selic-provision
      summary: Create SELIC provision
      description: These services are intended to perform real-time gross settlements and bilateral settlements of transactions carried out in clearing houses.
  /clearing/selic-operation/provision/{pactualId}:
    get:
      tags:
        - SELIC
      parameters:
        - examples:
            GuidExample:
              value: '"24ce2593-b7a9-445c-b32e-9e1a9b9cf798"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SelicProvisionResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      operationId: clearing-selic-provision-get
      summary: Get SELIC provision
      description: ''
  /clearing/selic-operation/update/{pactualId}:
    description: ''
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelicOperation'
        required: true
      tags:
        - SELIC
      parameters:
        - examples:
            GuidExample:
              value: '"24ce2593-b7a9-445c-b32e-9e1a9b9cf798"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: clearing-selic-update
      summary: Update SELIC transaction
      description: ''
  /clearing/selic-operation/delete/{pactualId}:
    description: ''
    delete:
      tags:
        - SELIC
      parameters:
        - examples:
            GuidExample:
              value: '"24ce2593-b7a9-445c-b32e-9e1a9b9cf798"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: clearing-selic-delete
      summary: Delete SELIC transaction
      description: ''
  /foreign-exchange/pre-ticket/buy/new/{bankChannelId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxPreTicketBuyQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrency: USD
                  additionalInformation: test
        required: true
      tags:
        - Foreign Exchange Pré-Ticket
      parameters:
        - name: bankChannelId
          description: The Id of the Banking Channel, the banking channel contains the SWIFT account information, it can be retrieved using Banking Channel API.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxPreTicketQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-pre-ticket-buy-quote
      summary: Create a new pre ticket buy Quote
      description: Endpoint used to create a new quote.
  /payment/payment-slip/dda/customer:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipDDAEndCustomerRequest'
            examples:
              PostDDACustomerExample:
                value:
                  clientRequestId: e4c1d6c4-60cf-407f-a495-57bd5aa4bb52
                  tags:
                    - Markups
                  Owner:
                    taxId: '1991810203'
                    Account:
                      Account: 5104732
                      AccountType: CC
                      Branch: 20
                  Customer:
                    taxId: '1991810203'
                    Name: string
        required: true
      tags:
        - DDA
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DDACreateSucessResponse'
              examples:
                SuccessCreateDDA:
                  value:
                    version: 1.5.6
                    status: 200
                    body:
                      ownerTaxId: '82790006000174'
                      customerTaxId: '32842840011'
                      clientRequestId: 717b25b5-8f12-4509-aa5f-5bfb3c52c124
          description: Response for success create DDA Account
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-dda-customer
      summary: Register For End Customer
      description: ''
  /payment/payment-slip/dda/customer/{ownerTaxId}/{customerTaxId}:
    get:
      tags:
        - DDA
      parameters:
        - examples:
            TaxExample:
              value: '98429217002'
          name: ownerTaxId
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
          schema:
            type: string
          in: path
          required: true
        - examples:
            TaxExample:
              value: '61089294050'
          name: customerTaxId
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipDDAResponseBody'
              examples:
                CustomerDDAResponse:
                  value:
                    version: 1.1.2
                    status: 200
                    body:
                      status: CREATED
                      clientRequestId: e4c1d6c4-60cf-407f-a495-57bd5aa4bb52
                      tags:
                        - Markups
                      Owner:
                        taxId: 71565184025
                        Account:
                          Account: 5104732
                          AccountType: CC
                          Branch: 20
                      Customer:
                        taxId: 43687221083
                        Name: string
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-payment-slip-dda-customer
      summary: Get Register For End Customer
    parameters:
      - name: customerTaxId
        schema:
          type: string
        in: path
        required: true
      - name: ownerTaxId
        schema:
          type: string
        in: path
        required: true
  /payment/payment-slip/dda/customer/delete/{ownerTaxId}/{customerTaxId}:
    delete:
      tags:
        - DDA
      parameters:
        - examples:
            Example:
              value: '54582624090'
          name: ownerTaxId
          description: Owner of DDA AccountTax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
          schema:
            type: string
          in: path
          required: true
        - examples:
            Example:
              value: '39255040014'
          name: customerTaxId
          description: DDA Account for the end customer Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          $ref: '#/components/responses/EmptyOKResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: delete-customer-register-dda
      summary: Delete Register For End Customer
      description: ''
    parameters:
      - name: customerTaxId
        schema:
          type: string
        in: path
        required: true
      - name: ownerTaxId
        schema:
          type: string
        in: path
        required: true
  /payment/payment-slip-pix/account/{accountId}:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipPixRequest'
            examples:
              PaymentSlipPixFullRequest:
                value:
                  PaymentSlip:
                    Amount: '728.10'
                    DueDate: '2024-06-24'
                    Customer:
                      Name: Linha Rara Indústria E Comércio Ltda
                      TaxId: '06051750000179'
                      Street: AVENIDA SAPUCAIA
                      Number: '1780'
                      City: SAPUCAIA DO SUL
                      StateCode: RS
                      ZipCode: '93210240'
                    Fine:
                      Date: '2024-06-25'
                      Value: 2
                      Code: PERCENT
                    Interest:
                      Date: '2024-06-25'
                      Value: 1.5
                      Code: PERCENTAGE_POINT_PER_MONTH_CALENDAR_DAYS
                    Discounts:
                      Discount1:
                        Date: '2024-06-08'
                        Value: 3
                        Type: '2'
                    OverdueDate: '2024-07-24'
                    DivergentAmountType: NOT_ACCEPT_PAYMENT_WITH_DIFFERENT_AMOUNT
                    OurNumber: '40443301084451380'
                    Description: Plano Doctorclin 1° Parcela
                    AmountLimit:
                      MinPercentAmountType: P
                      MinPercentAmount: 100
                      MaxPercentAmountType: P
                      MaxPercentAmount: 100
                  Pix:
                    Amount:
                      Original: '728.10'
                      Fine:
                        Modality: PERCENT
                        AmountPerc: '2.00'
                      Interest:
                        Modality: PERCENTAGE_PER_MONTH_CALENDAR_DAYS
                        AmountPerc: '1.50'
                      Discount:
                        Modality: PERCENTAGE_DATE_REPORTED
                        DiscountDateFixed:
                          - Date: '2024-06-08'
                            AmountPerc: '3.00'
                    Calendar:
                      DueDate: '2024-06-24'
                      ExpirationAfterPayment: 122
                    Debtor:
                      CNPJ: '06051750000179'
                      Name: Linha Rara Indústria E Comércio Ltda
                    Key: 6f343008-0000-4662-90a0-9d74f37db6e9
                    LocationInformation:
                      Merchant:
                        PostalCode: '04538133'
                        City: SAO PAULO
                        Name: VECHI
                        MerchantCategoryCode: '6533'
                      Type: COBV
                    Receiver:
                      CNPJ: '12449020000123'
                      Name: UNISAUDEPOA CORRETORA DE SEGUROS LTDA
                      PublicArea: AV BRIGADEIRO FARIA LIMA 3477
                      City: SAO PAULO
                      State: SP
                      PostalCode: '04538133'
                  ClientRequestId: d450fe22-fad7-4d5f-b7e7-b5edfa040e11
        required: true
      tags:
        - BolePix
      parameters:
        - name: accountId
          description: 'The Account Id (Uuid) of Beneficiary. For example: {54c4ed21-5f1f-4942-a3f8-b96537566cb5}'
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipPixPostResponse'
              examples:
                PaymentSlipPixResponse:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: b7badaf4-f841-4f2f-8f4b-76fed363cff1
                      paymentSlip:
                        pactualId: b7badaf4-f841-4f2f-8f4b-76fed363cff1
                        barCode: '20899909200000120600030010000000014804874080'
                        digitableLine: '20890030041000000001748048740806990920000012060'
                        body:
                          calendar:
                            creationTimestamp: '2022-08-18T17:43:06.0513982-03:00'
                            dueDate: '2022-08-29'
                            expirationAfterPayment: 0
                          txid: 6a53c5d9bc99478b93222ea3bc011dc2
                          revision: 0
                          debtor:
                            cpf: '08010745090'
                            name: string
                            email: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          receiver:
                            cpf: '08010745090'
                            name: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          loc:
                            pactualId: e6feceb0-ac17-4acd-b84c-09d7884cf638
                            clientRequestId: 6a53c5d9bc99478b93222ea3bc011dc2
                            createTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                            lastUpdateTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                            entity: QrCodeLocation
                            status: CREATED
                            body:
                              merchant:
                                postalCode: '61078147'
                                city: string
                                name: string
                                merchantCategoryCode: '5067'
                              url: api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf638
                              emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf6385204506753039865802BR5906string6006string61086107814762070503***6304674C
                              type: COBV
                              id: '5241761266735342611'
                            tags: []
                          amount:
                            original: '120.60'
                          key: string
                          payerQuestion: string
                          additionalInformation:
                            - key: string
                              value: string
                      pix:
                        txId: 6a53c5d9bc99478b93222ea3bc011dc2
                        emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf6385204506753039865802BR5906string6006string61086107814762070503***6304674C
                        body:
                          calendar:
                            creationTimestamp: '2022-08-18T17:43:06.0513982-03:00'
                            dueDate: '2022-08-29'
                            expirationAfterPayment: 0
                          txid: 6a53c5d9bc99478b93222ea3bc011dc2
                          revision: 0
                          debtor:
                            cpf: '08010745090'
                            name: string
                            email: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          receiver:
                            cpf: '08010745090'
                            name: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          loc:
                            pactualId: e6feceb0-ac17-4acd-b84c-09d7884cf638
                            clientRequestId: 6a53c5d9bc99478b93222ea3bc011dc2
                            createTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                            lastUpdateTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                            entity: QrCodeLocation
                            status: CREATED
                            body:
                              merchant:
                                postalCode: '61078147'
                                city: string
                                name: string
                                merchantCategoryCode: '5067'
                              url: api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf638
                              emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf6385204506753039865802BR5906string6006string61086107814762070503***6304674C
                              type: COBV
                              id: '5241761266735342611'
                            tags: []
                          amount:
                            original: '120.60'
                          key: string
                          payerQuestion: string
                          additionalInformation:
                            - key: string
                              value: string
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-pix-account
      summary: Generate a payment slip with QR Code pix for specific account
      description: This method is called when sending single instances of PaymentSlipPix to be processed by our infrastructure.
  /payment/payment-slip-pix/{pactualId}:
    get:
      tags:
        - BolePix
      parameters:
        - name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipPixResponse'
              examples:
                PaymentSlipPixResponse:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: f26f095f-6607-4436-81fb-3241beaea234
                      paymentSlip:
                        pactualId: f26f095f-6607-4436-81fb-3241beaea234
                        barCode: '20897909200000120600030010000000015204874080'
                        digitableLine: '20890030041000000001752048740808790920000012060'
                        body:
                          amount: 12060
                          dueDate: '2022-08-29'
                          customer:
                            name: string
                            taxId: '08010745090'
                          overdueDate: '2022-08-29'
                          description: string
                          issueDate: '2022-08-24 17:39:05'
                          barCode: '20897909200000120600030010000000015204874080'
                          digitableLine: '20890030041000000001752048740808790920000012060'
                          beneficiaryAccount:
                            accountId: 210d0c63-c6c3-47ef-a76c-79077b2451a0
                            clientId: eb9e8702-8753-4c66-82cc-1e2c754861fd
                            account: '4874087'
                            branch: '30'
                            bank: '208'
                            taxId: '64629812000183'
                            name: Agatha e Julio Fotografias ME
                            personType: J
                            accountType: CC
                            status: ACTIVE
                            lockedAccount: false
                            bankBranchAccount: '208_30_4874087'
                            createTimestamp: '2022-03-14T15:37:51.3758581-03:00'
                            lastUpdateTimestamp: '2022-03-14T15:37:51.3758688-03:00'
                            beneficiaryTreatyCode: '637828590801441233'
                            beneficiaryMarketTreatyCode: '01'
                            defaultAccount: true
                            markups:
                              - DEFAULT-OVERDUEDATE:60
                            clientAccountType: BaaS_Default
                          ourNumber: '152'
                          ourNumberDigit: '3'
                      pix:
                        txId: 6b53d5d9bc99478b93222ea3bc011dc2
                        emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/74e04f7301c0461381316e4d33ccf94e5204506753039865802BR5906string6006string61086107814762070503***630414CE
                        body:
                          calendar:
                            creationTimestamp: '2022-08-24T14:39:22.003824-03:00'
                            dueDate: '2022-08-29'
                            expirationAfterPayment: 0
                          txid: 6b53d5d9bc99478b93222ea3bc011dc2
                          revision: 0
                          debtor:
                            cpf: '08010745090'
                            name: string
                            email: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          receiver:
                            cpf: '08010745090'
                            name: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          loc:
                            pactualId: 74e04f73-01c0-4613-8131-6e4d33ccf94e
                            clientRequestId: 6b53d5d9bc99478b93222ea3bc011dc2
                            createTimestamp: '2022-08-24T14:39:21.9931545-03:00'
                            lastUpdateTimestamp: '2022-08-24T14:39:21.9931545-03:00'
                            entity: QrCodeLocation
                            status: CREATED
                            body:
                              merchant:
                                postalCode: '61078147'
                                city: string
                                name: string
                                merchantCategoryCode: '5067'
                              url: api-h.developer.btgpactual.com/v1/p/v2/cobv/74e04f7301c0461381316e4d33ccf94e
                              emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/74e04f7301c0461381316e4d33ccf94e5204506753039865802BR5906string6006string61086107814762070503***630414CE
                              type: COBV
                              id: '7180308139108764523'
                            tags: []
                          amount:
                            original: '120.60'
                          key: string
                          payerQuestion: string
                          additionalInformation:
                            - key: string
                              value: string
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-payment-slip-pix
      summary: Get the information of a Payment Slip Pix
      description: Use this endpoint in order to require the information of a valid PaymentSlipPix by passing the pactualId field.
  /payment/payment-slip/sync:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipRequest'
        required: true
      tags:
        - Payment Slips
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipGetResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 100
                    body:
                      pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      clientRequestId: string
                      createTimestamp: string
                      lastUpdateTimestamp: string
                      entity: string
                      status: string
                      errorCode: string
                      errorDescription: string
                      tags:
                        - Warsupply
                        - Invoice_1234
                      body:
                        amount: 400000
                        dueDate: '2019-07-20T00:00:00.000Z'
                        customer:
                          name: Alex
                          taxId: '12345678910'
                          street: Av. Faria Lima, 0001
                          number: 13A
                          numberComplement: Sala 101 3 andar
                          neighborhood: Itaim Bibi
                          city: string
                          stateCode: string
                          zipCode: 12345678
                        fine:
                          date: '2019-07-20T00:00:00.000Z'
                          value: 1.1
                        interest:
                          date: '2019-07-20T00:00:00.000Z'
                          value: 1.1
                        discounts:
                          discount1:
                            date: '2020-07-01T00:00:00.000Z'
                            value: 15
                            type: '2'
                          discount2:
                            date: '2020-07-10T00:00:00.000Z'
                            value: 10
                            type: '2'
                          discount3:
                            date: '2020-07-15T00:00:00.000Z'
                            value: 5
                            type: '2'
                        overdueDate: '2019-07-20T00:00:00.000Z'
                        description: string
                        issueDate: '2019-07-20T00:00:00.000Z'
                        barCode: '20898000000000001000001010000000003700451520'
                        digitableLine: '20890001091000000000937004515203800000000000100'
                        ourNumber: string
                        ourNumberDigit: string
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-sync
      summary: Generate a payment slip for default account (Sync)
      description: This method is called when sending single instances of payment slip to be processed by our infrastructure synchronously.
  /payment/payment-slip:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipRequest'
        required: true
      tags:
        - Payment Slips
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: string
                    status: 202
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip
      summary: Generate a payment slip for default account
      description: This method is called when sending single instances of payment slip to be processed by our infrastructure.
  /foreign-exchange/pre-ticket/buy/new/{bankChannelId}/{accountId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxPreTicketBuyQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrency: USD
                  additionalInformation: test
        required: true
      tags:
        - Foreign Exchange Pré-Ticket
      parameters:
        - name: bankChannelId
          description: The Id of the Banking Channel, the banking channel contains the SWIFT account information, it can be retrieved using Banking Channel API.
          schema:
            nullable: true
            type: string
          in: path
          required: true
        - name: accountId
          description: The Id of the Account that will do the trade
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxPreTicketQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-pre-ticket-buy-quote-specific-account
      summary: Create a new pre ticket buy Quote for a specific account.
      description: Endpoint used to create a new quote for a specific account.
  /payment/payment-slip-pix-short/account/{accountId}:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipPixShortRequest'
            examples:
              Example:
                value:
                  dueDate: '2022-10-22'
                  overdueDate: '2022-11-22'
                  amount: '2500.00'
                  discounts:
                    modality: FIXED_VALUE_UNTIL_THE_DATES_INFORMED
                    discount1:
                      date: '2022-10-05'
                      value: '200.00'
                    discount2:
                      date: '2022-10-06'
                      value: '150.00'
                    discount3:
                      date: '2022-10-07'
                      value: '100.00'
                  fine:
                    modality: FIXED_VALUE
                    amountPerc: '300.00'
                    date: '2022-10-23'
                  interest:
                    amountPerc: '20.00'
                    date: '2022-10-23'
                  key: suporte@agathaejuliofotografiasme.com.br
                  payer:
                    name: Marcos Vinicius Pietro Brito
                    taxId: '16879503853'
                    street: Rua das Flores
                    number: '43'
                    neighborhood: Boa Vista
                    city: Rio Branco
                    stateCode: AC
                    zipCode: '69912122'
                  receiver:
                    cnpj: '64629812000183'
                    fantasyName: Agatha e Julio Fotografias ME
                    Name: Agatha e Julio Fotografias ME
                    publicArea: '20000000'
                    city: Sao Paulo
                    state: SP
                    postalCode: '20000000'
                  locationInformation:
                    merchant:
                      postalCode: '20000000'
                      city: Sao Paulo
                      name: Fotografias ME
                      merchantCategoryCode: '0000'
                  clientRequestId: 4fe74b3a-c800-4d65-ac47-c238a25a0943
        required: true
      tags:
        - BolePix
      parameters:
        - name: accountId
          description: 'The Account Id (Uuid) of Beneficiary. For example: {54c4ed21-5f1f-4942-a3f8-b96537566cb5}'
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipPixPostResponse'
              examples:
                PaymentSlipPixResponse:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: b7badaf4-f841-4f2f-8f4b-76fed363cff1
                      paymentSlip:
                        pactualId: b7badaf4-f841-4f2f-8f4b-76fed363cff1
                        barCode: '20899909200000120600030010000000014804874080'
                        digitableLine: '20890030041000000001748048740806990920000012060'
                        body:
                          calendar:
                            creationTimestamp: '2022-08-18T17:43:06.0513982-03:00'
                            dueDate: '2022-08-29'
                            expirationAfterPayment: 0
                          txid: 6a53c5d9bc99478b93222ea3bc011dc2
                          revision: 0
                          debtor:
                            cpf: '08010745090'
                            name: string
                            email: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          receiver:
                            cpf: '08010745090'
                            name: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          loc:
                            pactualId: e6feceb0-ac17-4acd-b84c-09d7884cf638
                            clientRequestId: 6a53c5d9bc99478b93222ea3bc011dc2
                            createTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                            lastUpdateTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                            entity: QrCodeLocation
                            status: CREATED
                            body:
                              merchant:
                                postalCode: '61078147'
                                city: string
                                name: string
                                merchantCategoryCode: '5067'
                              url: api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf638
                              emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf6385204506753039865802BR5906string6006string61086107814762070503***6304674C
                              type: COBV
                              id: '5241761266735342611'
                            tags: []
                          amount:
                            original: '120.60'
                          key: string
                          payerQuestion: string
                          additionalInformation:
                            - key: string
                              value: string
                      pix:
                        txId: 6a53c5d9bc99478b93222ea3bc011dc2
                        emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf6385204506753039865802BR5906string6006string61086107814762070503***6304674C
                        body:
                          calendar:
                            creationTimestamp: '2022-08-18T17:43:06.0513982-03:00'
                            dueDate: '2022-08-29'
                            expirationAfterPayment: 0
                          txid: 6a53c5d9bc99478b93222ea3bc011dc2
                          revision: 0
                          debtor:
                            cpf: '08010745090'
                            name: string
                            email: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          receiver:
                            cpf: '08010745090'
                            name: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          loc:
                            pactualId: e6feceb0-ac17-4acd-b84c-09d7884cf638
                            clientRequestId: 6a53c5d9bc99478b93222ea3bc011dc2
                            createTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                            lastUpdateTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                            entity: QrCodeLocation
                            status: CREATED
                            body:
                              merchant:
                                postalCode: '61078147'
                                city: string
                                name: string
                                merchantCategoryCode: '5067'
                              url: api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf638
                              emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf6385204506753039865802BR5906string6006string61086107814762070503***6304674C
                              type: COBV
                              id: '5241761266735342611'
                            tags: []
                          amount:
                            original: '120.60'
                          key: string
                          payerQuestion: string
                          additionalInformation:
                            - key: string
                              value: string
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-pix-short-account
      summary: Generate a payment slip with QR Code pix for specific account with a simplified contract
      description: This method is called when sending single instances of PaymentSlipPix to be processed by our infrastructure.
  /banking-channel:
    get:
      tags:
        - Foreign Exchange Banking Channel
      parameters:
        - name: bankChannelId
          description: "The bankChannelId that you wants to be returned, if not passed the API will\r\nreturn all Available accounts for the client"
          schema:
            type: string
          in: query
          required: false
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankingChannelResponse'
              examples:
                Success without the BankChannel parameter on the request:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      - beneficiaryId: aa9ce499242349d28c4facf5015555c8
                        beneficiaryName: FIRST TEST
                        beneficiaryStatus: ATIVO
                        address:
                          code: 0
                          description: '0'
                        businessType:
                          code: '00'
                          description: Pessoas f�sicas - Domiciliadas no Pa�s
                        expenses:
                          code: OUR
                          description: Our customer charged
                        account:
                          details:
                            option: '*'
                            name: First Test
                            address: UNITED STATES
                            accountNumber: '12345678'
                          currency:
                            code: USD
                            description: US Dollar
                          country:
                            code: US
                            description: United States of America (the)
                Success with the BankChannel parameter on the request:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      beneficiaryId: aa9ce499242349d28c4facf5015555c8
                      beneficiaryName: FIRST TEST
                      beneficiaryStatus: ATIVO
                      address:
                        code: 0
                        description: '0'
                      businessType:
                        code: '00'
                        description: Pessoas físicas - Domiciliadas no País
                      expenses:
                        code: OUR
                        description: Our customer charged
                      account:
                        details:
                          option: '*'
                          name: First Test
                          address: UNITED STATES
                          accountNumber: '12345678'
                        currency:
                          code: USD
                          description: US Dollar
                        country:
                          code: US
                          description: United States of America (the)
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-banking-channels
      summary: Get Banking Channels
      description: Endpoint used to get bankingChannels.
  /foreign-exchange/indicative/sell:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxSellIndicativeQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Indicative Quotes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxSellIndicativeQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchangeIndicative
                      status: INDICATIVE
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        operationSide: SELL
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25T00:00:00'
                        baseCurrencySettlementDate: '2021-03-25T00:00:00'
                        indicative: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-sell-indicative-quote
      summary: Create a new sell indicative Quote
      description: Endpoint used to create a new SELL INDICATIVE quote.
  /automatic-debit/billing:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtdBillingIssueingRequest'
            examples:
              AtdBillingIssueingRequest:
                value:
                  clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  authorizationPactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa1
                  billingDate: '2022-11-02'
                  amount: 200
                  discounts:
                    - type: IOF
                      aliquot: 10
                      discountAmount: 20
                  client:
                    documentNumber: '89009196798'
                    account:
                      number: '003261691'
                      agency: '20'
                  product:
                    code: a12b6cd69e56
                  contract:
                    identification: '1101822349999'
                    signatureDate: '2022-10-02'
        required: true
      tags:
        - Automatic Debit Issueing
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtdBillingIssueingResponse'
              examples:
                AtdBillingIssueingResponse:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      pactualId: d4d6df88-bdd9-4cae-85e3-9f54992a47f5
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      summary: Create Billing
      description: This service creates a billing.
  /automatic-debit/billing/chargeback/{pactualId}:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtdBillingIssueingChargebackRequest'
            examples:
              AtdBillingIssueingRequest:
                value: chargebackReason:"Wrong amount charged"
        required: true
      tags:
        - Automatic Debit Issueing
      parameters:
        - examples:
            GuidExample:
              value: '"24ce2593-b7a9-445c-b32e-9e1a9b9cf798"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtdBillingIssueingResponse'
              examples:
                AtdBillingIssueingResponse:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      pactualId: d4d6df88-bdd9-4cae-85e3-9f54992a47f5
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      summary: Create Billing Chargeback
      description: This service creates a billing chargeback.
  /automatic-debit/billing/{pactualId}:
    get:
      tags:
        - Automatic Debit Issueing
      parameters:
        - examples:
            GuidExample:
              value: '"24ce2593-b7a9-445c-b32e-9e1a9b9cf798"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtdBillingIssueingGetResponse'
              examples:
                AtdBillingIssueingResponse:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: aff16b5c-2c57-4b05-a014-c7c77dad93fc
                      clientRequestId: f45ff9f9-88c5-486b-9d2a-b0ea8d699721
                      createTimestamp: '2022-11-01T14:55:43.8274597+00:00'
                      lastUpdateTimestamp: '2022-11-01T14:55:57.0039699+00:00'
                      entity: AtdAutomaticDebit
                      status: SCHEDULED
                      body:
                        authorizationPactualId: 265bc9d6-c9f8-42f2-8252-3f2f0d9c18e5
                        billingDate: '2022-11-01T00:00:00Z'
                        amount: '200'
                        discounts:
                          - type: IOF
                            aliquot: '10'
                            discountAmount: '20'
                        client:
                          name: Renata Gomes Alvarenga
                          documentNumber: '95442383600'
                          account:
                            number: '004372702'
                            agency: '20'
                            bank: '208'
                        product:
                          code: e12a6ae69f55
                        contract:
                          identification: '1101822341501'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      summary: Get Billing
      description: Get Billing Status by pactualId
  /automatic-debit/authorization:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AtdAuthorizationIssueingRequest'
            examples:
              AtdAuthorizationIssueingRequest:
                value:
                  clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                  client:
                    documentNumber: '89009196798'
                    account:
                      number: '003261691'
                      agency: '20'
                  product:
                    code: a12b6cd69e56
                  contract:
                    identification: '1101822349999'
                    signatureDate: '2022-10-01'
        required: true
      tags:
        - Automatic Debit Issueing Authorization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtdAuthorizationIssueingResponse'
              examples:
                AtdBillingIssueingResponse:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      pactualId: d4d6df88-bdd9-4cae-85e3-9f54992a47f5
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      summary: Create Billing Authorization
      description: This service creates a billing authorization.
  /automatic-debit/authorization/{pactualId}:
    get:
      tags:
        - Automatic Debit Issueing Authorization
      parameters:
        - examples:
            GuidExample:
              value: '"24ce2593-b7a9-445c-b32e-9e1a9b9cf798"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AtdAuthorizationIssueingGetResponse'
              examples:
                AtdAuthorizationIssueingResponse:
                  value:
                    version: 1.0.0
                    status: 200
                    body:
                      pactualId: aff16b5c-2c57-4b05-a014-c7c77dad93fc
                      clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      createTimestamp: '2022-11-01T14:55:43.8274597+00:00'
                      lastUpdateTimestamp: '2022-11-01T14:55:57.0039699+00:00'
                      entity: AtdAutomaticDebit
                      status: SCHEDULED
                      body:
                        client:
                          name: Sophia Cecilia Drumond
                          documentNumber: '89009196798'
                          account:
                            number: '003261691'
                            agency: '20'
                            bank: '208'
                        product:
                          code: a12b6cd69e56
                          description: Seguro Vida total
                          authorizationType: Autorização concedida pelo cliente
                        contract:
                          identification: '1101822341501'
                          type: POLICY_NUMBER
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      summary: Get Authorization
      description: Get Authorization Status by pactualId
  /automatic-debit/billing/cancel/{pactualId}:
    delete:
      tags:
        - Automatic Debit Issueing
      parameters:
        - examples:
            GuidExample:
              value: '"24ce2593-b7a9-445c-b32e-9e1a9b9cf798"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '204':
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      summary: Cancel Billing
      description: Cancel Billing by pactualId
  /automatic-debit/authorization/cancel/{pactualId}:
    delete:
      tags:
        - Automatic Debit Issueing Authorization
      parameters:
        - examples:
            GuidExample:
              value: '"24ce2593-b7a9-445c-b32e-9e1a9b9cf798"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '204':
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      summary: Cancel Authorization
      description: Cancel Authorization by pactualId
  /foreign-exchange/pre-ticket/{pactualId}:
    get:
      tags:
        - Foreign Exchange Pré-Ticket
      parameters:
        - name: pactualId
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPreTicketResponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchangePreTicket
                      status: CONFIRMED
                      body:
                        accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
                        amount: 1000
                        availableBalance: 800
                        operationSide: BUY
                        baseCurrency: USD
                        countryCode: US
                        bankChannelId: dcfbf259caa148e6ab1eaf2b012d3fd0
                        additionaInformation: teste
                        beneficiary: OSL DIGITAL LIMITED
                        bacenNature:
                          codeOperationNature: '37217'
                          clientNature: '00'
                          avalNature: 'N'
                          payerNature: '00'
                          groupNature: '10'
                          relationshipNature: '10'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: fx-pt-get-trade
      summary: Get pre ticket
      description: Endpoint used to get a previously created pre-ticket.
  /payment/payment-slip/utilities/barcode/{barcode}:
    get:
      tags:
        - Bills
      parameters:
        - name: barcode
          description: Identification barcode of the slip.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipUtilitiesResponse'
              examples:
                Example:
                  value:
                    version: 1.2.5
                    status: 200
                    body:
                      type: utilities
                      assignor: LIGHT
                      segment: ENERGY BILL
                      state: RJ
                      amount: 38716
                      digitableLine: '836500000000001600531077589007190012100361364381'
                      settlementDate: '2022-06-21'
                      startTime: '07:00'
                      endTime: '22:00'
                      dueDate: '2022-06-21'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-payment-slip-utilities-barcode
      summary: Get the information of a submitted Utilities Payment by barcode
      description: Use this endpoint in order to require the information of a submitted Utilities Payment by passing the payments digitable line.
  /transfer/external/jud:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JudicialRequest'
            examples:
              Example:
                value:
                  clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
                  branchFrom: 20
                  accountFrom: 340475
                  bankTo: 237
                  nameTo: Banco Bradesco S.A
                  amount: 50000
                  accountTypeTo: CC
                  nameFrom: Noah Nunes
                  codIdentTransf: 72022077022983500
        required: true
      tags:
        - External Transfers
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Example:
                  value:
                    version: '1.0'
                    status: 200
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: Accepted
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-transfer-external-jud
      summary: Process a judicial transfer to an external account
      description: This method is called to send individual instances of external payments to be processed by our infrastructure.
  /payment/payment-slip/bank-slip/{identificationField}:
    get:
      tags:
        - Bills
      parameters:
        - name: identificationField
          description: |-
            Identification field of the slip: 
            * Barcode
            * Digitable Line
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipBankSlipResponse'
              examples:
                Example:
                  value:
                    version: 1.7.10
                    status: 200
                    body:
                      type: paymentslip
                      maxAmount: 5000
                      minAmount: 5000
                      barCode: '20895889400000050000001010000010422500817670'
                      dueDate: '2022-02-12'
                      fineValue: 0
                      interestValue: 0
                      discountValue: 0
                      beneficiaryPersonType: PJ
                      beneficiaryName: BTG PACTUAL SA
                      beneficiaryDocument: '30306294000145'
                      customerName: Casa Lira Construcoes
                      customerDocument: '5643204000164'
                      personType: PF
                      guarantorName: Oliver Noah Emanuel Figueiredo
                      guarantorDocument: '84020058458'
                      guarantorPersonType: PF
                      validForPayment: true
                      limitDate: '20220212'
                      paymentslipType: BIT
                      paymentslipDescription: Boleto integral
                      originalValue: 5000
                      amount: 5000
                      digitableLine: '20890001091000001042025008176700588940000005000'
                      receiverBankName: BANCO BTG PACTUAL S/A
                      receiverBankISPB: '30306294'
                      receiverBankCode: 208
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-payment-slip-bank-slip-digitableline
      summary: Get the information of a submitted Bank Slip Payment
      description: Use this endpoint in order to require the information of a valid Bank Slip payment by passing the payments digitable line or barcode.
  /banking-channel/countries:
    get:
      tags:
        - Foreign Exchange Banking Channel
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankingchannelCountriesResponse'
              examples:
                Example:
                  value:
                    version: 1.0.3+1
                    status: 200
                    body:
                      - id: AF
                        description: Afghanistan
                      - id: AL
                        description: Albania
                      - id: AQ
                        description: Antarctica
                      - id: DZ
                        description: Algeria
                      - id: AS
                        description: American Samoa
                      - id: AD
                        description: Andorra
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-banking-channels-countries
      summary: Get Banking Channels Countries
      description: Endpoint used to get bankingChannels list of available countries.
  /banking-channel/currencies:
    get:
      tags:
        - Foreign Exchange Banking Channel
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBankingChannelCurrencies'
              examples:
                Example:
                  value:
                    version: 1.0.3+1
                    status: 200
                    body:
                      - id: USD
                        description: US Dollar
                      - id: EUR
                        description: Euro
                      - id: BRL
                        description: Brazilian Real
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-banking-channels-currencies
      summary: Get Banking Channels Currencies
      description: Endpoint used to get bankingChannels list of available currencies.
  /payment/payment-slip-pix/update/{pactualId}:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipPixUpdateRequest'
            examples:
              PaymentSlipUpdateExample:
                value:
                  paymentSlip:
                    description: string
                    amount: string
                    dueDate: string
                    overdueDate: string
                    interest:
                      date: string
                      value: 0
                      code: AMOUNT_CALENDAR_DAYS
                    fine:
                      date: string
                      value: 0
                      code: FIXED_VALUE
                  pix:
                    calendar:
                      dueDate: '2023-05-01T18:18:28.657Z'
                      expirationAfterPayment: 0
                    debtor:
                      cpf: '29984079696'
                      cnpj: '28534973722522'
                      name: string
                      email: user@example.com
                      publicArea: string
                      city: string
                      state: hl
                      postalCode: '31820276'
                    receiver:
                      cpf: '85129910769'
                      cnpj: '82808209377584'
                      name: string
                      fantasyName: string
                      publicArea: string
                      city: string
                      state: KC
                      postalCode: '16132330'
                    amount:
                      original: string
                      fine:
                        modality: FIXED_VALUE
                        amountPerc: '193110916.31'
                      interest:
                        modality: VALUE_CALENDAR_DAYS
                        amountPerc: '969.24'
                      abatement:
                        modality: FIXED_VALUE
                        amountPerc: '86791632.33'
                      discount:
                        modality: FIXED_VALUE_UNTIL_THE_DATES_INFORMED
                        amountPerc: '38799.73'
                        discountDateFixed:
                          - date: '2023-05-01T18:18:28.657Z'
                            amountPerc: '413251.98'
                    key: string
                    payerQuestion: string
                    additionalInformation:
                      - key: string
                        value: string
                  clientRequestId: string
                  tags:
                    - string
        required: true
      tags:
        - BolePix
      parameters:
        - examples:
            GuidExample:
              value: bf90bbeb-03ed-4c9c-926d-7edfe814d740
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipPixResponse'
              examples:
                PaymentSlipPixResponse:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: f26f095f-6607-4436-81fb-3241beaea234
                      paymentSlip:
                        pactualId: f26f095f-6607-4436-81fb-3241beaea234
                        barCode: '20897909200000120600030010000000015204874080'
                        digitableLine: '20890030041000000001752048740808790920000012060'
                        body:
                          amount: 12060
                          dueDate: '2022-08-29'
                          customer:
                            name: string
                            taxId: '08010745090'
                          overdueDate: '2022-08-29'
                          description: string
                          issueDate: '2022-08-24 17:39:05'
                          barCode: '20897909200000120600030010000000015204874080'
                          digitableLine: '20890030041000000001752048740808790920000012060'
                          beneficiaryAccount:
                            accountId: 210d0c63-c6c3-47ef-a76c-79077b2451a0
                            clientId: eb9e8702-8753-4c66-82cc-1e2c754861fd
                            account: '4874087'
                            branch: '30'
                            bank: '208'
                            taxId: '64629812000183'
                            name: Agatha e Julio Fotografias ME
                            personType: J
                            accountType: CC
                            status: ACTIVE
                            lockedAccount: false
                            bankBranchAccount: '208_30_4874087'
                            createTimestamp: '2022-03-14T15:37:51.3758581-03:00'
                            lastUpdateTimestamp: '2022-03-14T15:37:51.3758688-03:00'
                            beneficiaryTreatyCode: '637828590801441233'
                            beneficiaryMarketTreatyCode: '01'
                            defaultAccount: true
                            markups:
                              - DEFAULT-OVERDUEDATE:60
                            clientAccountType: BaaS_Default
                          ourNumber: '152'
                          ourNumberDigit: '3'
                      pix:
                        txId: 6b53d5d9bc99478b93222ea3bc011dc2
                        emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/74e04f7301c0461381316e4d33ccf94e5204506753039865802BR5906string6006string61086107814762070503***630414CE
                        body:
                          calendar:
                            creationTimestamp: '2022-08-24T14:39:22.003824-03:00'
                            dueDate: '2022-08-29'
                            expirationAfterPayment: 0
                          txid: 6b53d5d9bc99478b93222ea3bc011dc2
                          revision: 0
                          debtor:
                            cpf: '08010745090'
                            name: string
                            email: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          receiver:
                            cpf: '08010745090'
                            name: string
                            publicArea: string
                            city: string
                            state: SP
                            postalCode: '12785003'
                          loc:
                            pactualId: 74e04f73-01c0-4613-8131-6e4d33ccf94e
                            clientRequestId: 6b53d5d9bc99478b93222ea3bc011dc2
                            createTimestamp: '2022-08-24T14:39:21.9931545-03:00'
                            lastUpdateTimestamp: '2022-08-24T14:39:21.9931545-03:00'
                            entity: QrCodeLocation
                            status: CREATED
                            body:
                              merchant:
                                postalCode: '61078147'
                                city: string
                                name: string
                                merchantCategoryCode: '5067'
                              url: api-h.developer.btgpactual.com/v1/p/v2/cobv/74e04f7301c0461381316e4d33ccf94e
                              emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/74e04f7301c0461381316e4d33ccf94e5204506753039865802BR5906string6006string61086107814762070503***630414CE
                              type: COBV
                              id: '7180308139108764523'
                            tags: []
                          amount:
                            original: '120.60'
                          key: string
                          payerQuestion: string
                          additionalInformation:
                            - key: string
                              value: string
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: update-payment-slip-pix
      summary: Update Payment Slip Pix information
      description: ''
  /foreign-exchange/indicative/buy/{accountId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxBuyIndicativeQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Indicative Quotes
      parameters:
        - name: accountId
          description: The Id of of the Account that will do the indicative quote.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxBuyIndicativeQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchangeIndicative
                      status: INDICATIVE
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        operationSide: BUY
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25T00:00:00'
                        baseCurrencySettlementDate: '2021-03-25T00:00:00'
                        indicative: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-buy-indicative-quote-specific-account
      summary: Create a new buy indicative Quote for a specific account
      description: Endpoint used to create a new BUY INDICATIVE quote for a specific account..
  /foreign-exchange/indicative/sell/{accountId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxSellIndicativeQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Indicative Quotes
      parameters:
        - name: accountId
          description: The Id of of the Account that will do the indicative quote.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxSellIndicativeQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchangeIndicative
                      status: INDICATIVE
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        operationSide: SELL
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25T00:00:00'
                        baseCurrencySettlementDate: '2021-03-25T00:00:00'
                        indicative: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-sell-indicative-quote-specific-account
      summary: Create a new sell indicative Quote for a specific account
      description: Endpoint used to create a new SELL INDICATIVE quote for a specific account..
  /foreign-exchange/indicative/buy:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxBuyIndicativeQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Indicative Quotes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxBuyIndicativeQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchangeIndicative
                      status: INDICATIVE
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        operationSide: BUY
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25T00:00:00'
                        baseCurrencySettlementDate: '2021-03-25T00:00:00'
                        indicative: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-buy-indicative-quote
      summary: Create a new buy indicative Quote
      description: Endpoint used to create a new BUY INDICATIVE quote.
  /foreign-exchange/indicative/managerial/sell:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxSellIndicativeQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Indicative Quotes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxSellIndicativeQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchangeIndicative
                      status: INDICATIVE
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        operationSide: SELL
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25T00:00:00'
                        baseCurrencySettlementDate: '2021-03-25T00:00:00'
                        indicative: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-sell-indicative-managerial-quote
      summary: Create a new sell indicative managerial Quote
      description: Endpoint used to create a new SELL INDICATIVE managerial quote.
  /foreign-exchange/indicative/managerial/sell/{accountId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxSellIndicativeQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Indicative Quotes
      parameters:
        - name: accountId
          description: The Id of of the Account that will do the indicative quote.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxSellIndicativeQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchangeIndicative
                      status: INDICATIVE
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        operationSide: SELL
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25T00:00:00'
                        baseCurrencySettlementDate: '2021-03-25T00:00:00'
                        indicative: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-sell-indicative-managerial-quote-specific-account
      summary: Create a new sell indicative managerial Quote for a specific account
      description: Endpoint used to create a new SELL INDICATIVE managerial quote for a specific account..
  /ccme/investment/{accountId}:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcmeInvestmentPost'
        required: true
      tags:
        - CCME Investment
      parameters:
        - name: accountId
          description: 'The Account Id (Uuid) of Beneficiary. For example: {54c4ed21-5f1f-4942-a3f8-b96537566cb5}'
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleResponse'
              examples:
                Response:
                  value:
                    version: string
                    status: 200
                    body:
                      clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca5
                      pactualId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-ccme-account
      summary: Process Investment
      description: ''
  /ccme/{pactualId}:
    get:
      tags:
        - CCME Investment
      parameters:
        - examples:
            PactualIdExample:
              value: '"53d837b1-f720-4190-9bc3-e356cd36756a"'
          name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcmeGetResponse'
          description: This method returns investment information.
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-ccme
      summary: Get CCME Investment
      description: ''
  /foreign-exchange/default/buy:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxBuyQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Quotes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxBuyQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchange
                      status: CREATED
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        expirationDate: '2021-03-25T14:41:14.1611053-03:00'
                        quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
                        acceptTimestamp: '0001-01-01T00:00:00'
                        operationSide: BUY
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25'
                        baseCurrencySettlementDate: '2021-03-25'
                        bankingChannelId: aa9ce499242349d28c4facf5015555c8
                        accountId: 13191aa1-6da7-4748-9d09-
                        preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
                        indicative: 'false'
                        isManagerialOnly: 'false'
                        aggregationDateTime: '2021-03-25T18:00:00.0000000-03:00'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-buy-quote
      summary: Create a new buy Quote
      description: Endpoint used to create a new BUY quote for the default account.
  /foreign-exchange/default/buy/{accountId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxBuyQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Quotes
      parameters:
        - name: accountId
          description: The Id of of the Account that will do the trade.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxBuyQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchange
                      status: CREATED
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        expirationDate: '2021-03-25T14:41:14.1611053-03:00'
                        quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
                        acceptTimestamp: '0001-01-01T00:00:00'
                        operationSide: BUY
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25'
                        baseCurrencySettlementDate: '2021-03-25'
                        bankingChannelId: aa9ce499242349d28c4facf5015555c8
                        accountId: 13191aa1-6da7-4748-9d09-
                        preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
                        indicative: 'false'
                        isManagerialOnly: 'false'
                        aggregationDateTime: '2021-03-25T18:00:00.0000000-03:00'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-buy-quote-specific-account
      summary: Create a new buy Quote for a specific account
      description: Endpoint used to create a new BUY quote for a specific account.
  /foreign-exchange/default/sell:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxSellQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
                  baseCurrency: USD
                  senderName: Paulo
                  countryCode: BR
        required: true
      tags:
        - Foreign Exchange Quotes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxSellQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchange
                      status: CREATED
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        expirationDate: '2021-03-25T14:41:14.1611053-03:00'
                        quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
                        acceptTimestamp: '0001-01-01T00:00:00'
                        operationSide: SELL
                        senderName: Paulo
                        countryCode: BR
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25'
                        baseCurrencySettlementDate: '2021-03-25'
                        docAccountId: 00000000-0000-0000-0000-000000000000
                        accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
                        preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
                        indicative: 'false'
                        isManagerialOnly: 'false'
                        aggregationDateTime: '2021-03-25T18:00:00.0000000-03:00'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-sell-quote
      summary: Create a new sell Quote
      description: Endpoint used to create a new SELL quote for the default account.
  /foreign-exchange/default/sell/{accountId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxSellQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - UAT
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Quotes
      parameters:
        - name: accountId
          description: The Id of of the Account that will do the trade.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxSellQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchange
                      status: CREATED
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        expirationDate: '2021-03-25T14:41:14.1611053-03:00'
                        quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
                        operationSide: SELL
                        senderName: Paulo
                        countryCode: BR
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25'
                        baseCurrencySettlementDate: '2021-03-25'
                        accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
                        preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
                        indicative: 'false'
                        isManagerialOnly: 'false'
                        aggregationDateTime: '2021-03-25T18:00:00.0000000-03:00'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-sell-quote-specific-account
      summary: Create a new sell Quote for a specific account
      description: Endpoint used to create a new SELL quote for a specific account.
  /foreign-exchange/indicative/managerial/buy:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxBuyIndicativeQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Indicative Quotes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxBuyIndicativeQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchangeIndicative
                      status: INDICATIVE
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        operationSide: BUY
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25T00:00:00'
                        baseCurrencySettlementDate: '2021-03-25T00:00:00'
                        indicative: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-buy-indicative-managerial-quote
      summary: Create a new buy indicative managerial Quote
      description: Endpoint used to create a new BUY INDICATIVE managerial quote.
  /foreign-exchange/indicative/managerial/buy/{accountId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxBuyIndicativeQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Indicative Quotes
      parameters:
        - name: accountId
          description: The Id of of the Account that will do the indicative quote.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxBuyIndicativeQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchangeIndicative
                      status: INDICATIVE
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        operationSide: BUY
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25T00:00:00'
                        baseCurrencySettlementDate: '2021-03-25T00:00:00'
                        indicative: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-buy-indicative-managerial-quote-specific-account
      summary: Create a new buy indicative managerial Quote for a specific account
      description: Endpoint used to create a new BUY INDICATIVE managerial quote for a specific account..
  /foreign-exchange/managerial/buy/{bankChannelId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxManagerialBuyQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - UAT
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Quotes
      parameters:
        - name: bankChannelId
          description: The Id of the Banking Channel, the banking channel contains the SWIFT account information, it can be retrieved using Banking Channel API.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxManagerialBuyQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchange
                      status: CREATED
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        expirationDate: '2021-03-25T14:41:14.1611053-03:00'
                        quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
                        operationSide: BUY
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25'
                        baseCurrencySettlementDate: '2021-03-25'
                        bankChannelId: aa9ce499242349d28c4facf5015555c8
                        accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
                        indicative: 'false'
                        isManagerialOnly: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-managerial-buy-quote
      summary: Create a new managerial buy Quote
      description: Endpoint used to create a new managerial BUY quote for the default account.
    parameters:
      - name: bankChannelId
        schema:
          type: string
        in: path
        required: true
  /foreign-exchange/managerial/buy/{bankChannelId}/{accountId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxManagerialBuyQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - UAT
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
        required: true
      tags:
        - Foreign Exchange Quotes
      parameters:
        - name: bankChannelId
          description: The Id of the Banking Channel, the banking channel contains the SWIFT account information, it can be retrieved using Banking Channel API.
          schema:
            nullable: true
            type: string
          in: path
          required: true
        - name: accountId
          description: The Id of the Account that will do the trade
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxManagerialBuyQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchange
                      status: CREATED
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        expirationDate: '2021-03-25T14:41:14.1611053-03:00'
                        quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
                        operationSide: BUY
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amountCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25'
                        baseCurrencySettlementDate: '2021-03-25'
                        bankChannelId: aa9ce499242349d28c4facf5015555c8
                        accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
                        indicative: 'false'
                        isManagerialOnly: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-managerial-buy-quote-specific-account
      summary: Create a new managerial BUY quote for a specific account
      description: Endpoint used to create a new managerial BUY quote for a specific account.
    parameters:
      - name: accountId
        schema:
          type: string
        in: path
        required: true
  /foreign-exchange/managerial/sell:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxManagerialSellQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
                  senderName: Paulo
                  countryCode: BR
        required: true
      tags:
        - Foreign Exchange Quotes
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxManagerialSellQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchange
                      status: CREATED
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        expirationDate: '2021-03-25T14:41:14.1611053-03:00'
                        quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
                        operationSide: SELL
                        senderName: Paulo
                        countryCode: AF
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25'
                        baseCurrencySettlementDate: '2021-03-25'
                        accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
                        indicative: 'false'
                        isManagerialOnly: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-managerial-sell-quote
      summary: Create a new managerial sell Quote
      description: Endpoint used to create a new quote.
  /foreign-exchange/managerial/sell/{accountId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxManagerialSellQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrencySettlementDate: '2021-02-18'
                  quoteCurrencySettlementDate: '2021-02-18'
                  baseCurrency: USD
                  senderName: Paulo
                  countryCode: BR
        required: true
      tags:
        - Foreign Exchange Quotes
      parameters:
        - name: accountId
          description: The Id of the Account that will do the trade.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxManagerialSellQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
                      createTimestamp: '2021-03-25T17:39:14.873622+00:00'
                      lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
                      entity: ForeignExchange
                      status: CREATED
                      body:
                        unitPrice: 5.7702
                        total: 63.47
                        expirationDate: '2021-03-25T14:41:14.1611053-03:00'
                        quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
                        operationSide: SELL
                        senderName: Paulo
                        countryCode: AF
                        quoteCurrency: BRL
                        baseCurrency: USD
                        amount: 11
                        quoteCurrencySettlementDate: '2021-03-25'
                        baseCurrencySettlementDate: '2021-03-25'
                        accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
                        indicative: 'false'
                        isManagerialOnly: 'true'
                      tags: []
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-managerial-sell-quote-specific-account
      summary: Create a new managerial sell Quote for a specific account
      description: Endpoint used to create a new quote for a specific account.
  /payment/payment-slip-pix/v2/{pactualId}:
    get:
      tags:
        - BolePix
      parameters:
        - name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipPixResponse'
              examples:
                PaymentSlipPixResponse:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 07a4611e-9be3-44e7-9f9e-f297f83db42c
                      clientRequestId: e3936720-11fa-4897-bc70-ce7fbbdd88d6
                      createTimestamp: '2024-03-12T11:52:32.6650397+00:00'
                      lastUpdateTimestamp: '2024-03-12T11:54:49.4220415+00:00'
                      entity: PaymentSlipPix
                      status: PAID
                      body:
                        paymentSlip:
                          amount: 17329
                          dueDate: '2024-03-14'
                          customer:
                            name: FMaria Melissa Nina Castro
                            taxId: '46509134624'
                            street: Rua Araticum
                            number: '344'
                            numberComplement: 'false'
                            neighborhood: Gavea
                            city: VESPASIANO
                            stateCode: MG
                            zipCode: '33202686'
                          overdueDate: '2024-03-15'
                          description: Sr. Caixa, não aceitar o pagamento após o vencimento;
                          barCode: '20898965500000173290030010000048890503598123'
                          digitableLine: '20890030041000004889105035984607896550000017321'
                          beneficiaryAccount:
                            accountId: 2c4ffeea-2ef7-4b4d-ae43-ce5af3ec369e
                            clientId: 8c268aa2-787a-4a8b-808b-84b882b20f3f
                            account: '123456'
                            branch: '30'
                            bank: '208'
                            taxId: '63361304000102'
                            name: Jaqueline e Lívia Doces & Salgados ME
                            personType: J
                            accountType: CC
                            status: ACTIVE
                            lockedAccount: false
                            bankBranchAccount: '208_30_123456'
                            createTimestamp: '2022-05-23T15:48:11.3065868+00:00'
                            lastUpdateTimestamp: '2022-06-01T20:18:20.7443641+00:00'
                            beneficiaryTreatyCode: '637889067811531600'
                            beneficiaryMarketTreatyCode: '01'
                            defaultAccount: true
                            transactionalType: PixMerchant
                            clientAccountType: BaaS_Default
                          divergentAmountType: 0
                          paymentType: 0
                          totalInstallments: 0
                          partialPaymentMaxQuantity: 0
                        pix:
                          calendar:
                            dueDate: '2024-03-14'
                            expirationAfterPayment: 0
                          debtor:
                            cpf: '46509134624'
                            name: Maria Melissa Nina Castro
                            publicArea: Rua Araticum
                            city: VESPASIANO
                            state: MG
                            postalCode: '33202686'
                          receiver:
                            cnpj: '63361304000102'
                            name: Jaqueline e Lívia Doces & Salgados ME
                            publicArea: SIA Trecho 17 Rua 10
                            city: BRASILIA
                            state: DF
                            postalCode: '71200228'
                          loc:
                            merchant:
                              city: BRASILIA
                              name: Jaqueline e Lívia Doces & Salgados ME
                            url: api.developer.btgpactual.com/v1/p/v2/cobv/09bc3f1f915f46c781eaa87be107809f
                            emv: 00020101021233960014br.gov.bcb.pix2574api.developer.btgpactual.com/v1/p/v2/cobv/ab0e299129714a289747ace7b305dc295204000053039812802BR5923Jaqueline e Lívia Doces & Salgados ME6008BRASILIA62070503***63044A13
                            type: COBV
                            id: '19138236256733191'
                          amount:
                            original: '173.29'
                          key: 59342e0f-ea30-45c5-b714-15ae2c710190
                        movementDetailPaymentSlip:
                          status: CANCELED
                        movementDetailPix:
                          status: PAID
                          movementDate: '2024-03-12'
                          authorizationId: '2006004381'
                          amountPaid: 173.29
                      tags:
                        - id_venda-1549675
                        - id_lancamento-9239944
                        - st_sistema-G2
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-payment-slip-pix-v2
      summary: Get the information of a Payment Slip Pix V2
      description: Use this endpoint in order to require the information of a valid PaymentSlipPix by passing the pactualId field.
  /foreign-exchange/netting/swift/send:
    description: ''
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxNettingSwiftRequestBody'
            examples:
              Example:
                value:
                  pactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
                  swiftReference: NTG18
        required: true
      tags:
        - Foreign Exchange Netting
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxNettingSwiftReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
                      clientRequestId: 62c85fe5-9a6c-46cf-b877-95fc1d3f39ef
                      createTimestamp: '2023-07-27T03:10:58.848Z'
                      lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                      entity: ForeignExchangeNetting
                      status: ENQUEUED
                      body:
                        baseCurrencyTotalAmount: 1847
                        movementIds:
                          1fc646eb-aa91-c2b8-b002-b288485fc118: 'null'
                          abc27a94-eac3-4ab0-ba6d-3d015a6d7ea8: 'null'
                        accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                        operationSide: SELL
                        meanTax: 4.945559
                        settlementDate: '2024-01-17'
                        SwiftReference: NTG18
                        currency: USD
                        quoteCurrencyTotalAmount: 9134.45
                        totalQuotes: 1847
                      tags: string
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: put-fx-netting-swift-send
      summary: Send the swift code
      description: Endpoint used to send the swift code.
  /foreign-exchange/pre-ticket/sell/new/{bankChannelId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxPreTicketSellQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrency: USD
                  senderName: Paulo
        required: true
      tags:
        - Foreign Exchange Pré-Ticket
      parameters:
        - name: bankChannelId
          description: The Id of the Banking Channel, the banking channel contains the SWIFT account information, it can be retrieved using Banking Channel API.
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxPreTicketQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-pre-ticket-sell-quote
      summary: Create a new pre ticket sell Quote
      description: Endpoint used to create a new pre ticket quote.
  /foreign-exchange/pre-ticket/sell/new/{bankChannelId}/{accountId}:
    description: ''
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FxPreTicketSellQuoteRequestBody'
            examples:
              Example:
                value:
                  clientRequestId: guid/uuid
                  tags:
                    - Teste
                  amount: 11
                  baseCurrency: USD
                  senderName: Paulo
        required: true
      tags:
        - Foreign Exchange Pré-Ticket
      parameters:
        - name: bankChannelId
          description: The Id of the Banking Channel, the banking channel contains the SWIFT account information, it can be retrieved using Banking Channel API.
          schema:
            nullable: true
            type: string
          in: path
          required: true
        - name: accountId
          description: The Id of the Account that will do the trade
          schema:
            nullable: true
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FxPreTicketQuoteReponse'
              examples:
                Example:
                  value:
                    version: 0.1.0
                    status: 200
                    body:
                      pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
                      clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-fx-pre-ticket-sell-quote-specific-account
      summary: Create a new pre ticket sell Quote for a specific account.
      description: Endpoint used to create a new pre ticket quote for a specific account..
    parameters:
      - name: accountId
        schema:
          type: string
        in: path
        required: true
  /split/rule/managed/{pactualId}:
    get:
      tags:
        - CashIn Split (Rules)
      parameters:
        - name: pactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspManagedRuleEntityEnvelopeSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-rule-managed-pactualId
      summary: Get a managed rule by pactualId
      description: Endpoint used to get a managed rule by pactualId
    put:
      requestBody:
        description: Payload for managed rule update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CspManagedRuleUpdateRequest'
      tags:
        - CashIn Split (Rules)
      parameters:
        - name: pactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspManagedRuleEntityEnvelopeSucessApiResponseEnvelope'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: put-split-rule-managed-pactualId
      summary: Update managed rule
      description: Endpoint used to update a managed rule by pactualId
    delete:
      tags:
        - CashIn Split (Rules)
      parameters:
        - name: pactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '204':
          content:
            application/json:
              schema:
                $ref: '#/components/responses/SuccessNoContentResource'
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: delete-split-rule-managed-pactualId
      summary: Delete a managed rule by pactualId
      description: Endpoint used to delete a managed rule by pactualId
  /split/rule/managed/clientRequestId/{clientRequestId}:
    get:
      tags:
        - CashIn Split (Rules)
      parameters:
        - name: clientRequestId
          description: Client unique ID
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspManagedRuleEntityEnvelopeSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-rule-managed-clientRequestId
      summary: Get a managed rule by clientRequestId
      description: Endpoint used to get a managed rule by clientRequestId
  /split/rule/managed:
    get:
      tags:
        - CashIn Split (Rules)
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspManagedRuleEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-rule-managed
      summary: Get all managed rules
    post:
      requestBody:
        description: Payload for managed rule creation
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CspManagedRuleRequest'
      tags:
        - CashIn Split (Rules)
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspManagedRuleEntityEnvelopeSucessApiResponseEnvelope'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-split-rule-managed
      summary: Creation of a managed rule
  /split/rule/oneshot/{pactualId}:
    get:
      tags:
        - CashIn Split (Rules)
      parameters:
        - name: pactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspOneShotRuleEntityEnvelopeSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-rule-oneshot-pactualId
      summary: Get a One shot rule by pactualId
  /split/rule/oneshot/clientRequestId/{clientRequestId}:
    get:
      tags:
        - CashIn Split (Rules)
      parameters:
        - name: clientRequestId
          description: Client unique ID
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspOneShotRuleEntityEnvelopeSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-rule-oneshot-clientRequestId
      summary: Get a One shot rule by clientRequestId
  /split/transaction/summary:
    get:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: paymentDateFrom
          schema:
            format: date-time
            type: string
          in: query
        - name: paymentDateTo
          schema:
            format: date-time
            type: string
          in: query
        - name: accountId
          schema:
            format: uuid
            type: string
          in: query
        - name: paymentType
          schema:
            $ref: '#/components/schemas/CspSplitTransactionType'
          in: query
        - name: paymentTaxId
          schema:
            type: string
          in: query
        - name: paymentPixKey
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspPaymentSummaryResponseIEnumerableSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-transaction-summary
      summary: Get transaction summary
      description: 'Returns a summary of transactions according to the passed filters. The summary has 3 grouping levels: (Grouped by payment date and debit account) => (Grouped by payment type) => (Grouped by credit account)'
  /split/transaction/process-payments:
    put:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: paymentBaseDate
          description: Process transactions with this payment date.
          schema:
            format: date-time
            type: string
          in: query
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: put-split-transaction-process-payments
      summary: Process All Payments Approved for the current date
      description: Process payments of transactions that have 'APPROVED' status. Transactions will be aggregated for payment according to (payment type, debit account and credit account). If the 'disallowAggregation' attribute is 'true' the transaction will not be aggregated and individual payments will be made for these transactions.
  /split/transaction/processing-schedule:
    get:
      tags:
        - CashIn Split (Transactions)
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspProcessingScheduleListSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-transaction-processing-schedule
      summary: Get the schedule for automatic processing
      description: Get the schedule for automatic processing.
    put:
      requestBody:
        description: Schedule Hours
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CspProcessingSchedule'
      tags:
        - CashIn Split (Transactions)
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: put-split-transaction-processing-schedule
      summary: Sets the schedule for automatic processing
      description: Sets the schedule for automatic processing payments of transactions that have 'APPROVED' status.  Transactions will be aggregated for payment according to (payment type, debit account and credit account). If the 'disallowAggregation' attribute is 'true' the transaction will not be aggregated and individual payments will be made for these transactions.
    delete:
      tags:
        - CashIn Split (Transactions)
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: delete-split-transaction-processing-schedule
      summary: Delete the schedule for automatic processing
      description: Delete the schedule for automatic processing.
  /split/transaction/{pactualId}:
    get:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: pactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-transaction-pactualId
      summary: Get a transaction by PactualId
  /split/transaction/cashIn/{cashInPactualId}:
    get:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: cashInPactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-transaction-cashInPactualId
      summary: Get a transaction by CashIn PactualId
  /split/transaction/cashIn/endToEnd/{endToEndId}:
    get:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: endToEndId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-transaction-endToEndId
      summary: Get a transaction by endToEndId
  /split/transaction/cashin-date:
    get:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: cashInDateFrom
          schema:
            format: date-time
            type: string
          in: query
        - name: cashInDateTo
          schema:
            format: date-time
            type: string
          in: query
        - name: status
          schema:
            $ref: '#/components/schemas/CspSplitTransEntityStatus'
          in: query
        - name: accountId
          schema:
            format: uuid
            type: string
          in: query
        - name: cashinType
          schema:
            $ref: '#/components/schemas/CspTriggerType'
          in: query
        - name: paymentTaxId
          schema:
            type: string
          in: query
        - name: paymentPixKey
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-transaction-cashin-date
      summary: Get split transaction by cash-in date
  /split/transaction/payment-date:
    get:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: paymentDateFrom
          schema:
            format: date-time
            type: string
          in: query
        - name: paymentDateTo
          schema:
            format: date-time
            type: string
          in: query
        - name: status
          schema:
            $ref: '#/components/schemas/CspSplitTransEntityStatus'
          in: query
        - name: accountId
          schema:
            format: uuid
            type: string
          in: query
        - name: paymentType
          schema:
            $ref: '#/components/schemas/CspSplitTransactionType'
          in: query
        - name: paymentTaxId
          schema:
            type: string
          in: query
        - name: paymentPixKey
          schema:
            type: string
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-split-transaction-payment-date
      summary: Get split transaction by payment date
  /split/transaction/approve/{pactualId}:
    put:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: pactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: put-split-transaction-approve-pactualId
      summary: Approve a transaction by PactualId
      description: Approve transaction for payment processing.
  /split/transaction/approve/cashIn/{cashInPactualId}:
    put:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: cashInPactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
        - name: approveCanceledTo
          description: If the 'approveCanceledTo' parameter is 'true', transactions that are in 'CANCELED' status will also be approved.
          schema:
            default: false
            type: boolean
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: put-split-transaction-approve-cashInPactualId
      summary: Approve a transaction by CashIn PactualId
      description: Approves transactions, according to the passed filters, and that are in 'PENDING' status for payment processing. If the 'approveCanceledTo' parameter is 'true', transactions that are in 'CANCELED' status will also be approved.
  /split/transaction/approve/cashIn/endToEnd/{endToEndId}:
    put:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: endToEndId
          schema:
            type: string
          in: path
          required: true
        - name: approveCanceledTo
          description: If the 'approveCanceledTo' parameter is 'true', transactions that are in 'CANCELED' status will also be approved.
          schema:
            default: false
            type: boolean
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: put-split-transaction-approve-endToEndId
      summary: Approve a transaction by CashIn endToEndId
      description: Approves transactions, according to the passed filters, and that are in 'PENDING' status for payment processing. If the 'approveCanceledTo' parameter is 'true', transactions that are in 'CANCELED' status will also be approved.
  /split/transaction/approve/cashin-date:
    put:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: cashInDateFrom
          schema:
            format: date-time
            type: string
          in: query
        - name: cashInDateTo
          schema:
            format: date-time
            type: string
          in: query
        - name: accountId
          schema:
            format: uuid
            type: string
          in: query
        - name: cashinType
          schema:
            $ref: '#/components/schemas/CspTriggerType'
          in: query
        - name: paymentTaxId
          schema:
            type: string
          in: query
        - name: paymentPixKey
          schema:
            type: string
          in: query
        - name: approveCanceledTo
          description: If the 'approveCanceledTo' parameter is 'true', transactions that are in 'CANCELED' status will also be approved.
          schema:
            default: false
            type: boolean
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: put-split-transaction-approve-cashin-date
      summary: Approve split transaction by cash-in date
      description: Approves transactions, according to the passed filters, and that are in 'PENDING' status for payment processing. If the 'approveCanceledTo' parameter is 'true', transactions that are in 'CANCELED' status will also be approved.
  /split/transaction/approve/payment-date:
    put:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: paymentDateFrom
          schema:
            format: date-time
            type: string
          in: query
        - name: paymentDateTo
          schema:
            format: date-time
            type: string
          in: query
        - name: accountId
          schema:
            format: uuid
            type: string
          in: query
        - name: paymentType
          schema:
            $ref: '#/components/schemas/CspSplitTransactionType'
          in: query
        - name: paymentTaxId
          schema:
            type: string
          in: query
        - name: paymentPixKey
          schema:
            type: string
          in: query
        - name: approveCanceledTo
          description: If the 'approveCanceledTo' parameter is 'true', transactions that are in 'CANCELED' status will also be approved.
          schema:
            default: false
            type: boolean
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: put-split-transaction-approve-payment-date
      summary: Approve split transaction by payment date
      description: Approves transactions, according to the passed filters, and that are in 'PENDING' status for payment processing. If the 'approveCanceledTo' parameter is 'true', transactions that are in 'CANCELED' status will also be approved.
  /split/transaction/approve:
    post:
      requestBody:
        description: BTG Pactual BaaS unique ID
        content:
          application/json:
            schema:
              type: array
              items:
                format: uuid
                type: string
      tags:
        - CashIn Split (Transactions)
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-split-transaction-approve
      summary: Approve a transaction by many PactualIds
      description: Approves transactions, according to list of PactualId, for payment processing.
  /split/transaction/cancel/{pactualId}:
    delete:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: pactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: delete-split-transaction-cancel-pactualId
      summary: Cancel a transaction by PactualId
      description: Cancel transaction.
  /split/transaction/cancel/cashIn/{cashInPactualId}:
    delete:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: cashInPactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
        - name: cancelApprovedTo
          description: If the 'cancelApprovedTo' parameter is 'true', transactions in the 'APPROVED' status will also be canceled.
          schema:
            default: false
            type: boolean
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: delete-split-transaction-cancel-cashInPactualId
      summary: Cancel a transaction by CashIn PactualId
      description: Cancels transactions, according to the filters passed, and that are in the 'PENDING' status. If the 'cancelApprovedTo' parameter is 'true', transactions in the 'APPROVED' status will also be canceled.
  /split/transaction/cancel/cashIn/endToEnd/{endToEndId}:
    delete:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: endToEndId
          schema:
            type: string
          in: path
          required: true
        - name: cancelApprovedTo
          description: If the 'cancelApprovedTo' parameter is 'true', transactions in the 'APPROVED' status will also be canceled.
          schema:
            default: false
            type: boolean
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: delete-split-transaction-cancel-endToEndId
      summary: Cancel a transaction by CashIn endToEndId
      description: Cancels transactions, according to the filters passed, and that are in the 'PENDING' status. If the 'cancelApprovedTo' parameter is 'true', transactions in the 'APPROVED' status will also be canceled.
  /split/transaction/cancel/cashin-date:
    delete:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: cashInDateFrom
          schema:
            format: date-time
            type: string
          in: query
        - name: cashInDateTo
          schema:
            format: date-time
            type: string
          in: query
        - name: accountId
          schema:
            format: uuid
            type: string
          in: query
        - name: cashinType
          schema:
            $ref: '#/components/schemas/CspTriggerType'
          in: query
        - name: paymentTaxId
          schema:
            type: string
          in: query
        - name: paymentPixKey
          schema:
            type: string
          in: query
        - name: cancelApprovedTo
          description: If the 'cancelApprovedTo' parameter is 'true', transactions in the 'APPROVED' status will also be canceled.
          schema:
            default: false
            type: boolean
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: delete-split-transaction-cancel-cashin-date
      summary: Cancel split transaction by cash-in date
      description: Cancels transactions, according to the filters passed, and that are in the 'PENDING' status. If the 'cancelApprovedTo' parameter is 'true', transactions in the 'APPROVED' status will also be canceled.
  /split/transaction/cancel/payment-date:
    delete:
      tags:
        - CashIn Split (Transactions)
      parameters:
        - name: paymentDateFrom
          schema:
            format: date-time
            type: string
          in: query
        - name: paymentDateTo
          schema:
            format: date-time
            type: string
          in: query
        - name: accountId
          schema:
            format: uuid
            type: string
          in: query
        - name: paymentType
          schema:
            $ref: '#/components/schemas/CspSplitTransactionType'
          in: query
        - name: paymentTaxId
          schema:
            type: string
          in: query
        - name: paymentPixKey
          schema:
            type: string
          in: query
        - name: cancelApprovedTo
          description: If the 'cancelApprovedTo' parameter is 'true', transactions in the 'APPROVED' status will also be canceled.
          schema:
            default: false
            type: boolean
          in: query
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: delete-split-transaction-cancel-payment-date
      summary: Cancel split transaction by payment date
      description: Cancels transactions, according to the filters passed, and that are in the 'PENDING' status. If the 'cancelApprovedTo' parameter is 'true', transactions in the 'APPROVED' status will also be canceled.
  /split/transaction/cancel:
    post:
      requestBody:
        description: BTG Pactual BaaS unique ID
        content:
          application/json:
            schema:
              type: array
              items:
                format: uuid
                type: string
      tags:
        - CashIn Split (Transactions)
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-split-transaction-cancel
      summary: Cancel a transaction by many PactualIds
      description: Cancels transactions, according to list of PactualId.
  /payment/payment-slip/pdf/{pactualId}:
    get:
      tags:
        - Payment Slips
        - BolePix
      parameters:
        - name: pactualId
          description: Unique resource Identifier (Uuid) generated by api.
          schema:
            type: string
          in: path
          required: true
        - name: isBrlFormat
          description: |
            Formatting to Brazilian pattern.

            |Code |Format|
            |----------|:-------------|
            |false|R$ 10,000.00|
            |true|R$ 10.000,00|
          schema:
            type: boolean
          in: query
          required: false
      responses:
        '200':
          content:
            application/pdf: {}
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security: []
      operationId: get-payment-slip-pdf-pactualId
      summary: Download payment slip as PDF by Id
      description: 'Api for downloading a payment slip as a PDF file. The response of this method is the actual PDF archive for the required payment slip. Simply copy and paste the request URL on your browser to download the PDF. '
  /payment/payment-slip/split/sync/account/{accountId}:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipSplitRequest'
        required: true
      tags:
        - PaymentSlipsSplit
      parameters:
        - name: accountId
          description: 'The Account Id (Uuid) of Beneficiary. For example: {54c4ed21-5f1f-4942-a3f8-b96537566cb5}'
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipSplitGetResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-split-sync-account
      summary: Generate a payment slip for specific account (CashIn Split)
      description: Synchronous API for processing payment slips to an specific account. (CashIn Split)
  /payment/payment-slip/split/sync:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipSplitRequest'
        required: true
      tags:
        - PaymentSlipsSplit
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipSplitGetResponse'
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-split-sync
      summary: Generate a payment slip for default account  (CashIn Split)
      description: This method is called when sending single instances of payment slip to be processed by our infrastructure synchronously. (CashIn Split)
  /payment/payment-slip-pix/split/account/{accountId}:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipPixSplitRequest'
        required: true
      tags:
        - BolePixSplit
      parameters:
        - name: accountId
          description: 'The Account Id (Uuid) of Beneficiary. For example: {54c4ed21-5f1f-4942-a3f8-b96537566cb5}'
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipPixPostResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-pix-split-account
      summary: Generate a payment slip with QR Code pix for specific account (CashIn Split)
      description: This method is called when sending single instances of PaymentSlipPix to be processed by our infrastructure. (CashIn Split)
  /payment/payment-slip-pix-short/split/account/{accountId}:
    post:
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PaymentSlipPixSplitShortRequest'
        required: true
      tags:
        - BolePixSplit
      parameters:
        - name: accountId
          description: 'The Account Id (Uuid) of Beneficiary. For example: {54c4ed21-5f1f-4942-a3f8-b96537566cb5}'
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentSlipPixPostResponse'
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-payment-slip-pix-short-split-account
      summary: Generate a payment slip with QR Code pix for specific account with a simplified contract (CashIn Split)
      description: This method is called when sending single instances of PaymentSlipPix to be processed by our infrastructure. (CashIn Split)
  /ccb-product:
    get:
      tags:
        - CCB Issuance (Product)
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcbIssuanceProductBaseListSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-ccb-issuance-product
      summary: Get all CCB products
      description: Endpoint used to get all CCB products
  /ccb-product/{productProfileId}:
    get:
      tags:
        - CCB Issuance (Product)
      parameters:
        - name: productProfileId
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcbIssuanceProductBaseSucessApiResponseEnvelope'
          description: Success
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-ccb-issuance-product-productProfileId
      summary: Get a CCB product by productProfileId
      description: Endpoint used to get a CCB product by productProfileId
  /ccb-issuance/quotation:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcbIssuanceQuotationRequest'
      tags:
        - CCB Issuance (Quotation)
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcbIssuanceQuotationSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-ccb-issuance-quotation
      summary: Create a CCB Issuance quotation
  /ccb-issuance/quotation/{pactualId}:
    get:
      tags:
        - CCB Issuance (Quotation)
      parameters:
        - name: pactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcbIssuanceQuotationSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-ccb-issuance-quotation-pactualId
      summary: Get a CCB Issuance quotation by pactualId
      description: Endpoint used to get a CCB Issuance quotation by pactualId
  /ccb-issuance/quotation/clientRequestId/{clientRequestId}:
    get:
      tags:
        - CCB Issuance (Quotation)
      parameters:
        - name: clientRequestId
          description: Client unique ID
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcbIssuanceQuotationSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-ccb-issuance-quotation-clientRequestId
      summary: Get a CCB Issuance quotation by clientRequestId
      description: Endpoint used to get a CCB Issuance quotation by clientRequestId
  /ccb-issuance/proposal:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcbIssuanceProposalRequest'
      tags:
        - CCB Issuance (Proposal)
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcbIssuanceProposalSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: post-ccb-issuance-proposal
      summary: Create a CCB Issuance proposal
  /ccb-issuance/proposal/{pactualId}:
    get:
      tags:
        - CCB Issuance (Proposal)
      parameters:
        - name: pactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcbIssuanceProposalSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-ccb-issuance-proposal-pactualId
      summary: Get a CCB Issuance proposal by pactualId
      description: Endpoint used to get a CCB Issuance proposal by pactualId
  /ccb-issuance/proposal/clientRequestId/{clientRequestId}:
    get:
      tags:
        - CCB Issuance (Proposal)
      parameters:
        - name: clientRequestId
          description: Client unique ID
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcbIssuanceProposalSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-ccb-issuance-proposal-clientRequestId
      summary: Get a CCB Issuance proposal by clientRequestId
      description: Endpoint used to get a CCB Issuance proposal by clientRequestId
  /ccb-issuance/assignment/{pactualId}:
    get:
      tags:
        - CCB Issuance (Assignment)
      parameters:
        - name: pactualId
          description: BTG Pactual BaaS unique ID
          schema:
            format: uuid
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcbIssuanceAssignmentSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-ccb-issuance-assignment-pactualId
      summary: Get a CCB Issuance assignment by pactualId
      description: Endpoint used to get a CCB Issuance assignment by pactualId
  /ccb-issuance/assignment/clientRequestId/{clientRequestId}:
    get:
      tags:
        - CCB Issuance (Assignment)
      parameters:
        - name: clientRequestId
          description: Client unique ID
          schema:
            type: string
          in: path
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CcbIssuanceAssignmentSucessApiResponseEnvelope'
          description: Success
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'
      security:
        - BaaSAuthorizer: []
      operationId: get-ccb-issuance-assignment-clientRequestId
      summary: Get a CCB Issuance assignment by clientRequestId
      description: Endpoint used to get a CCB Issuance assignment by clientRequestId
components:
  schemas:
    PactualId:
      format: uuid
      description: Unique resource identificator (uuid) generated by api.
      type: string
    ClientRequestId:
      description: The unique transaction identification given by the client side. This value can't be repeated.
      type: string
    CreateTimestamp:
      format: date-time
      description: The string representation of the Timestamp that the record was created (UTC).
      pattern: yyyy-MM-ddTHH:mm:ssZ
      type: string
    LastUpdateTimestamp:
      format: date-time
      description: The string representation of the Timestamp that the record was last updated (UTC).
      pattern: yyyy-MM-ddTHH:mm:ssZ
      type: string
    Status:
      description: The operation status.
      type: string
    Entity:
      description: Operation Contract Entity.
      type: string
    Tags:
      nullable: true
      description: Tags that can be sent by the client, it will be saved on the Entity, use as a metadata field
      uniqueItems: true
      type: array
      items:
        type: string
      example:
        - tag1
        - tag2
    ErrorCode:
      description: The error code.
      type: string
    ErrorDescription:
      description: The error description.
      type: string
    ApiEnvelope:
      description: BaaS Response API Envelope
      required:
        - version
        - status
      type: object
      properties:
        version:
          description: The api version.
          type: string
          example: 1.0.0
        status:
          format: int32
          description: The HTTP response code.
          type: integer
          example: 200
    EntityEnvelope:
      description: BaaS Entity Envelope
      required:
        - pactualId
        - clientRequestId
        - createTimestamp
        - lastUpdateTimestamp
        - status
        - entity
      type: object
      properties:
        pactualId:
          $ref: '#/components/schemas/PactualId'
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        createTimestamp:
          $ref: '#/components/schemas/CreateTimestamp'
        lastUpdateTimestamp:
          $ref: '#/components/schemas/LastUpdateTimestamp'
        status:
          $ref: '#/components/schemas/Status'
        entity:
          $ref: '#/components/schemas/Entity'
        tags:
          $ref: '#/components/schemas/Tags'
        errorCode:
          $ref: '#/components/schemas/ErrorCode'
        errorDescription:
          $ref: '#/components/schemas/ErrorDescription'
    SingleResponseBody:
      description: The response body of request of single resource.
      required:
        - clientRequestId
        - pactualId
      type: object
      properties:
        clientRequestId:
          description: Unique resource identificator given by the client.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
      example:
        clientRequestId: 4a068fe4-97c2-4c58-9abb-76f94d293ad0
        pactualId: 8cde0465-1579-4e1c-8cae-07096ebd7fcc
    ErrorResponse:
      title: PactualErrorResponse
      description: Default response body in case of any errors.
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          description: Http status code.
          type: string
        errors:
          description: Array of errors.
          type: array
          items:
            type: object
            properties:
              errorCode:
                type: string
              message:
                type: string
      example:
        version: 1.0.0
        status: 400
        errors:
          - errorCode: PCE001
            message: The field 'name' is required.
          - errorCode: PCE002
            message: The field 'taxId' is incorrect.
    SingleResponse:
      title: PactualSingleResponse
      description: Default response body for create single resource apis.
      required:
        - body
        - version
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/SingleResponseBody'
          description: Body with clientRequestId and pactualId.
          properties:
            clientRequestId:
              type: string
            pactualId:
              type: string
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
      example:
        version: '1.0'
        status: 200
        body:
          clientRequestId: daf17267-f26d-43e5-baef-074bb67c95c8
          pactualId: ad21c1a9-feb5-43b2-8b82-1e93b7cf5d50
    EntityEnvelopBase:
      description: ''
      required:
        - pactualId
        - clientRequestId
        - createTimestamp
        - lastUpdateTimestamp
        - status
        - entity
        - tags
      type: object
      properties:
        pactualId:
          description: The record primary key, used to identify the record for further operations. It is a string representation of a GUID (UUID)
          type: string
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response correlation
          type: string
        createTimestamp:
          format: date-time
          description: Date and time of the entity creation. Respects the GMT timezone
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: Date and time of the entity last modification. Respects the GMT timezone
          type: string
        status:
          description: The entity status
          type: string
        entity:
          description: Entity name
          type: string
        tags:
          description: Tags recorded in the request
          type: array
          items:
            type: string
        errorCode:
          description: The error code
          type: string
        errorDescription:
          description: The error description
          type: string
      example:
        pactualId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
        clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
        createTimestamp: '2020-07-15T19:26:10.703Z'
        lastUpdateTimestamp: '2020-07-15T19:26:10.703Z'
        status: some text
        entity: some text
        tags:
          - some text
          - some text
        errorCode: PCE001
        errorDescription: some text
    EmptyOKResponse:
      title: Root Type for EmptyOKResponse
      description: ''
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          format: int32
          description: The HTTP response code.
          type: integer
      example:
        version: 1.0.0
        status: 200
    BulkResponse:
      title: PactualBulkResponse
      description: Default success response body for bulk create resources requests apis.
      required:
        - body
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          description: Http status code.
          type: number
        body:
          $ref: '#/components/schemas/BulkResponseBody'
          description: The response body.
          properties:
            pactualBatchId:
              type: string
            items:
              type: array
              items:
                type: object
                properties:
                  clientRequestId:
                    type: string
                  pactualId:
                    type: string
      example:
        version: '1.0'
        status: 202
        body:
          pactualBulkId: bf07b500-43ac-4f59-84da-f17061ca73a3
          items:
            - clientRequestId: c7c147ec-5305-4ddc-9387-d0e165a09c4e
              pactualId: fb11703f-02d9-4a80-8dcc-53e597a8c5c5
            - clientRequestId: dce00b29-e7bb-454a-929b-fef105eddc39
              pactualId: bae5f7f6-6d8a-4994-849b-80eec0618d0a
    BulkResponseBody:
      description: The response body of request of bulk resource.
      required:
        - pactualBulkId
        - items
      type: object
      properties:
        pactualBulkId:
          description: Unique bulk request identificator (Uuid) generated by api.
          type: string
        items:
          description: A list with created items.
          type: array
          items:
            $ref: '#/components/schemas/SingleResponseBody'
      example:
        pactualBulkId: bf07b500-43ac-4f59-84da-f17061ca73a3
        items:
          - clientRequestId: c7c147ec-5305-4ddc-9387-d0e165a09c4e
            pactualId: fb11703f-02d9-4a80-8dcc-53e597a8c5c5
          - clientRequestId: dce00b29-e7bb-454a-929b-fef105eddc39
            pactualId: bae5f7f6-6d8a-4994-849b-80eec0618d0a
    ProblemDetails:
      type: object
      properties:
        type:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
        status:
          nullable: true
          format: int32
          type: integer
        detail:
          nullable: true
          type: string
        instance:
          nullable: true
          type: string
      additionalProperties:
        type: object
    AssigneePriority:
      description: ''
      required:
        - assigneeAccountId
        - priority
      type: object
      properties:
        description:
          description: ''
          type: string
        priority:
          description: ''
          type: integer
      example:
        assigneeAccountId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
        priority: 1
    AssigneeResponseBody:
      description: ''
      required:
        - body
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityEnvelopBase'
      properties:
        body:
          $ref: '#/components/schemas/AssigneeBody'
          description: Assignee data
      example:
        assigneeAccountId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
        clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
        createTimestamp: '2020-07-15T19:26:10.703Z'
        lastUpdateTimestamp: '2020-07-15T19:26:10.703Z'
        status: some text
        entity: some text
        tags:
          - some text
          - some text
        errorCode: PCE001
        errorDescription: some text
        body:
          bank: 208
          branch: 30
          account: 123456
          personType: J
          taxId: '46026341099'
          name: some text
          accountType: CC
          priority: 1
          email:
            - name@email.com
            - other@email.com
          reports:
            settlementServiceReportPactualId: 98ed9af1-02e2-4b19-be3f-09c4f9292a5a
            futureCreditReportPactualId: f5f1682e-ba28-40a9-9de9-5b07827e680e
    AssigneeBody:
      description: ''
      required:
        - account
        - branch
        - bank
        - taxId
        - personType
        - accountType
        - email
      type: object
      properties:
        account:
          description: Account number
          type: integer
        branch:
          description: Branch number
          type: integer
        bank:
          description: Bank number
          type: integer
        taxId:
          description: The Tax ID (CNPJ) of the Assignee
          type: string
        name:
          description: The name of the Assignee
          type: string
        personType:
          description: F = Person, J = Organization
          enum:
            - J
            - F
          type: string
        accountType:
          description: CC = Checking account, CP = Saving account
          enum:
            - CC
            - CP
          type: string
        priority:
          description: Assignee priority
          type: integer
        email:
          description: Assignee e-mail
          type: array
          items:
            type: string
        reports:
          $ref: '#/components/schemas/AssigneeReports'
      example:
        bank: 208
        branch: 30
        account: 123456
        personType: J
        taxId: '46026341099'
        name: some text
        accountType: CC
        priority: 1
        email:
          - name@email.com
          - other@email.com
        reports:
          settlementServiceReportPactualId: 98ed9af1-02e2-4b19-be3f-09c4f9292a5a
          futureCreditReportPactualId: f5f1682e-ba28-40a9-9de9-5b07827e680e
    AssigneeReports:
      description: Activated reports for the assignee
      type: object
      properties:
        settlementServiceReportPactualId:
          description: Settlement Service report
          type: string
        futureCreditReportPactualId:
          description: Future Credit report
          type: string
    AssigneeResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          $ref: '#/components/schemas/AssigneeResponseBody'
          description: ''
      example:
        version: '1.0'
        status: 200
        body:
          assigneeAccountId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
          clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
          createTimestamp: '2020-07-15T19:26:10.703Z'
          lastUpdateTimestamp: '2020-07-15T19:26:10.703Z'
          status: some text
          entity: some text
          tags:
            - some text
            - some text
          errorCode: PCE001
          errorDescription: some text
          body:
            bank: 208
            branch: 30
            account: 123456
            personType: J
            taxId: '46026341099'
            name: some text
            accountType: CC
            priority: 1
            email:
              - name@email.com
              - other@email.com
    AssigneesResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/AssigneeResponseBody'
      example:
        version: '1.0'
        status: 200
        body:
          - assigneeAccountId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
            clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
            createTimestamp: '2020-07-15T19:26:10.703Z'
            lastUpdateTimestamp: '2020-07-15T19:26:10.703Z'
            status: some text
            entity: some text
            tags:
              - some text
              - some text
            body:
              bank: 208
              branch: 30
              account: 123456
              personType: J
              taxId: '46026341099'
              name: some text
              accountType: CC
              priority: 1
              email:
                - name@email.com
                - other@email.com
              reports:
                settlementServiceReportPactualId: 98ed9af1-02e2-4b19-be3f-09c4f9292a5a
                futureCreditReportPactualId: f5f1682e-ba28-40a9-9de9-5b07827e680e
          - assigneeAccountId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
            clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
            createTimestamp: '2020-07-15T19:26:10.703Z'
            lastUpdateTimestamp: '2020-07-15T19:26:10.703Z'
            status: some text
            entity: some text
            tags:
              - some text
              - some text
            body:
              bank: 208
              branch: 30
              account: 123456
              personType: J
              taxId: '46026341099'
              name: some text
              accountType: CC
              priority: 1
              email:
                - name@email.com
                - other@email.com
              reports:
                settlementServiceReportPactualId: 98ed9af1-02e2-4b19-be3f-09c4f9292a5a
                futureCreditReportPactualId: f5f1682e-ba28-40a9-9de9-5b07827e680e
    PaymentNetworkResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          $ref: '#/components/schemas/PaymentNetworkResponseBody'
          description: Payment Network data
      example:
        version: 2.2.3
        status: 200
        body:
          - id: 1
            name: VISA
          - id: 2
            name: MASTERCARD
          - id: 3
            name: AMEX
          - id: 4
            name: ELO
          - id: 5
            name: HIPERCARD
    PaymentNetworkResponseBody:
      description: Payment Network data
      required:
        - id
        - name
      type: array
      items:
        $ref: '#/components/schemas/PaymentNetworkResponseBodyItem'
    PaymentNetworkResponseBodyItem:
      description: ''
      required:
        - id
        - name
      type: object
      properties:
        id:
          description: Payment Network ID
          type: integer
        name:
          description: Payment Network description
          type: string
      example:
        id: 1
        name: VISA
    CardIssuersResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          description: Card issuer data
          type: array
          items:
            $ref: '#/components/schemas/CardIssuerBody'
      example:
        version: '1.0'
        status: 200
        body:
          - cardIssuerId: daf17267-f26d-43e5-baef-074bb67c95c8
            paymentNetwork: VISA
            taxId: '46026341099'
            name: some text
            status: string
            createTimestamp: '2019-07-20T00:00:00.000Z'
            lastUpdateTimestamp: '2019-07-20T00:00:00.000Z'
    CardIssuerBody:
      description: ''
      required:
        - cardIssuerId
        - paymentNetwork
        - taxId
        - name
        - status
      type: object
      properties:
        cardIssuerId:
          description: The card issuer ID
          type: string
        paymentNetwork:
          description: The card issuer Payment Network
          type: string
        taxId:
          description: The card issuer Tax Id (CNPJ)
          type: string
        name:
          description: Card issuer name
          type: string
        status:
          description: Card issuer status
          type: string
        createTimestamp:
          description: The date and time in which the card issuer was created
          type: string
        lastUpdateTimestamp:
          description: The date and time in which the card issuer was last modified
          type: string
    CredReservBalanceBody:
      description: ''
      required:
        - provisioned
        - reserved
        - balance
        - date
        - paymentNetwork
        - cardIssuerId
      type: object
      properties:
        provisioned:
          description: Amount of receivable, in cents.
          type: integer
        reserved:
          description: Amount that was already reserved, in cents.
          type: integer
        balance:
          description: Amount available to be reserved, in cents.
          type: integer
        date:
          description: Date of the balance
          type: string
        paymentNetwork:
          description: Payment Network of the balance
          type: string
        cardIssuerId:
          description: Card issuer ID of the balance
          type: string
      example:
        provisioned: 12399900
        reserved: 99900
        balance: 12300000
        date: '2021-03-15'
        paymentNetwork: VISA
        cardIssuerId: 987456
    CredReservBalanceResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/CredReservBalanceBody'
      example:
        version: '1.0'
        status: 200
        body:
          - provisioned: 12399900
            reserved: 99900
            balance: 12300000
            date: '2021-03-15'
            paymentNetwork: VISA
            cardIssuerId: 987456
          - provisioned: 12399900
            reserved: 99900
            balance: 12300000
            date: '2021-03-15'
            paymentNetwork: VISA
            cardIssuerId: 987456
    CreditReservationRequest:
      description: ''
      required:
        - clientRequestId
        - amount
        - reservationDate
        - paymentNetwork
        - assigneeAccountId
        - cardIssuerId
      type: object
      properties:
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response correlation
          type: string
        amount:
          description: Reservation amount in cents
          type: integer
        reservationDate:
          description: 'The reservation date. Must be in the format: yyyy-MM-dd'
          type: string
          example:
            - '2024-01-15'
        paymentNetwork:
          description: The Payment Network of the value to be reserved
          enum:
            - VISA
            - MASTERCARD
            - ELO
            - HIPERCARD
          type: string
        assigneeAccountId:
          description: The ID of the assignee account
          type: string
        cardIssuerId:
          description: The ID of the card issuer
          type: string
        tags:
          description: Markups
          type: array
          items:
            type: string
      example:
        clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
        amount: 10099
        reservationDate: '2021-03-15'
        paymentNetwork: VISA
        assigneeAccountId: 3fa85f64-5717-4562-b3fc-2c963f66afa6,
        cardIssuerId: 32610
        tags:
          - some text
          - some text
    CreditReservationBody:
      description: ''
      required:
        - amount
        - reservationDate
        - paymentNetwork
        - assigneeAccountId
        - cardIssuerId
      type: object
      properties:
        amount:
          description: Reservation amount in cents
          type: integer
        reservationDate:
          description: The reservation date
          type: string
        paymentNetwork:
          description: The Payment Network of the reserved value
          type: string
        assigneeAccountId:
          description: The ID of the assignee account
          type: string
        cardIssuerId:
          description: The ID of the card issuer
          type: string
      example:
        amount: 10099
        reservationDate: '2021-03-15'
        paymentNetwork: VISA
        assigneeAccountId: 3fa85f64-5717-4562-b3fc-2c963f66afa6,
        cardIssuerId: 32610
    CreditReservationResponseBody:
      description: ''
      required:
        - body
      type: object
      allOf:
        - $ref: '#/components/schemas/EntityEnvelopBase'
      properties:
        body:
          $ref: '#/components/schemas/CreditReservationBody'
          description: ''
      example:
        pactualId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
        clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
        createTimestamp: '2020-07-15T19:26:10.703Z'
        lastUpdateTimestamp: '2020-07-15T19:26:10.703Z'
        status: some text
        entity: some text
        tags:
          - some text
          - some text
        errorCode: PCE001
        errorDescription: some text
        body:
          amount: 10099
          reservationDate: '2021-03-15'
          paymentNetwork: VISA
          assigneeAccountId: 3fa85f64-5717-4562-b3fc-2c963f66afa6,
          cardIssuerId: 32610
    CreditReservationResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          $ref: '#/components/schemas/CreditReservationResponseBody'
          description: ''
      example:
        version: '1.0'
        status: 200
        body:
          pactualId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
          clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
          createTimestamp: '2020-07-15T19:26:10.703Z'
          lastUpdateTimestamp: '2020-07-15T19:26:10.703Z'
          status: some text
          entity: some text
          tags:
            - some text
            - some text
          errorCode: PCE001
          errorDescription: some text
          body:
            amount: 10099
            reservationDate: '2021-03-15'
            paymentNetwork: VISA
            assigneeAccountId: 3fa85f64-5717-4562-b3fc-2c963f66afa6,
            cardIssuerId: 32610
    CreditReservationsResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/CreditReservationResponseBody'
      example:
        version: '1.0'
        status: 200
        body:
          - pactualId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
            clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
            createTimestamp: '2020-07-15T19:26:10.703Z'
            lastUpdateTimestamp: '2020-07-15T19:26:10.703Z'
            status: some text
            entity: some text
            tags:
              - some text
              - some text
            errorCode: PCE001
            errorDescription: some text
            body:
              amount: 10099
              reservationDate: '2021-03-15'
              paymentNetwork: VISA
              assigneeAccountId: 3fa85f64-5717-4562-b3fc-2c963f66afa6,
              cardIssuerId: 32610
          - pactualId: f19a5fcb-7a98-4b3d-bba5-8b80a5a9437c
            clientRequestId: 246fb4eb-f0f7-46d7-a2b3-eba424f6dc24
            createTimestamp: '2020-07-15T19:26:10.703Z'
            lastUpdateTimestamp: '2020-07-15T19:26:10.703Z'
            status: some text
            entity: some text
            tags:
              - some text
              - some text
            errorCode: PCE001
            errorDescription: some text
            body:
              amount: 10099
              reservationDate: '2021-03-15'
              paymentNetwork: VISA
              assigneeAccountId: 3fa85f64-5717-4562-b3fc-2c963f66afa6,
              cardIssuerId: 32610
    PaymentSlipSearchResponseBody:
      description: The response body for /payment/slips api.
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          $ref: '#/components/schemas/PaymentSlipSearchResponseBodyContent'
          description: The response body.
    PaymentSlipGetResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          description: Http status code.
          type: integer
        body:
          $ref: '#/components/schemas/PaymentSlipResponse'
          description: ''
    PaymentSlipPayCancelDigitableLineRequest:
      title: Root Type for PaymentSlipPayCancellationRequest
      description: ''
      type: object
      properties:
        reason:
          description: Reason for the request.
          type: string
        digitableLine:
          description: Payment Slip encoded information data.
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        reason: string
        digitableLine: string
        clientRequestId: string
        tags:
          - string
    PaymentSlipPayCancelBarcodeRequest:
      title: Root Type for PaymentSlipPayCancellationRequest
      description: ''
      type: object
      properties:
        reason:
          description: Reason for the request.
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
        barcode:
          description: Barcode encoded information data.
          type: string
      example:
        reason: string
        barcode: string
        clientRequestId: string
        tags:
          - string
    PaymentSlipPayCancelResponse:
      title: Root Type for PaymentSlipPayCancelResponse
      description: ''
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        pactualId:
          description: Unique resource Identifier (Uuid) generated by api.
          type: string
        status:
          description: Transaction's current status.
          type: string
        body:
          description: Data Object.
          type: object
          properties:
            reason:
              description: Reason for the request.
              type: string
            amount:
              format: int32
              description: The transaction amount.
              type: integer
            digitableLine:
              description: Payment Slip encoded information data.
              type: string
            authentication:
              description: Transaction's authentication value.
              type: string
            consumer:
              description: Consumer's information.
              type: string
            issuer:
              description: Issuer's information.
              type: string
            receiverBankCode:
              format: int32
              description: Bank code number on the receiver's end of the transaction.
              type: integer
            dueDate:
              description: Limit date to which the transction's fines start applying.
              type: string
            fine:
              format: int32
              description: Fine value applied to this transaction.
              type: integer
            discount:
              format: int32
              description: Discount value applied to this transaction.
              type: integer
            interest:
              format: int32
              description: Interest value applied to this transaction.
              type: integer
            paymentDate:
              description: Date that this transaction was submitted.
              type: string
            movementId:
              description: Unique identification created when the transaction impacted the main client's account.
              type: string
            beneficiary:
              description: Beneficiary's information object.
              type: object
              properties:
                name:
                  description: Beneficiary's name.
                  type: string
                taxId:
                  description: Beneficiary's Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
                  type: string
            accountInformation:
              description: Account information object.
              type: object
              properties:
                accountType:
                  description: The account type.
                  type: string
                personType:
                  description: Person type (F = Person, J = Organization)
                  type: string
                taxId:
                  description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
                  type: string
                account:
                  format: int32
                  description: The account number.
                  type: integer
                cge:
                  format: int32
                  description: The CGE number.
                  type: integer
                branch:
                  format: int32
                  description: The branch number.
                  type: integer
                bank:
                  format: int32
                  description: The Bank Code.
                  type: integer
                name:
                  description: The acocunt's name.
                  type: string
      example:
        clientRequestId: string
        pactualId: string
        status: string
        body:
          reason: string
          amount: 0
          digitableLine: string
          authentication: string
          consumer: string
          issuer: string
          receiverBankCode: 0
          dueDate: string
          fine: 0
          discount: 0
          interest: 0
          paymentDate: string
          movementId: string
          beneficiary:
            name: string
            taxId: string
          accountInformation:
            accountType: string
            personType: string
            taxId: string
            account: 0
            cge: 0
            branch: 0
            bank: 0
            name: string
    PaymentSlipBulkResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          description: Http status code.
          type: integer
        body:
          $ref: '#/components/schemas/PaymentSlipBulkResponseBody'
          description: The response body.
    PaymentSlipBulkResponseBody:
      description: The response body.
      required:
        - pactualBulkId
        - items
      type: object
      properties:
        pactualBulkId:
          description: Unique bulk request identificator (Uuid) generated by api.
          type: string
        items:
          description: List of PaymentSlip.
          type: array
          items:
            $ref: '#/components/schemas/PaymentSlipResponse'
    PaymentSlipSearchResponseBodyContent:
      description: ''
      required:
        - totalFound
        - totalReturned
        - items
      type: object
      properties:
        totalFound:
          description: The number of total found items.
          type: integer
        totalReturned:
          description: The number of total returned items.
          type: integer
        startingFrom:
          description: The order position of first returned item.
          type: integer
        scrollId:
          description: Scroll Id for retrieves the next batch of results
          type: string
        items:
          description: A list of returned items.
          type: array
          items:
            $ref: '#/components/schemas/PaymentSlipResponse'
    Customer:
      description: Represents the person responsible for the payment.
      type: object
      properties:
        name:
          description: 'The name of customer that will be charged. For example: Gilberto Junior.'
          maxLength: 50
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
          maxLength: 14
          type: string
        street:
          description: 'The name of street. For example: Rua do Catete'
          maxLength: 40
          type: string
        number:
          description: 'House number. For example: 101'
          maxLength: 10
          type: string
        numberComplement:
          description: 'Complement. For example: Apto 604'
          type: string
        neighborhood:
          description: 'Neighborhood. For example: Catete'
          maxLength: 20
          type: string
        city:
          description: 'City name. For example: Rio de Janeiro'
          maxLength: 50
          type: string
        stateCode:
          description: 'State code. For example: RJ'
          maxLength: 2
          type: string
        zipCode:
          description: 'ZipCode (Just numbers allowed) For example: 22220010'
          maxLength: 8
          type: string
    FinancialMovementSearchResponseBody:
      description: The response body for /payment/slips api.
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          $ref: '#/components/schemas/FinancialMovementSearchResponseBodyContent'
          description: The response body.
    FinancialMovementSearchResponseBodyContent:
      description: ''
      required:
        - totalFound
        - totalReturned
        - items
      type: object
      properties:
        totalFound:
          description: The number of total found items.
          type: integer
        totalReturned:
          description: The number of total returned items.
          type: integer
        startingFrom:
          description: The order position of first returned item.
          type: integer
        scrollId:
          description: Scroll Id for retrieves the next batch of results
          type: string
        items:
          description: A list of returned items.
          type: array
          items:
            $ref: '#/components/schemas/FinancialMovementEnvelope'
    SuccessTransferResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          description: Http status code.
          type: integer
        body:
          $ref: '#/components/schemas/FinancialMovementEnvelope'
          description: The response body.
    ScrollRequest:
      required:
        - scrollId
      type: object
      properties:
        scrollId:
          description: scroll ID to retrieve the next batch of results for the request
          type: string
      example:
        scrollId: DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAD4WYm9laVYtZndUQlNsdDcwakFMNjU1QQ==
    TopUpPhonePayResponseProvider:
      title: Root Type for TopUpPhonePayResponseProvider
      description: ''
      type: object
      properties:
        Name:
          description: Providers name
          type: string
        providerId:
          format: int32
          description: Providers identification
          type: integer
        category:
          description: Providers category
          type: string
      example:
        Name: Claro
        providerId: 2087
        category: PHONE
    TopupResponse:
      title: Root Type for TopupResponse
      description: ''
      type: object
      properties:
        version:
          type: string
        status:
          format: int32
          type: integer
        body:
          $ref: '#/components/schemas/TopupResponseBody'
      example:
        version: 1.0.3
        status: 200
        body: ''
    TopupResponseBody:
      title: Root Type for ResponseBody
      description: ''
      type: object
      properties:
        pactualId:
          type: string
        clientRequestId:
          type: string
        createTimestamp:
          type: string
        lastUpdateTimestamp:
          type: string
        entity:
          type: string
        status:
          type: string
        errorCode:
          type: string
        errorDescription:
          type: string
        body:
          $ref: '#/components/schemas/TopupResponseBodyInternalBody'
          properties:
            origin:
              type: string
            topupDetail:
              type: object
              properties:
                code:
                  format: int32
                  type: integer
                qtyTopup:
                  format: int32
                  type: integer
                provider:
                  type: object
                  properties:
                    name:
                      type: string
                    providerId:
                      format: int32
                      type: integer
                    category:
                      type: string
                topupPhone:
                  type: object
                  properties:
                    stateCode:
                      format: int32
                      type: integer
                    countryCode:
                      format: int32
                      type: integer
                    number:
                      format: int32
                      type: integer
                amount:
                  format: int32
                  type: integer
            accountInformation:
              type: object
              properties:
                accountId:
                  type: string
                clientId:
                  type: string
                account:
                  format: int32
                  type: integer
                branch:
                  format: int32
                  type: integer
                bank:
                  format: int32
                  type: integer
                taxId:
                  type: string
                name:
                  type: string
                personType:
                  type: string
                accountType:
                  type: string
                status:
                  type: string
                bankBranchAccount:
                  type: string
                createTimestamp:
                  type: string
                lastUpdateTimestamp:
                  type: string
                beneficiaryTreatyCode:
                  type: string
                beneficiaryMarketTreatyCode:
                  type: string
                defaultAccount:
                  type: boolean
                markups:
                  type: array
                  items:
                    type: string
        tags:
          type: array
          items: {}
      example:
        pactualId: ce3663ae-d12a-49e7-87dd-ba4b21235c09
        clientRequestId: 1a722b8c-f376-4b60-9416-07beeecb2c81
        createTimestamp: '2020-09-14T18:20:11.2837151+00:00'
        lastUpdateTimestamp: '2020-09-14T18:20:31.6359848+00:00'
        entity: Topup
        status: CONFIRMED
        errorCode: ''
        errorDescription: ''
        body:
          origin: BAAS
          topupDetail:
            code: 0
            qtyTopup: 0
            provider:
              name: Claro
              providerId: 2087
              category: PHONE
            topupPhone:
              stateCode: 11
              countryCode: 55
              number: 992669638
            amount: 1500
          accountInformation:
            accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
            clientId: 1a722b8c-f376-4b60-9416-07beeecb2c81
            account: 37480109
            branch: 30
            bank: 208
            taxId: 946138000188
            name: PARTNERS ALPHA PARTICIPACOES LTDA
            personType: J
            accountType: CC
            status: CREATED
            bankBranchAccount: '208_30_37480109'
            createTimestamp: '2020-09-01T18:50:56.9472357+00:00'
            lastUpdateTimestamp: '2020-09-01T18:50:56.9472465+00:00'
            beneficiaryTreatyCode: '637324397876994911'
            beneficiaryMarketTreatyCode: '01'
            defaultAccount: true
            markups:
              - SLC0001
              - aliasbank
        tags: []
    TopupResponseBodyInternalBody:
      title: Root Type for TopupResponseBodyInternalBody
      description: ''
      type: object
      properties:
        origin:
          type: string
        topupDetail:
          $ref: '#/components/schemas/TopupResponseBodyTopupDetail'
          properties:
            code:
              format: int32
              type: integer
            qtyTopup:
              format: int32
              type: integer
            provider:
              type: object
              properties:
                name:
                  type: string
                providerId:
                  format: int32
                  type: integer
                category:
                  type: string
            topupPhone:
              type: object
              properties:
                stateCode:
                  format: int32
                  type: integer
                countryCode:
                  format: int32
                  type: integer
                number:
                  format: int32
                  type: integer
            amount:
              format: int32
              type: integer
        accountInformation:
          $ref: '#/components/schemas/TopupResponseBodyAccountInformation'
          properties:
            accountId:
              type: string
            clientId:
              type: string
            account:
              format: int32
              type: integer
            branch:
              format: int32
              type: integer
            bank:
              format: int32
              type: integer
            taxId:
              type: string
            name:
              type: string
            personType:
              type: string
            accountType:
              type: string
            status:
              type: string
            bankBranchAccount:
              type: string
            createTimestamp:
              type: string
            lastUpdateTimestamp:
              type: string
            beneficiaryTreatyCode:
              type: string
            beneficiaryMarketTreatyCode:
              type: string
            defaultAccount:
              type: boolean
            markups:
              type: array
              items:
                type: string
      example:
        origin: BAAS
        topupDetail:
          code: 0
          qtyTopup: 0
          provider:
            name: Claro
            providerId: 2087
            category: PHONE
          topupPhone:
            stateCode: 11
            countryCode: 55
            number: 992669638
          amount: 1500
        accountInformation:
          accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
          clientId: 1a722b8c-f376-4b60-9416-07beeecb2c81
          account: 37480109
          branch: 30
          bank: 208
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
          status: CREATED
          bankBranchAccount: '208_30_37480109'
          createTimestamp: '2020-09-01T18:50:56.9472357+00:00'
          lastUpdateTimestamp: '2020-09-01T18:50:56.9472465+00:00'
          beneficiaryTreatyCode: '637324397876994911'
          beneficiaryMarketTreatyCode: '01'
          defaultAccount: true
          markups:
            - SLC0001
            - aliasbank
    TopupResponseBodyTopupDetail:
      title: Root Type for TopupResponseBodyTopupDetail
      description: ''
      type: object
      properties:
        code:
          format: int32
          type: integer
        qtyTopup:
          format: int32
          type: integer
        provider:
          $ref: '#/components/schemas/TopUpPhonePayResponseProvider'
          properties:
            name:
              type: string
            providerId:
              format: int32
              type: integer
            category:
              type: string
        topupPhone:
          $ref: '#/components/schemas/TopupResponseBodyTopupDetailPhone'
          properties:
            stateCode:
              format: int32
              type: integer
            countryCode:
              format: int32
              type: integer
            number:
              format: int32
              type: integer
        amount:
          type: integer
      example:
        code: 0
        qtyTopup: 0
        provider:
          name: Claro
          providerId: 2087
          category: PHONE
        topupPhone:
          stateCode: 11
          countryCode: 55
          number: 992669638
        amount: 1500
    TopupResponseBodyTopupDetailPhone:
      title: Root Type for TopupResponseBodyTopupDetailPhone
      description: ''
      type: object
      properties:
        stateCode:
          format: int32
          type: integer
        countryCode:
          format: int32
          type: integer
        number:
          format: int32
          type: integer
      example:
        stateCode: 11
        countryCode: 55
        number: 992669638
    TopupResponseBodyAccountInformation:
      title: Root Type for TopupResponseBodyAccountInformation
      description: ''
      type: object
      properties:
        accountId:
          type: string
        clientId:
          type: string
        account:
          format: int32
          type: integer
        branch:
          format: int32
          type: integer
        bank:
          format: int32
          type: integer
        taxId:
          type: string
        name:
          type: string
        personType:
          type: string
        accountType:
          type: string
        status:
          type: string
        bankBranchAccount:
          type: string
        createTimestamp:
          type: string
        lastUpdateTimestamp:
          type: string
        beneficiaryTreatyCode:
          type: string
        beneficiaryMarketTreatyCode:
          type: string
        defaultAccount:
          type: boolean
        markups:
          type: array
          items:
            type: string
      example:
        accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
        clientId: 1a722b8c-f376-4b60-9416-07beeecb2c81
        account: 37480109
        branch: 30
        bank: 208
        taxId: 946138000188
        name: PARTNERS ALPHA PARTICIPACOES LTDA
        personType: J
        accountType: CC
        status: CREATED
        bankBranchAccount: '208_30_37480109'
        createTimestamp: '2020-09-01T18:50:56.9472357+00:00'
        lastUpdateTimestamp: '2020-09-01T18:50:56.9472465+00:00'
        beneficiaryTreatyCode: '637324397876994911'
        beneficiaryMarketTreatyCode: '01'
        defaultAccount: true
        markups:
          - SLC0001
          - aliasbank
    TopupProductsResponse:
      title: Root Type for TopupProductsResponse
      description: ''
      type: object
      properties:
        version:
          type: string
        status:
          format: int32
          type: integer
        body:
          type: object
          properties:
            products:
              type: array
              items:
                type: object
                properties:
                  maxValue:
                    format: int32
                    type: integer
                  minValue:
                    format: int32
                    type: integer
                  productName:
                    type: string
                  quotaValue:
                    format: int32
                    type: integer
      example:
        version: 1.0.3
        status: 200
        body:
          products:
            - maxValue: 3500
              minValue: 3500
              productName: ''
              quotaValue: 3500
            - maxValue: 5000
              minValue: 5000
              productName: ''
              quotaValue: 5000
    TopupProvidersResponse:
      title: Root Type for TopuupProvidersResponse
      description: ''
      type: object
      properties:
        version:
          type: string
        status:
          format: int32
          type: integer
        body:
          type: object
          properties:
            providers:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  providerId:
                    format: int32
                    type: integer
                  category:
                    type: string
      example:
        version: 1.0.3
        status: 200
        body:
          providers:
            - name: Bilhete unico
              providerId: 2142
              category: TRANSPORT
    ExternalTransferApprovalRequestBody:
      title: Root Type for ExternalTransferApprovalRequestBody
      description: ''
      required:
        - ClientRequestId
        - Action
        - Reason
        - PactualId
      type: object
      properties:
        PactualId:
          description: Unique resource Identifier (Uuid) generated by api.
          type: string
        Action:
          description: The Action to be taken with the transaction
          enum:
            - APPROVE
            - DENY
          type: string
        Reason:
          description: Reason when the transaction Action is �DENY�, this field is only required if the Action is �DENY�, otherwise must not be sent on the request.
          type: string
        ClientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
      example:
        PactualId: 02db79fd-XXXX-4e06-a674-c226f06a3619
        Action: DENY
        Reason: Homolog BaaS
        ClientRequestId: 12345
    ExternalTransferApprovalReturn:
      title: Root Type for ExternalTransferApprovalReturn
      description: ''
      type: object
      properties:
        version:
          type: string
        status:
          format: int32
          type: integer
        body:
          type: object
          properties:
            pactualId:
              type: string
            createTimestamp:
              type: string
            lastUpdateTimestamp:
              type: string
            entity:
              type: string
            status:
              type: string
            body:
              type: object
              properties:
                action:
                  type: string
                approvalId:
                  type: string
                reason:
                  type: string
                financialType:
                  type: string
                cashDirection:
                  type: string
                movementId:
                  type: string
                amount:
                  format: int64
                  type: integer
                debitParty:
                  type: object
                  properties:
                    bank:
                      format: int32
                      type: integer
                    branch:
                      format: int32
                      type: integer
                    account:
                      format: int32
                      type: integer
                    name:
                      type: string
                    taxId:
                      type: string
                    personType:
                      type: string
                    accountType:
                      type: string
                creditParty:
                  type: object
                  properties:
                    bank:
                      format: int32
                      type: integer
                    branch:
                      format: int32
                      type: integer
                    account:
                      format: int32
                      type: integer
                    name:
                      type: string
                    taxId:
                      type: string
                    personType:
                      type: string
                    accountType:
                      type: string
            tags:
              type: array
              items: {}
      example:
        version: 0.1.1
        status: 200
        body:
          pactualId: string
          createTimestamp: DateTime
          lastUpdateTimestamp: DateTime
          entity: String
          status: String
          body:
            action: String
            approvalId: String
            reason: String
            financialType: String
            cashDirection: String
            movementId: String
            amount: 1234
            debitParty:
              bank: 1234
              branch: 1234
              account: 1234
              name: string
              taxId: string
              personType: String
              accountType: String
            creditParty:
              bank: 1234
              branch: 1234
              account: 1234
              name: String
              taxId: String
              personType: String
              accountType: String
          tags: []
    GenericTransferRequest:
      title: Root Type for GenericTransferRequest
      description: ''
      required:
        - clientRequestId
        - processingCode
        - amount
        - creditAccount
        - debitAccountId
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        processingCode:
          format: int32
          description: The Processing Code
          type: integer
        amount:
          format: int32
          description: 'The transaction Amount in cents. Example: 100 = R$1.00'
          type: integer
        creditAccount:
          description: Credit Account information.
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
            - ispb
          type: object
          properties:
            accountType:
              description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The acocunt's name.
              type: string
            ispb:
              description: ISPB (Brazilian Payments System Identifier) of the SPI (Instant Payments System) participant with numbers only.
              type: string
        debitAccountId:
          description: The Account Id of BTG Pactual BaaS
          type: string
        tags:
          type: array
          items:
            type: string
      example:
        clientRequestId: 123456ABCDE789528e3adef38e1b5041f60
        processingCode: 1234
        amount: 100
        creditAccount:
          account: 37480109
          branch: 30
          bank: 208
          ispb: 30306294
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        debitAccountId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        tags:
          - string
    GenericTransferSubAccountRequest:
      title: Root Type for GenericTransferSubAccountRequest
      description: ''
      required:
        - clientRequestId
        - processingCode
        - amount
        - creditAccount
        - debitAccount
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        processingCode:
          format: int32
          description: The Processing Code
          type: integer
        amount:
          format: int32
          description: 'The transaction Amount in cents. Example: 100 = R$1.00'
          type: integer
        creditAccount:
          description: Credit Account information.
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
            - ispb
          type: object
          properties:
            accountType:
              description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The acocunt's name.
              type: string
            ispb:
              description: ISPB (Brazilian Payments System Identifier) of the SPI (Instant Payments System) participant with numbers only.
              type: string
        debitAccount:
          description: Debit Account information (Sub-Account).
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
            - ispb
          type: object
          properties:
            accountType:
              description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The acocunt's name.
              type: string
            ispb:
              description: ISPB (Brazilian Payments System Identifier) of the SPI (Instant Payments System) participant with numbers only.
              type: string
        tags:
          type: array
          items:
            type: string
      example:
        clientRequestId: 123456ABCDE789528e3adef38e1b5041f60
        processingCode: 1234
        amount: 100
        creditAccount:
          account: 37480109
          branch: 30
          bank: 208
          ispb: 30306294
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        debitAccount:
          account: 37480109
          branch: 30
          bank: 208
          ispb: 30306294
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        tags:
          - string
    GenericTransferResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          $ref: '#/components/schemas/GenericTransferEnvelope'
          description: ''
      example:
        version: 1.0.0
        status: 200
        body:
          pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          pactualBulkId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          clientRequestId: 123456ABCDE789528e3adef38e1b5041f60
          createTimestamp: '2022-04-18T15:25:51.1493225'
          lastUpdateTimestamp: '2022-04-18T15:25:51.1493225'
          entity: GenericTransfer
          status: ENQUEUED
          errorCode: string
          errorDescription: string
          body:
            movementId: 044392d7545248e3adef38e1b5041f60
            processingCode: 1234
            amount: 100
            financialMovementPayload:
              processingCode: 1234
              description: Generic Financial Transaction
              type: InternalTransfer
              typeDebit: 1234
              typeDebitCancel: 4321
              typeCredit: 7894
            creditAccount:
              account: 37480109
              branch: 30
              bank: 208
              ispb: 30306294
              taxId: 946138000188
              name: PARTNERS ALPHA PARTICIPACOES LTDA
              personType: J
              accountType: CC
            debitAccount:
              accountId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
              account: 37480109
              branch: 30
              bank: 208
              ispb: 30306294
              taxId: 946138000188
              name: PARTNERS ALPHA PARTICIPACOES LTDA
              personType: J
              accountType: CC
    ListProcessingCodeResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          type: array
          items:
            $ref: '#/components/schemas/ProcessingCode'
      example:
        version: 1.0.0
        status: 200
        body:
          - processingCode: 1234
            description: Generic Financial Transaction
            type: InternalTransfer
            typeDebit: 1234
            typeDebitCancel: 4321
            typeCredit: 7894
    ProcessingCodeResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          $ref: '#/components/schemas/ProcessingCode'
          description: ''
      example:
        version: 1.0.0
        status: 200
        body:
          processingCode: 1234
          description: Generic Financial Transaction
          type: InternalTransfer
          typeDebit: 1234
          typeDebitCancel: 4321
          typeCredit: 7894
    ProcessingCode:
      description: Represents a Processing Code.
      required:
        - processingCode
        - type
        - typeDebit
      type: object
      properties:
        processingCode:
          format: int32
          description: The Processing Code Id.
          type: integer
        description:
          description: Processing Code Description.
          type: string
        type:
          description: Financial Transaction Type.
          type: string
        typeDebit:
          format: int32
          description: Debit Processing Code.
          type: integer
        typeDebitCancel:
          format: int32
          description: Debit Cancel Processing Code.
          type: integer
        typeCredit:
          format: int32
          description: Credit Processing Code.
          type: integer
      example:
        processingCode: 1234
        description: Generic Financial Transaction
        type: InternalTransfer
        typeDebit: 1234
        typeDebitCancel: 4321
        typeCredit: 7894
    GetFxResponse:
      title: Root Type for GetFxResponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data object.
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Operation Contract Entity.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              type: object
              properties:
                unitPrice:
                  format: double
                  description: The unit price of the base currency in BRL
                  type: number
                total:
                  format: double
                  description: The amount based on the baseCurrency that the customer will be charged (BUY)/The amount based on the baseCurrency that the customer will recive (SELL)
                  type: number
                expirationDate:
                  description: The Datetime that the quote wil expire (once the quote expirte, it will be no longer possible to accept)
                  type: string
                quoteTimestamp:
                  description: The Datetime that the quote was created
                  type: string
                acceptTimestamp:
                  description: The Datetime that the currency was accepted, default value if the quote was not accepeted
                  type: string
                operationSide:
                  description: The direction of the trade.
                  type: string
                quoteCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                baseCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                amount:
                  format: int32
                  description: Indicated the amount for the currency of the quote/trade
                  type: integer
                quoteCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the QuoteCurrency
                  type: string
                baseCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the BaseCurrency
                  type: string
                bankingChannelId:
                  description: The bankingChannelId retrieved from the BankingChannelApi, its translates the SWIFT account used on the quote, the account that will recive the foreignCurrency (BUY) / the account will send the foreignCurrency (SELL)
                  type: string
                taxes:
                  description: The ids of the trade taxes
                  type: array
                  items:
                    $ref: '#/components/schemas/Tax'
                aggregationDateTime:
                  format: date-time
                  description: The date and hour of the aggregation
                  type: string
                accountId:
                  description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
                  type: string
                movementId:
                  description: The id of the foreign exchange trade
                  type: string
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: ba04db1b-9d90-4079-a9aa-2667b115ed53
          clientRequestId: 35ab15e6-a7f0-4559-82eb-5be5e2413cd6
          createTimestamp: '2021-03-23T00:48:24.7533535+00:00'
          lastUpdateTimestamp: '2021-03-23T00:48:57.8618332+00:00'
          entity: ForeignExchange
          status: ACCEPTED
          body:
            unitPrice: 5.6163
            total: 61.77
            expirationDate: '2021-03-23T00:50:23.9312113Z'
            quoteTimestamp: '2021-03-23T00:48:24.5476711Z'
            acceptTimestamp: '2021-03-23T00:48:57.319629Z'
            operationSide: BUY
            quoteCurrency: BRL
            baseCurrency: USD
            amount: 11
            quoteCurrencySettlementDate: '2021-03-22T00:00:00Z'
            baseCurrencySettlementDate: '2021-03-22T00:00:00Z'
            docAccountId: 00000000-0000-0000-0000-000000000000
            bankingChannelId: f2ec6249-1679-4bff-9179-488405545b90
            accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
          tags: []
    FxAcceptQuoteResponse:
      title: Root Type for FxAcceptQuoteResponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data object
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            operationDateTime:
              description: The datetime representing when the quote was accepted.
              type: string
            pactualBulkId:
              description: The Id that links the quote to its aggregation.
              type: string
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 3e36289d-a95a-4558-9b58-82b42a32a034
    NewBankingChannelResponse:
      title: Root Type for NewBankingChannelResponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data object
          type: object
          properties:
            beneficiaryId:
              description: The id of the bankingChannel that was created.
              type: string
      example:
        version: 0.1.0
        status: 200
        body:
          beneficiaryId: aa9ce499242349d28c4facf5015555c8
    GetBankingchannelCountriesResponse:
      title: Root Type for GetBankingchannelCountriesResponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: array
          items:
            type: object
            properties:
              id:
                description: The Id of the country on the Enum.
                type: string
              description:
                description: The name of country
                type: string
      example:
        version: 1.0.3+1
        status: 200
        body:
          - id: AF
            description: Afghanistan
          - id: AL
            description: Albania
          - id: AQ
            description: Antarctica
          - id: DZ
            description: Algeria
          - id: AS
            description: American Samoa
          - id: AD
            description: Andorra
    GetBankingChannelCurrencies:
      title: Root Type for GetBankingChannelCurrencies
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data object
          type: array
          items:
            type: object
            properties:
              id:
                description: The Id of the currency on the Enum.
                type: string
              description:
                description: The name of currency
                type: string
      example:
        version: 1.0.3+1
        status: 200
        body:
          - id: USD
            description: US Dollar
          - id: EUR
            description: Euro
          - id: BRL
            description: Brazilian Real
    PaymentSlipUpdateRequestBody:
      title: Root Type for PaymentSlipUpdateRequestBody
      description: ''
      type: object
      properties:
        description:
          description: The description for the update
          type: string
        amount:
          format: int32
          description: 'Amount in cents of the transaction. Example: 100 = R$1.00'
          type: integer
        dueDate:
          format: date
          description: Limit date to which the transction's fines start applying.
          type: string
        overdueDate:
          format: date
          description: How many days after issue Date the charge is canceled and can not be paid anymore
          type: string
        interest:
          description: Interest value applied to this transaction.
          type: object
          properties:
            date:
              format: date
              description: 'Will be charged from that date. Format: yyyy-MM-dd'
              type: string
            value:
              description: 'Ex: 1.1'
              type: number
            code:
              description: |-
                Defines the type of interest to be applied.

                |Code |
                |----------|
                |AMOUNT_CALENDAR_DAYS|
                |PERCENTAGE_POINT_PER_MONTH_CALENDAR_DAYS|
                |AMOUNT_WORKING_DAYS|
                |PERCENTAGE_POINT_PER_MONTH_WORKING_DAYS|
                |EXEMPT|
              default: PERCENTAGE_POINT_PER_MONTH_CALENDAR_DAYS
              type: string
        fine:
          description: Fine value applied to this transaction.
          type: object
          properties:
            date:
              format: date
              description: 'Will be charged from that date. Format: yyyy-MM-dd'
              type: string
            value:
              description: 'Ex: 1.1'
              type: number
            code:
              description: Defines the type of fine to be applied.
              default: PERCENT
              enum:
                - FIXED_VALUE
                - PERCENT
              type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        tags:
          description: List of tags
          type: array
          items:
            type: string
      example:
        description: string
        amount: 0
        dueDate: string
        overdueDate: string
        interest:
          date: string
          value: 0
          code: AMOUNT_CALENDAR_DAYS
        fine:
          date: string
          value: 0
          code: FIXED_VALUE
        clientRequestId: string
        tags:
          - string
    PaymentSlipCancelRequestBody:
      title: Root Type for PaymentSlipCancelRequestBody
      description: ''
      required:
        - reason
        - clientRequestId
        - reasonDescription
      type: object
      properties:
        reasonDescription:
          description: Reason description for the request. Up to 150 characters.
          type: string
        reason:
          description: Reason for the request.
          enum:
            - ERROR_ISSUED
            - ERROR_CLIENT
            - OTHER
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        reasonDescription: string
        reason: ERROR_ISSUED
        clientRequestId: string
        tags:
          - string
    HttpStatusCode:
      enum:
        - Continue
        - SwitchingProtocols
        - Processing
        - EarlyHints
        - OK
        - Created
        - Accepted
        - NonAuthoritativeInformation
        - NoContent
        - ResetContent
        - PartialContent
        - MultiStatus
        - AlreadyReported
        - IMUsed
        - Ambiguous
        - Moved
        - Redirect
        - RedirectMethod
        - NotModified
        - UseProxy
        - Unused
        - TemporaryRedirect
        - PermanentRedirect
        - BadRequest
        - Unauthorized
        - PaymentRequired
        - Forbidden
        - NotFound
        - MethodNotAllowed
        - NotAcceptable
        - ProxyAuthenticationRequired
        - RequestTimeout
        - Conflict
        - Gone
        - LengthRequired
        - PreconditionFailed
        - RequestEntityTooLarge
        - RequestUriTooLong
        - UnsupportedMediaType
        - RequestedRangeNotSatisfiable
        - ExpectationFailed
        - MisdirectedRequest
        - UnprocessableEntity
        - Locked
        - FailedDependency
        - UpgradeRequired
        - PreconditionRequired
        - TooManyRequests
        - RequestHeaderFieldsTooLarge
        - UnavailableForLegalReasons
        - InternalServerError
        - NotImplemented
        - BadGateway
        - ServiceUnavailable
        - GatewayTimeout
        - HttpVersionNotSupported
        - VariantAlsoNegotiates
        - InsufficientStorage
        - LoopDetected
        - NotExtended
        - NetworkAuthenticationRequired
      type: string
    PaymentSlipDDARequest:
      title: Root Type for PaymentSlipDDARequest
      description: ''
      required:
        - accounts
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
          example: 5146fb5e-1143-4e17-9e21-667347aa6d02
        tags:
          description: Markups
          type: array
          items:
            type: string
          example: '[ "tags"]'
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
          type: string
          example: 1991810203
        accounts:
          description: List of accounts.
          type: array
          items:
            $ref: '#/components/schemas/Account'
          example: |-
            [
                {
                    "account": 24579,
                    "accountType": "CC",
                    "branch": 2346
                }
            ]
      example:
        clientRequestId: a759fcb2-af2d-4ae6-88a6-ba515512de06
        tags:
          - Markups
        taxId: 1991810203
        accounts:
          - account: 24579
            accountType: CC
            branch: 2346
    TopUpSignaturePayRequest:
      title: Root Type for TopUpSignaturePayResponse
      description: ''
      required:
        - providerId
        - clientRequestId
        - amount
        - signerCode
      type: object
      properties:
        clientRequestId:
          description: 'The unique transaction identification given by the client side. This value can''t be repeated.            '
          type: string
        signerCode:
          description: The signer code from the specific Topup.
          type: string
        amount:
          description: The amount desired to topup in cents, there are some value restrictions depending on the chosen provider, we recommend to get the provider products from the GET Topup/products/{providerId} to get the accepted amounts for the desired provider (ulong)
          type: integer
        name:
          description: Providers name
          type: string
        providerId:
          format: int32
          description: Providers identification
          type: integer
        category:
          format: int32
          description: Providers category
          type: integer
        tags:
          type: array
          items:
            type: string
      example:
        clientRequestId: c5165204-7539-4522-a52d-bb95e9161efc
        signerCode: test
        amount: 1500
        providerId: 2132
        tags:
          - string
    TopUpSignaturePaySubAccountRequest:
      title: Root Type for TopUpSignaturePayResponse
      description: ''
      required:
        - provider
        - clientRequestId
        - amount
        - signerCode
      type: object
      properties:
        clientRequestId:
          description: 'The unique transaction identification given by the client side. This value can''t be repeated.            '
          type: string
        signerCode:
          description: The signer code from the specific Topup.
          type: string
        amount:
          description: The amount desired to topup in cents, there are some value restrictions depending on the chosen provider, we recommend to get the provider products from the GET Topup/products/{providerId} to get the accepted amounts for the desired provider (ulong)
          type: integer
        name:
          description: Providers name
          type: string
        providerId:
          format: int32
          description: Providers identification
          type: integer
        category:
          format: int32
          description: Providers category
          type: integer
        tags:
          type: array
          items:
            type: string
      example:
        clientRequestId: c5165204-7539-4522-a52d-bb95e9161efc
        signerCode: test
        amount: 1500
        providerId: 2132
        accountInformation:
          account: 37480109
          branch: 30
          bank: 208
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        tags:
          - string
    TopUpPhonePayRequest:
      title: Root Type for TopUpPhonePayResponse
      description: ''
      required:
        - amount
        - clientRequestId
        - number
        - stateCode
      type: object
      properties:
        stateCode:
          format: int32
          description: The phone State code
          type: integer
        number:
          format: int32
          description: The Phone number
          type: integer
        amount:
          description: The amount desired to topup in cents, there are some value restrictions depending on the chosen provider, we recommend to get the provider products from the GET Topup/products/{providerId} to get the accepted amounts for the desired provider (ulong)
          type: integer
        clientRequestId:
          description: A unique Id (GUID) that represents the id of the request, it must be generated by the client, used to prevent duplicated requests.
          type: string
        tags:
          type: array
          items:
            type: string
      example:
        stateCode: 11
        number: 992669638
        amount: 1500
        clientRequestId: 1a722b8c-f376-4b60-9416-07beeecb2c81
    TopUpPhonePaySubAccountRequest:
      title: Root Type for TopUpPhonePayResponse
      description: ''
      required:
        - clientRequestId
        - amount
        - number
        - stateCode
        - accountInformation
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        stateCode:
          format: int32
          description: The phone State code
          type: integer
        number:
          format: int32
          description: The Phone number
          type: integer
        amount:
          description: 'The amount desired to topup in cents, Example: 100 = R$1.00. There are some value restrictions depending on the chosen provider, we recommend to get the provider products from the GET Topup/products/{providerId} to get the accepted amounts for the desired provider (ulong)'
          type: integer
        accountInformation:
          description: Sub-Account information.
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
            - bank
          type: object
          properties:
            accountType:
              description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The acocunt's name.
              type: string
        tags:
          type: array
          items:
            type: string
      example:
        clientRequestId: 1a722b8c-f376-4b60-9416-07beeecb2c81
        stateCode: 11
        number: 992669638
        amount: 1500
        accountInformation:
          account: 37480109
          branch: 30
          bank: 208
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        tags:
          - string
    DarfPayment:
      title: Root Type for DarfPaymentRequest
      description: ''
      required:
        - mainAmount
        - interestAmount
        - fineAmount
        - clientRequestId
        - treasuryRevenueCode
        - type
        - referenceDate
        - personType
        - taxId
        - name
      type: object
      properties:
        description:
          description: Some description for transaction
          type: string
        personType:
          description: Person type (F = Person, J = Organization)
          enum:
            - F
            - J
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary
          type: string
        name:
          description: DARF issue name
          maxLength: 80
          type: string
        referenceDate:
          format: date
          description: Reference Date. This parameter must be provided on "yyyy-MM-dd" format
          type: string
        treasuryRevenueCode:
          description: Treasure recipe code. This parameter must be provided on "TRC_0000" format, see the example. On this <b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Link</a></b> you will have access to all possible codes in the section "<b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Codigo Receita Tesouro</a></b>".
          type: string
        type:
          description: Type of DARF. N - Normal or S - Simple
          enum:
            - S
            - 'N'
          type: string
        referenceNumber:
          format: int64
          description: Reference number
          type: integer
        dueDate:
          format: date
          description: Due Date. This parameter must be provided on "yyyy-MM-dd" format
          type: string
        totalIncomeAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        totalIncomePercent:
          format: double
          description: Accumulated gross revenue percentage
          type: number
        mainAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        interestAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        fineAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        history:
          description: History to be sent to the treasury
          type: string
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        tags:
          description: List of tags.
          type: array
          items:
            type: string
      example:
        description: DARF referente a multa do IR de 2020
        personType: F
        taxId: '11622840054'
        name: Fernanda Francisca da Rocha
        referenceDate: '2021-06-13'
        treasuryRevenueCode: TRC_0086
        type: S
        referenceNumber: 10250
        dueDate: '2021-12-20'
        totalIncomeAmount: 0
        totalIncomePercent: 0
        mainAmount: 12500
        interestAmount: 0
        fineAmount: 0
        history: History to be sent to the treasury
        clientRequestId: 51e40a67-6cc2-4f42-9633-548207aee039
        tags:
          - Markups
    DarfPaymentSubAccount:
      title: Root Type for DarfPaymentRequest
      description: ''
      required:
        - mainAmount
        - interestAmount
        - fineAmount
        - clientRequestId
        - treasuryRevenueCode
        - type
        - referenceDate
        - personType
        - taxId
        - name
        - accountInformation
      type: object
      properties:
        description:
          description: Some description for transaction
          type: string
        personType:
          description: Person type (F = Person, J = Organization)
          enum:
            - F
            - J
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary
          type: string
        name:
          description: DARF issue name
          maxLength: 80
          type: string
        referenceDate:
          format: date
          description: Reference Date. This parameter must be provided on "yyyy-MM-dd" format
          type: string
        treasuryRevenueCode:
          description: Treasure recipe code. This parameter must be provided on "TRC_0000" format, see the example. On this <b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Link</a></b> you will have access to all possible codes in the section "<b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Codigo Receita Tesouro</a></b>".
          type: string
        type:
          description: Type of DARF. N - Normal or S - Simple
          enum:
            - S
            - 'N'
          type: string
        referenceNumber:
          format: int64
          description: Reference number
          type: integer
        dueDate:
          format: date
          description: Due Date. This parameter must be provided on "yyyy-MM-dd" format
          type: string
        totalIncomeAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        totalIncomePercent:
          format: double
          description: Accumulated gross revenue percentage
          type: number
        mainAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        interestAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        fineAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        history:
          description: History to be sent to the treasury
          type: string
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        accountInformation:
          description: Sub-Account information.
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
            - bank
          type: object
          properties:
            accountType:
              description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The acocunt's name.
              type: string
        tags:
          description: List of tags.
          type: array
          items:
            type: string
      example:
        description: DARF referente a multa do IR de 2020
        personType: F
        taxId: '11622840054'
        name: Fernanda Francisca da Rocha
        referenceDate: '2021-06-13'
        treasuryRevenueCode: TRC_0086
        type: S
        referenceNumber: 10250
        dueDate: '2021-12-20'
        totalIncomeAmount: 0
        totalIncomePercent: 0
        mainAmount: 12500
        interestAmount: 0
        fineAmount: 0
        history: History to be sent to the treasury
        clientRequestId: 51e40a67-6cc2-4f42-9633-548207aee039
        accountInformation:
          account: 37480109
          branch: 30
          bank: 208
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        tags:
          - Markups
    GpsPayment:
      title: Root Type for GpsPayment
      description: ''
      required:
        - anotherEntityAmount
        - chargeAmount
        - inssAmount
        - name
        - clientRequestId
        - competenceDate
        - gpsCode
        - taxPayerIdentifier
      type: object
      properties:
        description:
          description: Some description
          type: string
        name:
          description: GPS issue name
          maxLength: 80
          type: string
        gpsCode:
          description: Gps code. This parameter must be provided on "CODE_1104" format, see the example. On this <b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Link</a></b> you will have access to all possible codes in the section "<b>C�digo GPS</b>".
          type: string
        competenceDate:
          format: int32
          description: This parameter must be provided on yyyyMM format
          type: integer
        taxPayerIdentificationType:
          description: Tax payer identification type
          enum:
            - NIT
            - PIS
            - PASEP
          type: string
        taxPayerIdentifier:
          description: Number tax payer identifier
          type: string
        inssAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        anotherEntityAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        chargeAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        history:
          description: Hist�rico a ser enviado ao tesouro
          type: string
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        tags:
          description: Markups
          type: array
          items:
            type: string
      example:
        description: Some description
        name: Danilo Noah Leandro Sales
        gpsCode: CODE_1104
        competenceDate: 199206
        taxPayerIdentificationType: NIT
        taxPayerIdentifier: '2312341'
        inssAmount: 13000
        anotherEntityAmount: 0
        chargeAmount: 0
        history: History to be sent to the treasury
        clientRequestId: a0d7a593-d5da-44c0-a9fb-e7a5aae5d524
        tags:
          - Markups
    GpsPaymentSubAccount:
      title: Root Type for GpsPayment
      description: ''
      required:
        - anotherEntityAmount
        - chargeAmount
        - inssAmount
        - name
        - clientRequestId
        - competenceDate
        - gpsCode
        - taxPayerIdentifier
        - accountInformation
      type: object
      properties:
        description:
          description: Some description
          type: string
        name:
          description: GPS issue name
          maxLength: 80
          type: string
        gpsCode:
          description: Gps code. This parameter must be provided on "CODE_1104" format, see the example. On this <b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Link</a></b> you will have access to all possible codes in the section "<b>C�digo GPS</b>".
          type: string
        competenceDate:
          format: int32
          description: This parameter must be provided on yyyyMM format
          type: integer
        taxPayerIdentificationType:
          description: Tax payer identification type
          enum:
            - NIT
            - PIS
            - PASEP
          type: string
        taxPayerIdentifier:
          description: Number tax payer identifier
          type: string
        inssAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        anotherEntityAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        chargeAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        history:
          description: Hist�rico a ser enviado ao tesouro
          type: string
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        accountInformation:
          description: Sub-Account information.
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
            - bank
          type: object
          properties:
            accountType:
              description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The acocunt's name.
              type: string
        tags:
          description: Markups
          type: array
          items:
            type: string
      example:
        description: Some description
        name: Danilo Noah Leandro Sales
        gpsCode: CODE_1104
        competenceDate: 199206
        taxPayerIdentificationType: NIT
        taxPayerIdentifier: '2312341'
        inssAmount: 13000
        anotherEntityAmount: 0
        chargeAmount: 0
        history: History to be sent to the treasury
        clientRequestId: a0d7a593-d5da-44c0-a9fb-e7a5aae5d524
        accountInformation:
          account: 37480109
          branch: 30
          bank: 208
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        tags:
          - Markups
    GruPayment:
      title: Root Type for GruPayment
      description: ''
      required:
        - clientRequestId
        - fineAmount
        - interestAmount
        - mainAmount
        - personType
        - managingUnitCode
        - treasureCollectionCode
        - taxId
        - name
      type: object
      properties:
        description:
          description: Some description for transaction
          type: string
        personType:
          description: Person type (F = Person, J = Organization)
          enum:
            - F
            - J
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary
          type: string
        name:
          description: "\r\nGRU issue name"
          maxLength: 80
          type: string
        treasureCollectionCode:
          description: Treasure collection code. This parameter must be provided on "TCC_10000" format, see the example. On this <b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Link</a></b> you will have access to all possible codes in the section "<b>C�digo Recolhimento Tesouro</b>".
          type: string
        gruReferenceNumber:
          description: Reference number
          type: string
        yearMonth13Competency:
          format: int32
          description: This parameter must be provided on yyyyMM format
          type: integer
        dueDate:
          format: date
          description: Due Date. This parameter must be provided on "yyyy-MM-dd" format
          type: string
        managingUnitCode:
          description: Managing unit code
          type: string
        mainAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        interestAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        fineAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        discountAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        otherDiscountAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        otherAddedAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        history:
          description: History to be sent to the treasury
          type: string
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        tags:
          description: Markups
          type: array
          items:
            type: string
      example:
        description: Some description
        personType: F
        taxId: '77568104494'
        name: Vera Allana Silva
        treasureCollectionCode: TCC_10000
        gruReferenceNumber: '15478'
        yearMonth13Competency: 202012
        dueDate: '2021-08-24'
        managingUnitCode: '27'
        mainAmount: 1200
        interestAmount: 0
        fineAmount: 0
        discountAmount: 200
        otherDiscountAmount: 0
        otherAddedAmount: 0
        history: History to be sent to the treasury
        clientRequestId: 6790cdea-de76-4bbb-a5ac-06f231140f0f
        tags:
          - Markups
    GruPaymentSubAccount:
      title: Root Type for GruPayment
      description: ''
      required:
        - clientRequestId
        - fineAmount
        - interestAmount
        - mainAmount
        - personType
        - managingUnitCode
        - treasureCollectionCode
        - taxId
        - name
        - accountInformation
      type: object
      properties:
        description:
          description: Some description for transaction
          type: string
        personType:
          description: Person type (F = Person, J = Organization)
          enum:
            - F
            - J
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary
          type: string
        name:
          description: "\r\nGRU issue name"
          maxLength: 80
          type: string
        treasureCollectionCode:
          description: Treasure collection code. This parameter must be provided on "TCC_10000" format, see the example. On this <b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Link</a></b> you will have access to all possible codes in the section "<b>C�digo Recolhimento Tesouro</b>".
          type: string
        gruReferenceNumber:
          description: Reference number
          type: string
        yearMonth13Competency:
          format: int32
          description: This parameter must be provided on yyyyMM format
          type: integer
        dueDate:
          format: date
          description: Due Date. This parameter must be provided on "yyyy-MM-dd" format
          type: string
        managingUnitCode:
          description: Managing unit code
          type: string
        mainAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        interestAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        fineAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        discountAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        otherDiscountAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        otherAddedAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        history:
          description: History to be sent to the treasury
          type: string
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        accountInformation:
          description: Sub-Account information.
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
            - bank
          type: object
          properties:
            accountType:
              description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The acocunt's name.
              type: string
        tags:
          description: Markups
          type: array
          items:
            type: string
      example:
        description: Some description
        personType: F
        taxId: '77568104494'
        name: Vera Allana Silva
        treasureCollectionCode: TCC_10000
        gruReferenceNumber: '15478'
        yearMonth13Competency: 202012
        dueDate: '2021-08-24'
        managingUnitCode: '27'
        mainAmount: 1200
        interestAmount: 0
        fineAmount: 0
        discountAmount: 200
        otherDiscountAmount: 0
        otherAddedAmount: 0
        history: History to be sent to the treasury
        clientRequestId: 6790cdea-de76-4bbb-a5ac-06f231140f0f
        accountInformation:
          account: 37480109
          branch: 30
          bank: 208
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        tags:
          - Markups
    SelicOperation:
      title: Root Type for SelicOperation
      description: ''
      required:
        - body
        - clientRequestId
        - messageType
      type: object
      properties:
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
          example: '"3fa85f64-5717-4562-b3fc-2c963f66afa6"'
        messageType:
          description: Message code to be sent
          type: string
          example: '"SEL1052"'
        body:
          $ref: '#/components/schemas/SelicOperationBody'
          description: Selic content (Sistema Especial de Liquida��o e de Cust�dia)
          example: "{\r\n    \"cnpJ_CPFCed\": \"60183990000172\",\r\n    \"cnpJ_CPFCes\": \"36415655000178\",\r\n    \"codMsg\": \"041\",\r\n    \"ctCed\": \"006716322\",\r\n    \"ctCes\": \"008300012\",\r\n    \"dtHrBC\": \"02/01/2022 18:26:16\",\r\n    \"dtMovto\": \"2022-01-27\",\r\n    \"dtOp\": \"2022-02-04\",\r\n    \"dtOpOr\": \"2022-02-04\",\r\n    \"dtOpRet\": \"2022-02-04\",\r\n    \"dtVenc\": \"2025-01-01\",\r\n    \"identdTitSEL\": \"100001\",\r\n    \"ifnLiqdant\": \"0\",\r\n    \"ispbif\": \"30306658\",\r\n    \"numOpSEL\": \"942221\",\r\n    \"pu\": \"713\",\r\n    \"qtdTit\": \"67\",\r\n    \"tpCompr\": \"01\",\r\n    \"tpDeb_Cred\": \"C\",\r\n    \"tpRetCompr\": \"01\",\r\n    \"vlrFinanc\": \"48103.6\"\r\n}"
      example:
        clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        messageType: SEL1052
        body:
          cnpJ_CPFCed: '60183990000172'
          cnpJ_CPFCes: '36415655000178'
          codMsg: '041'
          ctCed: '006716322'
          ctCes: '008300012'
          dtHrBC: 02/01/2022 18:26:16
          dtMovto: '2022-01-27'
          dtOp: '2022-02-04'
          dtOpOr: '2022-02-04'
          dtOpRet: '2022-02-04'
          dtVenc: '2025-01-01'
          identdTitSEL: '100001'
          ifnLiqdant: '0'
          ispbif: '30306658'
          numOpSEL: '942221'
          pu: '713'
          qtdTit: '67'
          tpCompr: '01'
          tpDeb_Cred: C
          tpRetCompr: '01'
          vlrFinanc: '48103.6'
    SelicOperationBody:
      title: Root Type for SelicOperationBody
      description: Selic content (Sistema Especial de Liquida��o e de Cust�dia)
      type: object
      properties:
        cnpJ_CPFCed:
          type: string
        cnpJ_CPFCes:
          type: string
        codMsg:
          type: string
        ctCed:
          type: string
        ctCes:
          type: string
        dtHrBC:
          type: string
        dtMovto:
          format: date
          type: string
        dtOp:
          format: date
          type: string
        dtOpOr:
          format: date
          type: string
        dtOpRet:
          format: date
          type: string
        dtVenc:
          format: date
          type: string
        identdTitSEL:
          type: string
        ifnLiqdant:
          type: string
        ispbif:
          type: string
        numOpSEL:
          type: string
        pu:
          type: string
        qtdTit:
          type: string
        tpCompr:
          type: string
        tpDeb_Cred:
          type: string
        tpRetCompr:
          type: string
        vlrFinanc:
          type: string
      example:
        cnpJ_CPFCed: '60183990000172'
        cnpJ_CPFCes: '36415655000178'
        codMsg: '041'
        ctCed: '006716322'
        ctCes: '008300012'
        dtHrBC: 02/01/2022 18:26:16
        dtMovto: '2022-01-27'
        dtOp: '2022-02-04'
        dtOpOr: '2022-02-04'
        dtOpRet: '2022-02-04'
        dtVenc: '2025-01-01'
        identdTitSEL: '100001'
        ifnLiqdant: '0'
        ispbif: '30306658'
        numOpSEL: '942221'
        pu: '713'
        qtdTit: '67'
        tpCompr: '01'
        tpDeb_Cred: C
        tpRetCompr: '01'
        vlrFinanc: '48103.6'
    LtrOperationBody:
      title: Root Type for LtrOperationBody
      description: LTR Operation content (Liquida��o Bruta ou Bilateral de Opera��es)
      type: object
      properties:
        codMsg:
          type: string
          example: '"LTR0002"'
        dtHrIF:
          format: date-time
          type: string
          example: '"2022-01-03T15:36:47"'
        dtMovto:
          format: date
          type: string
          example: '"2022-01-03"'
        ispbif:
          type: string
          example: '"30306331"'
        ispbltr:
          type: string
          example: '"28715556"'
        numCtrlIF:
          type: string
          example: '"SPR20220103012995225"'
        numCtrlLTROr:
          type: string
          example: '"2022010311544113"'
        tpConf_Divg:
          type: string
          example: '"C"'
      example:
        codMsg: LTR0002
        dtHrIF: '2022-01-03T15:36:47'
        dtMovto: '2022-01-03'
        ispbif: '30306331'
        ispbltr: '28715556'
        numCtrlIF: SPR20220103012995225
        numCtrlLTROr: '2022010311544113'
        tpConf_Divg: C
    LtrOperation:
      title: Root Type for LtrOperation
      description: ''
      required:
        - body
        - messageType
        - clientRequestId
      type: object
      properties:
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
          example: '"3fa85f64-5717-4562-b3fc-2c963f66afa6"'
        messageType:
          description: Message code to be sent
          type: string
          example: '"LTR0002"'
        body:
          $ref: '#/components/schemas/LtrOperationBody'
          properties:
            codMsg:
              type: string
            dtHrIF:
              format: date-time
              type: string
            dtMovto:
              format: date
              type: string
            ispbif:
              type: string
            ispbltr:
              type: string
            numCtrlIF:
              type: string
            numCtrlLTROr:
              type: string
            tpConf_Divg:
              type: string
          example: "{\r\n    \"codMsg\": \"LTR0002\",\r\n    \"dtHrIF\": \"2022-01-03T15:36:47\",\r\n    \"dtMovto\": \"2022-01-03\",\r\n    \"ispbif\": \"30306331\",\r\n    \"ispbltr\": \"28715556\",\r\n    \"numCtrlIF\": \"SPR20220103012995225\",\r\n    \"numCtrlLTROr\": \"2022010311544113\",\r\n    \"tpConf_Divg\": \"C\"\r\n}"
      example:
        clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        messageType: LTR0002
        numOperation: '88653315'
        body:
          codMsg: LTR0002
          dtHrIF: '2022-01-03T15:36:47'
          dtMovto: '2022-01-03'
          ispbif: '30306331'
          ispbltr: '28715556'
          numCtrlIF: SPR20220103012995225
          numCtrlLTROr: '2022010311544113'
          tpConf_Divg: C
    LDLProvisionRequest:
      title: Root Type for LDLProvisionRequest
      description: ''
      type: object
      properties:
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
          example: ''
        ispbPart:
          type: string
        part:
          type: string
        counterPart:
          type: string
          example: ''
        product:
          type: string
        type:
          type: string
        amount:
          format: int32
          type: integer
          example: ''
        amountME:
          format: int32
          type: integer
          example: ''
        participant:
          type: string
        accountNumber:
          type: string
        numBoleta:
          type: string
        movementDate:
          format: date
          description: Movement Date. This parameter must be provided on "yyyy-MM-dd" format.
          type: string
      example:
        clientRequestId: 9abc2942-3430-4225-9050-aa7c42aa673a
        ispbPart: '25636589'
        part: NECTON INVESTIMENTOS CTVM
        counterPart: BANCO BTG PACTUAL
        product: CDB
        type: D
        amount: 500
        amountME: 510
        participant: '23'
        accountNumber: '002616363'
        numBoleta: '11527064'
        movementDate: '2022-03-16'
    LTRProvisionRequest:
      title: Root Type for LTRProvisionRequest
      description: ''
      type: object
      properties:
        clientRequestId:
          type: string
        Id:
          type: string
        Amount:
          format: int32
          type: integer
        Origin:
          type: string
        TypeOperation:
          type: string
        TypeLiquidation:
          type: string
        NameOperator:
          type: string
        Date:
          format: date-time
          type: string
        Status:
          type: string
        Party:
          type: object
          properties:
            Account:
              type: string
            Branch:
              type: string
            DocumentNumber:
              type: string
            Cge:
              type: string
            Name:
              type: string
        CounterParty:
          type: object
          properties:
            Account:
              type: string
            Branch:
              type: string
            DocumentNumber:
              type: string
            Cge:
              type: string
            Name:
              type: string
      example:
        clientRequestId: 9abc2942-3430-4225-9050-aa7c42aa673a
        Id: '8887886'
        Amount: 24000
        Origin: Panorama - Cotas
        TypeOperation: D
        TypeLiquidation: CETIP
        NameOperator: BENDERMA
        Date: '2021-07-29T14:06:33'
        Status: Pendente
        Party:
          Account: '000179778'
          Branch: '1'
          DocumentNumber: '19449767000120'
          Cge: '114840'
          Name: BTG PACTUAL VIDA E PREVIDENCIA SA
        CounterParty:
          Account: '000205524'
          Branch: '1'
          DocumentNumber: '59285411000113'
          Cge: '8841'
          Name: BANCO PAN S.A.
    LDLProvisionResponse:
      title: Root Type for LDLProvisionResponse
      description: ''
      type: object
      properties:
        version:
          type: string
        status:
          format: int32
          type: integer
        body:
          type: object
          properties:
            clientId:
              type: string
            pactualId:
              type: string
            clientRequestId:
              type: string
            status:
              type: string
            body:
              type: object
              properties:
                request:
                  type: object
                  properties:
                    clientRequestId:
                      type: string
                    ispbPart:
                      type: string
                    part:
                      type: string
                    counterPart:
                      type: string
                    product:
                      type: string
                    type:
                      type: string
                    amount:
                      format: int32
                      type: integer
                    amountME:
                      format: int32
                      type: integer
                    participant:
                      type: string
                    accountNumber:
                      type: string
                    numBoleta:
                      type: string
                    movementDate:
                      format: date
                      type: string
      example:
        version: 1.2.1
        status: 200
        body:
          clientId: c5165204-7539-4522-a52d-bb95e9161efc
          pactualId: 00ee4508-8294-4de8-969b-3a3eb93f650a
          clientRequestId: f7019961-c97e-4b05-ab8e-84587e956f25
          status: CREATED
          body:
            request:
              clientRequestId: f7019961-c97e-4b05-ab8e-84587e956f25
              ispbPart: '25636589'
              part: NECTON INVESTIMENTOS CTVM
              counterPart: BANCO BTG PACTUAL
              product: CDB
              type: D
              amount: 500
              amountME: 510
              participant: '23'
              accountNumber: '002616363'
              numBoleta: '11527064'
              movementDate: '2022-03-16'
    LTRProvisionResponse:
      title: Root Type for LTRProvisionResponse
      description: ''
      type: object
      properties:
        version:
          type: string
        status:
          format: int32
          type: integer
        body:
          type: object
          properties:
            clientId:
              type: string
            pactualId:
              type: string
            clientRequestId:
              type: string
            status:
              type: string
            body:
              type: object
              properties:
                request:
                  type: object
                  properties:
                    clientRequestId:
                      type: string
                    id:
                      type: string
                    amount:
                      format: int32
                      type: integer
                    origin:
                      type: string
                    typeOperation:
                      type: string
                    typeLiquidation:
                      type: string
                    nameOperator:
                      type: string
                    date:
                      format: date-time
                      type: string
                    status:
                      type: string
                    party:
                      type: object
                      properties:
                        account:
                          type: string
                        branch:
                          type: string
                        documentNumber:
                          type: string
                        cge:
                          type: string
                        name:
                          type: string
                    counterParty:
                      type: object
                      properties:
                        account:
                          type: string
                        branch:
                          type: string
                        documentNumber:
                          type: string
                        cge:
                          type: string
                        name:
                          type: string
      example:
        version: 1.2.1
        status: 200
        body:
          clientId: 1a722b8c-f376-4b60-9416-07beeecb2c81
          pactualId: 4ac0544f-d747-4392-b0e1-86ea6c445973
          clientRequestId: 49c6e67c-2c41-4ac9-b4da-fb24e2e61693
          status: CREATED
          body:
            request:
              clientRequestId: 49c6e67c-2c41-4ac9-b4da-fb24e2e61693
              id: '8147844'
              amount: 24000
              origin: BAAS
              typeOperation: D
              typeLiquidation: CETIP
              nameOperator: BENDERMA
              date: '2022-03-29T14:06:33'
              status: Liquidado
              party:
                account: '000179778'
                branch: '1'
                documentNumber: '19449767000120'
                cge: '114840'
                name: BTG PACTUAL VIDA E PREVIDENCIA SA
              counterParty:
                account: '000205524'
                branch: '1'
                documentNumber: '59285411000113'
                cge: '8841'
                name: BANCO PAN S.A.
    PaymentRequest:
      title: PaymentRequest
      required:
        - accountFrom
        - accountTo
        - accountTypeTo
        - amount
        - bankTo
        - branchFrom
        - branchTo
        - clientRequestId
        - nameTo
        - taxIdTo
      type: object
      properties:
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        branchFrom:
          description: Sender Bank Account Branch
          maxLength: 4
          type: integer
        accountFrom:
          description: Sender account number
          type: integer
        accountTo:
          description: Receiver account number
          type: integer
        accountTypeTo:
          description: CC = Checking account, CP = Saving account, PG = Payment Account
          enum:
            - CC
            - CP
            - PG
          type: string
        amount:
          description: 'Amount in cents to be transfered. Example: 100 = R$1.00'
          type: number
        bankTo:
          description: Receiver Bank Account Number. Must be from numbers 1 to 3.
          type: integer
        branchTo:
          description: Receiver Bank Account Branch
          maxLength: 4
          type: integer
        nameTo:
          description: Receivers name
          maxLength: 50
          type: string
        taxIdTo:
          description: Receiver Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
          type: string
        tags:
          description: Markups
          type: array
          items:
            type: string
        nameFrom:
          description: Sender name
          maxLength: 50
          type: string
    TransferRequest:
      title: TransferRequest
      required:
        - accountFrom
        - accountTo
        - amount
        - branchFrom
        - branchTo
        - clientRequestId
      type: object
      properties:
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        branchFrom:
          description: Sender Bank Account Branch
          maxLength: 4
          type: integer
        accountFrom:
          description: Sender account number
          type: integer
        branchTo:
          description: Receiver Bank Account Branch
          maxLength: 4
          type: integer
        accountTo:
          description: Receiver account number
          type: integer
        amount:
          description: 'Amount in cents to be transfered. Example: 100 = R$1.00'
          type: number
    SelicProvisionResponse:
      title: Root Type for SelicProvisionResponse
      description: ''
      type: object
      properties:
        version:
          type: string
        status:
          format: int32
          type: integer
        body:
          type: object
          properties:
            clientId:
              type: string
            pactualId:
              type: string
            clientRequestId:
              type: string
            status:
              type: string
            body:
              type: object
              properties:
                request:
                  type: object
                  properties:
                    Amount:
                      format: double
                      type: number
                    CounterParty:
                      type: object
                      properties:
                        Account:
                          type: string
                        Branch:
                          type: string
                        Cge:
                          type: string
                        DocumentNumber:
                          type: string
                        Name:
                          type: string
                    Date:
                      format: date
                      type: string
                    Id:
                      type: string
                    NameOperator:
                      type: string
                    Origin:
                      type: string
                    Party:
                      type: object
                      properties:
                        Account:
                          type: string
                        Branch:
                          type: string
                        Cge:
                          type: string
                        DocumentNumber:
                          type: string
                        Name:
                          type: string
                    Status:
                      type: string
                    TypeLiquidation:
                      type: string
                    TypeOperation:
                      type: string
      example:
        version: 1.2.1
        status: 200
        body:
          clientId: 1a722b8c-f376-4b60-9416-07beeecb2c81
          pactualId: 4ac0544f-d747-4392-b0e1-86ea6c445973
          clientRequestId: 49c6e67c-2c41-4ac9-b4da-fb24e2e61693
          status: CREATED
          body:
            request:
              Amount: 28821013.23
              CounterParty:
                Account: '000205132'
                Branch: '1'
                Cge: '5630'
                DocumentNumber: '60746948000112'
                Name: BANCO BRADESCO S.A.
              Date: '2022-04-08'
              Id: '50003572'
              NameOperator: ZANONINO
              Origin: Panorama - Selic
              Party:
                Account: '000006222'
                Branch: '1'
                Cge: '4463'
                DocumentNumber: '43815158000122'
                Name: BTG PACTUAL CTVM S A
              Status: Liquidado
              TypeLiquidation: SELIC
              TypeOperation: D
    SelicProvision:
      title: Root Type for SelicProvision
      description: ''
      type: object
      properties:
        ClientRequestId:
          type: string
        Amount:
          format: double
          type: number
        CounterParty:
          type: object
          properties:
            Account:
              type: string
            Branch:
              type: string
            Cge:
              type: string
            DocumentNumber:
              type: string
            Name:
              type: string
        Date:
          format: date
          type: string
        Id:
          type: string
        NameOperator:
          type: string
        Origin:
          type: string
        Party:
          type: object
          properties:
            Account:
              type: string
            Branch:
              type: string
            Cge:
              type: string
            DocumentNumber:
              type: string
            Name:
              type: string
        Status:
          type: string
        TypeLiquidation:
          type: string
        TypeOperation:
          type: string
      example:
        ClientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66bfa6
        Amount: 28821013.23
        CounterParty:
          Account: '000205132'
          Branch: '1'
          Cge: '5630'
          DocumentNumber: '60746948000112'
          Name: BANCO BRADESCO S.A.
        Date: '2022-04-08'
        Id: '50003572'
        NameOperator: ZANONINO
        Origin: Panorama - Selic
        Party:
          Account: '000006222'
          Branch: '1'
          Cge: '4463'
          DocumentNumber: '43815158000122'
          Name: BTG PACTUAL CTVM S A
        Status: Liquidado
        TypeLiquidation: SELIC
        TypeOperation: D
    PaymentSlipDDAEndCustomerDeleteRequest:
      title: Root Type for PaymentSlipDDAEndCustomerDeleteRequest
      description: ''
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
          example: 5146fb5e-1143-4e17-9e21-667347aa6d02
        tags:
          description: Markups
          type: array
          items:
            type: string
          example: '[ "tags"]'
        Customer:
          description: DDA account for the end customer
          type: object
          properties:
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
              example: 1991810203
      example:
        clientRequestId: e4c1d6c4-60cf-407f-a495-57bd5aa4bb52
        tags:
          - Markups
        Owner:
          taxId: 1991810203
        Customer:
          taxId: 1995310550
    Account:
      title: Root Type for Account
      description: ''
      required:
        - accountType
        - account
        - branch
      type: object
      properties:
        account:
          format: int32
          description: Account's Number
          type: integer
          example: '24579'
        accountType:
          description: Account's Type.
          enum:
            - CC
            - CP
            - PG
          type: string
          example: '"CC"'
        branch:
          format: int32
          description: Account's Branch.
          type: integer
          example: '2346'
      example:
        account: 24579
        accountType: CC
        branch: 2346
    Discount:
      description: List of discount amount or percentage if customer pays until informed date.
      required:
        - date
        - value
        - type
      type: object
      properties:
        discount1:
          $ref: '#/components/schemas/DiscountsType'
          description: ''
          required:
            - date
            - value
            - type
          properties:
            date:
              format: date
              description: 'Will be charged from that date. Format: yyyy-MM-dd'
              type: string
            value:
              description: 'Ex: 1.1'
              type: number
            type:
              maxLength: 1
              enum:
                - 0 - Exempt
                - 1 - Fixed amount until infomed date
                - 2 - Percent until infomed date
                - 3 - Amount per anticiption - Calendar days
                - 4 - Amount per anticiption - Working days
                - 5 - Percent per anticiption - Calendar days
                - 6 - Percent per anticiption - Working days
              type: string
        discount2:
          $ref: '#/components/schemas/DiscountsType'
          required:
            - date
            - value
            - type
          properties:
            date:
              format: date
              description: 'Will be charged from that date. Format: yyyy-MM-dd'
              type: string
            value:
              description: 'Ex: 1.1'
              type: number
            type:
              maxLength: 1
              enum:
                - 0 - Exempt
                - 1 - Fixed amount until infomed date
                - 2 - Percent until infomed date
                - 3 - Amount per anticiption - Calendar days
                - 4 - Amount per anticiption - Working days
                - 5 - Percent per anticiption - Calendar days
                - 6 - Percent per anticiption - Working days
              type: string
        discount3:
          $ref: '#/components/schemas/DiscountsType'
          required:
            - date
            - value
            - type
          properties:
            date:
              format: date
              description: 'Will be charged from that date. Format: yyyy-MM-dd'
              type: string
            value:
              description: 'Ex: 1.1'
              type: number
            type:
              maxLength: 1
              enum:
                - 0 - Exempt
                - 1 - Fixed amount until infomed date
                - 2 - Percent until infomed date
                - 3 - Amount per anticiption - Calendar days
                - 4 - Amount per anticiption - Working days
                - 5 - Percent per anticiption - Calendar days
                - 6 - Percent per anticiption - Working days
              type: string
      example:
        discount1:
          date: string
          value: 0
          type: string
        discount2:
          date: string
          value: 0
          type: string
        discount3:
          date: string
          value: 0
          type: string
    PaymentSlipDDAEndCustomerRequest:
      title: Root Type for PaymentSlipDDAEndCustomerRequest
      description: ''
      required:
        - clientRequestId
        - Owner
        - Customer
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        tags:
          description: Markups
          type: array
          items:
            type: string
          example: '[ "tags"]'
        Owner:
          description: The owner of DDA Account
          required:
            - Account
            - taxId
          properties:
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
              example: 1991810203
            Account:
              $ref: '#/components/schemas/Account'
              description: Account
              example: |-

                {
                    "account": 24579,
                    "accountType": "CC",
                    "branch": 2346
                }
        Customer:
          description: DDA account for the end customer
          required:
            - taxId
            - Name
          type: object
          properties:
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
              example: 1991810203
            Name:
              description: Customer name.
              type: string
      example:
        clientRequestId: e4c1d6c4-60cf-407f-a495-57bd5aa4bb52
        tags:
          - Markups
        Owner:
          taxId: 1991810203
          Account:
            Account: 5104732
            AccountType: CC
            Branch: 20
        Customer:
          taxId: 1991810203
          Name: string
    PixCollectionDueDateBase:
      title: Base Debt Collection Due date
      description: Attributes common to all Debt Collection entities
      type: object
      properties:
        additionalInformation:
          title: Additional information
          description: Each respective additional information contained in the list (name and value) must be presented to the payer.
          maximum: 50
          type: array
          items:
            required:
              - nome
              - valor
            type: object
            properties:
              key:
                title: Name
                description: Name Field.
                maxLength: 50
                type: string
              value:
                title: Value
                description: Data Field.
                maxLength: 200
                type: string
        key:
          title: DICT receiver key
          description: |-
            # Key field format
            * The key field, mandatory, determines the Pix key registered in the DICT that will be used for the billing. This key will be read by the payer's PSP application for consultation with the DICT, which will return the information that will identify the recipient of the charge.
            * The key types can be: PHONE, EMAIL, CPF/CNPJ OR EVP.
            * The format of the keys can be found in the \"Formatting the DICT keys in the BR Code\" section of the Standards Manual for Pix initiation](https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos).
          maxLength: 77
          type: string
        payerQuestion:
          title: Request to payer
          description: The solicitacaoPagador field, optional, determines a text to be presented to the payer so that he can enter a correlated information, in free format, to be sent to the receiver. This text will be filled in pacs.008 by the payer's PSP in the RemittanceInformation <RmtInf> field. The size of the field <RmtInf> in pacs.008 is limited to 140 characters.
          maxLength: 140
          type: string
    PixCollectionDueDateReceiver:
      required:
        - publicArea
        - city
        - state
        - zipCode
      type: object
      properties:
        receiver:
          oneOf:
            - $ref: '#/components/schemas/PixCollectionNaturalPerson'
            - type: object
              allOf:
                - $ref: '#/components/schemas/PixCollectionLegalPerson'
                - type: object
                  properties:
                    fantasyName:
                      title: Fantasy name.
                      description: Fantasy name
                      maxLength: 200
                      type: string
          description: The receiving object organizes the information about the collection creditor.
          allOf:
            - $ref: '#/components/schemas/PixCollectionDueDateAdditionalDataPersonReceiver'
    PixCollectionDueDateDebtor:
      title: Root Type for Debtor.
      type: object
      properties:
        debtor:
          oneOf:
            - $ref: '#/components/schemas/PixCollectionNaturalPerson'
            - $ref: '#/components/schemas/PixCollectionLegalPerson'
          description: The fields nested under the debtor object are optional and identify the debtor, that is, the person or institution to whom the collection is addressed. It does not necessarily identify who will actually make the payment. A CPF may be the debtor of a charge, but another CPF may actually pay the document. The field debtor.cpf and field debtor.cnpj are not allowed to be filled at the same time. If the field debtor.cnpj is filled, then the field debtor.cpf cannot be filled, and vice versa. If the debtor.name field is filled, then either a debtor.cpf or a debtor.cnpj field must be filled in..
          allOf:
            - type: object
              properties:
                email:
                  title: Email
                  description: User email.
                  maxLength: 200
                  type: string
            - $ref: '#/components/schemas/PixCollectionDueDateAdditionalDataPerson'
    PixCollectionDueDateCalendarRequest:
      title: Root Type for Calendar.
      type: object
      properties:
        calendar:
          description: The fields nested under the calendar identifier organize information regarding billing time tracking.
          allOf:
            - $ref: '#/components/schemas/PixCollectionDueDateCalendarBase'
      example:
        dueDate: '2021-12-16'
        expirationAfterPayment: 30
    CPF:
      title: CPF
      pattern: /^\d{11}$/
      type: string
    PixCollectionNaturalPerson:
      title: Natural Person
      required:
        - cpf
        - name
      type: object
      properties:
        cpf:
          allOf:
            - $ref: '#/components/schemas/CPF'
            - description: CPF of the borrower or 'drawee'.
        name:
          title: Name
          description: Name of the borrower or 'drawee'.
          maxLength: 200
          type: string
    CNPJ:
      title: CNPJ
      pattern: /^\d{14}$/
      type: string
    PixCollectionLegalPerson:
      title: Legal Person
      required:
        - cnpj
        - name
      type: object
      properties:
        cnpj:
          allOf:
            - $ref: '#/components/schemas/CNPJ'
            - description: CNPJ of the borrower or 'drawee'.
        name:
          title: Name
          description: Name of the borrower or 'drawee'.
          maxLength: 200
          type: string
    PixCollectionDueDateAdditionalDataPersonReceiver:
      required:
        - city
        - postalCode
        - publicArea
        - state
      type: object
      properties:
        publicArea:
          title: PublicArea
          description: User address.
          maxLength: 200
          type: string
        city:
          title: City
          description: User city.
          maxLength: 200
          type: string
        state:
          title: State
          description: User state.
          maxLength: 2
          type: string
        postalCode:
          title: PostalCode
          description: User postal code.
          maxLength: 8
          type: string
    PixCollectionDueDateAdditionalDataPerson:
      type: object
      properties:
        publicArea:
          title: PublicArea
          description: User address.
          maxLength: 200
          type: string
        city:
          title: City
          description: User city.
          maxLength: 200
          type: string
        state:
          title: State
          description: User state.
          maxLength: 2
          type: string
        postalCode:
          title: PostalCode
          description: User postal code.
          maxLength: 8
          type: string
    PixCollectionDueDateCalendarBase:
      title: Root Type for CalendarioBase
      description: ''
      required:
        - dueDate
        - expirationAfterPayment
      type: object
      properties:
        dueDate:
          format: date
          description: It is a date, in the format `yyyy-mm-dd`, according to ISO 8601. It is the due date of the collection. The charge can be honored up to and including that day, at any time of the day.
          type: string
        expirationAfterPayment:
          format: int32
          description: This is the number of calendar days after the due date on which the charge can be paid. If this period has expired and the charge has not been paid, it will remain ACTIVE.
          default: '30'
          type: integer
    PixCollectionDueLocation:
      title: Root Type for Location
      description: Payload location identifier.
      required:
        - id
        - merchant
        - type
      type: object
      properties:
        merchant:
          $ref: '#/components/schemas/PixMerchant'
          description: ''
        type:
          description: ''
          enum:
            - COB
            - COBV
          type: string
      example:
        pactualId: 21ee0ad7-2a34-4c67-a55d-514d6760c2e2
    PixCollectionDueDateCreateRequest:
      title: Root Type for PixCollectionDueDateCreateRequest
      description: ''
      required:
        - clientRequestId
        - calendar
        - key
        - debtor
        - receiver
        - amount
      type: object
      allOf:
        - $ref: '#/components/schemas/PixCollectionDueDateCalendarRequest'
        - $ref: '#/components/schemas/PixCollectionDueDateDebtor'
        - $ref: '#/components/schemas/PixCollectionDueDateReceiver'
        - type: object
          properties:
            amount:
              $ref: '#/components/schemas/PixCollectionDueDateAmount'
            locationInformation:
              $ref: '#/components/schemas/PixCollectionDueLocation'
        - $ref: '#/components/schemas/PixCollectionDueDateBase'
      example:
        additionalInformation:
          - key: string
            value: string
        amount:
          original: '100.00'
          fine:
            modality: FIXED_VALUE
            amountPerc: '20.00'
          interest:
            modality: VALUE_CALENDAR_DAYS
            amountPerc: '20.00'
          abatement:
            modality: FIXED_VALUE
            amountPerc: '5.00'
          discount:
            modality: FIXED_VALUE_UNTIL_THE_DATES_INFORMED
            amountPerc: '10.00'
        calendar:
          dueDate: '2022-12-12'
          expirationAfterPayment: 10
        debtor:
          cpf: '12345678901'
          name: jose da silva
          email: user@example.com
          publicArea: Rua Bela Cintra
          city: Sao Paulo
          state: SP
          postalCode: '12345678'
        key: string
        locationInformation:
          merchant:
            postalCode: '87615499'
            city: string
            name: string
            merchantCategoryCode: '9094'
          type: COB
        payerQuestion: string
        receiver:
          cnpj: '12345678909876'
          name: Nome Comerciante
          fantasyName: Nome Fantasia
          publicArea: Rua Agua verde
          city: Curitiba
          state: PR
          postalCode: '88888333'
    PixMerchant:
      title: Root Type for PixMerchant
      description: The Merchant type used in Pix apis.
      required:
        - name
        - city
      type: object
      properties:
        city:
          description: The merchant's city. Special chars are not allowed.
          maxLength: 15
          type: string
        merchantCategoryCode:
          description: The merchant category code. Usually used on the financial transactions to categorize the type of service provided by the merchant.
          pattern: \d{4}
          type: string
        name:
          description: The merchant's name. Special chars are not allowed.
          maxLength: 25
          type: string
        postalCode:
          description: The merchant's postal code.
          pattern: \d{8}
          type: string
      example:
        city: RIO DE JANEIRO
        merchantCategoryCode: 5499
        name: Pipocas BR
        postalCode: '20200100'
    PixCollectionDueDateAmount:
      title: Collection amount due.
      description: Monetary values.
      required:
        - original
      type: object
      properties:
        abatement:
          title: Abatement applied.
          description: Abatement applied to collection.
          required:
            - modality
            - amountPerc
          properties:
            amountPerc:
              title: Abatements
              description: Abatement or other deductions applied to the document, in absolute or percentage of the original value of the document, according to "amount.abatement.modality".
              pattern: \d{1,10}\.\d{2}
              type: string
            modality:
              format: enum
              title: Abatement modality.
              description: |
                ##### Abatement modality, according to the domains table.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>FIXED_VALUE</td><td>1</td></tr><tr><td>PERCENT</td><td>2</td></tr></table>
              type: string
        discount:
          oneOf:
            - type: object
              properties:
                discountDateFixed:
                  title: Discount List.
                  description: Absolute discounts applied to collection.
                  maxItems: 3
                  minItems: 1
                  uniqueItems: true
                  type: array
                  items:
                    required:
                      - date
                      - amountPerc
                    allOf:
                      - properties:
                          date:
                            format: date
                            title: Deadline for the absolute discount of the charge.
                            description: Discounts for prepayment, with fixed date. Matrix with up to three elements, each element consisting of a pair "date and valuePerc", to establish percentage or absolute discounts, up to that payment date. It is a date, in the format `yyyy-mm-dd`, according to ISO 8601. The discount date must be less than the due date of the collection.
                            type: string
                            example: '2020-04-01'
                      - properties:
                          amountPerc:
                            title: Absolute discount amount.
                            description: Discount in absolute value or percentage per day, working or accrued, as per amount.discount.modality
                            pattern: \d{1,10}\.\d{2}
                            type: string
            - required:
                - amountPerc
              type: object
              properties:
                amountPerc:
                  title: Rebates
                  description: Abatements or other deductions applied to the document, in absolute or percentage of the original value of the document.
                  pattern: \d{1,10}\.\d{2}
                  type: string
          title: Discounts applied.
          description: Discounts applied to the charge.
          required:
            - modality
          allOf:
            - type: object
              properties:
                modality:
                  format: enum
                  title: Discounts modality.
                  description: |
                    ##### Discount mode, according to the domains table.
                    <table><tr><th>Description</th><th>Domain</th></tr> <tr><td>FIXED_VALUE_UNTIL_THE_DATES_INFORMED</td><td>1</td></tr> <tr><td>PERCENTAGE_DATE_REPORTED</td><td>2</td></tr> <tr><td>AMOUNT_PER_CALENDAR_DAY_ADVANCE</td><td>3</td></tr> <tr><td>AMOUNT_ADVANCE_BUSINESS_DAY</td><td>4</td></tr> <tr><td>PERCENTAGE_ADVANCE_CURRENT_DAY</td><td>5</td></tr> <tr><td>PERCENTAGE_ADVANCE_BUSINESS_DAY</td><td>6</td></tr></table>
                  type: string
        fine:
          title: Fine applied.
          description: Fine applied to the collection.
          required:
            - modality
            - amountPerc
          type: object
          properties:
            amountPerc:
              title: Absolute fine amount.
              description: Fine of the document in absolute or percentage value, according to "amount.fine.modality".
              pattern: \d{1,10}\.\d{2}
              type: string
            modality:
              format: enum
              title: Fine modality.
              description: |
                ##### Mode of fine, according to the table of domains.
                <table><tr><th>Description</th><th>Domain</th></tr><tr><td>FIXED_VALUE</td><td>1</td></tr><tr><td>PERCENT</td><td>2</td></tr></table>
              type: string
        interest:
          title: Interest applied.
          description: Interest applied to collection.
          required:
            - modality
            - amountPerc
          type: object
          properties:
            amountPerc:
              title: Amount
              description: Interest of the document in absolute or percentage value, according to "amount.interest.modality".
              pattern: \d{1,10}\.\d{2}
              type: string
            modality:
              format: enum
              title: Interest modality.
              description: |
                ##### Interest rate, according to the domains table.
                <table> <tr><th>Description</th><th>Domain</th></tr> <tr><td>VALUE_CALENDAR_DAYS</td><td>1</td></tr> <tr><td>PERCENTAGE_PER_DAY_CALENDAR_DAYS</td><td>2</td></tr> <tr><td>PERCENTAGE_PER_MONTH_CALENDAR_DAYS</td><td>3</td></tr> <tr><td>PERCENTAGE_PER_YEAR_CALENDAR_DAYS</td><td>4</td></tr> <tr><td>VALUE_WORKING_DAYS</td><td>5</td></tr> <tr><td>PERCENTAGE_PER_DAYWORKING_DAYS</td><td>6</td></tr> <tr><td>PERCENTAGE_PER_MONTH_WORKING_DAYS</td><td>7</td></tr> <tr><td>PERCENTAGE_PER_YEAR_WORKING_DAYS</td><td>8</td></tr> </table>
              type: string
        original:
          title: Amount
          description: Original collection amount.
          pattern: \d{1,10}\.\d{2}
          type: integer
    FxBuyQuoteReponse:
      title: Root Type for FxBuyQuoteReponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
            pactualBulkId:
              description: The pactualId of the quote aggregation
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Contract Entity name.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              type: object
              properties:
                unitPrice:
                  format: double
                  description: The unit price of the base currency in BRL
                  type: number
                total:
                  format: double
                  description: The amount based on the baseCurrency that the customer will be charged (BUY)/The amount based on the base Currency that the customer will recive (SELL)
                  type: number
                expirationDate:
                  description: The Datetime that the quote wil expire (once the quote expirte, it will be no longer possible to accept)
                  type: string
                quoteTimestamp:
                  description: The Datetime that the quote was created
                  type: string
                acceptTimestamp:
                  format: date-time
                  description: The Datetime that the currency was accepted, default value if the quote was not accepeted
                  type: string
                operationSide:
                  description: The direction of the trade.
                  type: string
                quoteCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                baseCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                amount:
                  format: int32
                  description: Indicated the amount for the currency of the quote/trade
                  type: integer
                quoteCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the QuoteCurrency
                  type: string
                baseCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the BaseCurrency
                  type: string
                bankingChannelId:
                  description: The bankingChannelId retrieved from the BankingChannelApi, its translates the SWIFT account used on the quote, the account that will recive the foreignCurrency (BUY) / the account will send the foreignCurrency (SELL)
                  type: string
                indicative:
                  description: Indicates whether a quote is indicative or not, Indicative quotes cannot be accepeted
                  type: string
                isManagerialOnly:
                  description: It indicates whether a quote is managerial only or not, managerial only quotes won�t be executed, they exists only for managerial purposes
                  type: boolean
                aggregationDateTime:
                  format: date-time
                  description: The date and hour of the quote aggregation
                  type: string
                accountId:
                  description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
                  type: string
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
          pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
          clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          createTimestamp: '2021-03-25T17:39:14.873622+00:00'
          lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
          entity: ForeignExchange
          status: CREATED
          body:
            unitPrice: 5.7702
            total: 63.47
            expirationDate: '2021-03-25T14:41:14.1611053-03:00'
            quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
            acceptTimestamp: '0001-01-01T00:00:00'
            operationSide: BUY
            quoteCurrency: BRL
            baseCurrency: USD
            amount: 11
            quoteCurrencySettlementDate: '2021-03-25T00:00:00'
            baseCurrencySettlementDate: '2021-03-25T00:00:00'
            bankingChannelId: aa9ce499242349d28c4facf5015555c8
            accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
            preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
            indicative: 'false'
            isManagerialOnly: 'false'
          tags: []
    FxSellQuoteReponse:
      title: Root Type for FxSellQuoteReponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            pactualBulkId:
              description: The pactualId of the quote aggregation
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Contract Entity name.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              type: object
              properties:
                unitPrice:
                  format: double
                  description: The unit price of the base currency in BRL
                  type: number
                total:
                  format: double
                  description: The amount based on the baseCurrency that the customer will be charged (BUY)/The amount based on the base Currency that the customer will recive (SELL)
                  type: number
                expirationDate:
                  description: The Datetime that the quote wil expire (once the quote expirte, it will be no longer possible to accept)
                  type: string
                quoteTimestamp:
                  description: The Datetime that the quote was created
                  type: string
                acceptTimestamp:
                  format: date-time
                  description: The Datetime that the currency was accepted, default value if the quote was not accepeted
                  type: string
                operationSide:
                  description: The direction of the trade.
                  type: string
                senderName:
                  description: Name of the payer.
                  type: string
                countryCode:
                  description: 2 digit code of the country from the payer.
                  type: string
                quoteCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                baseCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                amount:
                  format: int32
                  description: Indicated the amount for the currency of the quote/trade
                  type: integer
                quoteCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the QuoteCurrency
                  type: string
                baseCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the BaseCurrency
                  type: string
                indicative:
                  description: Indicates whether a quote is indicative or not, Indicative quotes cannot be accepeted
                  type: string
                aggregationDateTime:
                  format: date-time
                  description: The date and hour of the quote aggregation
                  type: string
                isManagerialOnly:
                  description: It indicates whether a quote is managerial only or not, managerial only quotes won�t be executed, they exists only for managerial purposes
                  type: boolean
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
          pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
          clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          createTimestamp: '2021-03-25T17:39:14.873622+00:00'
          lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
          entity: ForeignExchange
          status: CREATED
    FxPreTicketSellQuoteRequestBody:
      title: Root Type for FxPreticketSellQuoteRequestBody
      description: ''
      required:
        - amount
        - baseCurrency
        - clientRequestId
        - senderName
      type: object
      properties:
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        tags:
          description: Tags that will be recorded with the request response.
          type: array
          items:
            type: string
        amount:
          format: decimal
          description: value to be quoted (always in base currency)
          type: number
        baseCurrency:
          description: 3 digit currency being sold
          type: string
        senderName:
          description: Name of the payer
          type: string
      example:
        clientRequestId: guid/uuid
        tags:
          - TesteLocalUat
        amount: 11
        baseCurrency:
          description: 3 digit currency code that the quote/trade quote
          type: string
        senderName: Paulo
        quoteCurrencyTotalAmount:
          format: double
          description: The average total value of the aggregation's quotes in quote currency
          type: number
        baseCurrencyTotalAmount:
          format: double
          description: The average total value of the aggregation's quotes in base currency
          type: number
        meanTax:
          format: double
          description: The avarage value of the unit price
          type: number
        totalQuotes:
          format: double
          description: The number of quotes in the aggregation
          type: number
        operationSide:
          description: The direction of the trade
          type: string
        aggregationDateTime:
          format: date-time
          description: The date and hour of the aggregation
          type: string
        quoteCurrencySettlementDate:
          format: date-time
          description: The settlementDate from the QuoteCurrency
          type: string
        baseCurrencySettlementDate:
          format: date-time
          description: The settlementDate from the BaseCurrency
          type: string
        quoteCurrency:
          description: 3 digit currency code that the quote/trade quote
          type: string
        isManagerialOnly:
          description: It indicates whether a quote is managerial only or not, managerial only quotes won't be executed, they exists only for managerial purposes
          type: boolean
        preTicketPactualId:
          description: The pactualid of the pre ticket
          type: string
        accountId:
          description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
          type: string
        taxes:
          description: The ids of the trade taxes
          type: array
          items:
            $ref: '#/components/schemas/Tax'
        movementId:
          description: The id of the foreign exchange trade
          type: string
    FxPreTicketBuyQuoteRequestBody:
      title: Root Type for FxPreticketBuyQuoteRequestBody
      description: ''
      required:
        - amount
        - baseCurrency
        - clientRequestId
      type: object
      properties:
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        tags:
          description: Tags that will be recorded with the request response.
          type: array
          items:
            type: string
        amount:
          format: decimal
          description: Value to be quoted (always in base currency)
          type: number
        baseCurrency:
          description: 3 digit currency being purchased
          type: string
        additionalInformation:
          description: Field 70 of the SWIFT file
          type: string
      example:
        clientRequestId: guid/uuid
        tags:
          - TesteLocalUat
        amount: 11
        baseCurrency: USD
        AdditionalInformation: test
    PaymentSlipPixShortRequest:
      description: ''
      type: object
      allOf:
        - required:
            - dueDate
            - amount
            - clientRequestId
          type: object
          properties:
            amount:
              description: 'Nominal amount. Example format: 2500.00'
              type: string
            discounts:
              $ref: '#/components/schemas/PaymentSlipPixShortDiscounts'
              description: List of discount amount or percentage if customer pays until informed date.
            dueDate:
              description: 'Due date. Format: yyyy-MM-dd'
              maxLength: 10
              minLength: 10
              type: string
            fine:
              $ref: '#/components/schemas/PaymentSlipPixFine'
              description: ''
            overdueDate:
              description: 'How date the payment slip is canceled and can not be paid anymore. Default value = Due date + 30 Days. Format: yyyy-MM-dd'
              maxLength: 0
              minLength: 0
              type: string
            payer:
              $ref: '#/components/schemas/Customer'
              description: Represents the person responsible for the payment.
            clientRequestId:
              description: 'Unique identifier (Uuid) provided by the client. Can be used in response corelation. For example: {05a8b502-682e-4ca0-9762-8e260ff736c6}'
              type: string
              example: 05a8b502-682e-4ca0-9762-8e260ff736c6
            locationInformation:
              $ref: '#/components/schemas/PaymentSlipPixShortLocationInformation'
              description: ''
            tags:
              description: A list of tags.
              type: array
              items:
                type: string
            interest:
              $ref: '#/components/schemas/PaymentSlipPixInterest'
              description: ''
        - $ref: '#/components/schemas/PixCollectionDueDateReceiver'
        - $ref: '#/components/schemas/PixCollectionDueDateBaseShort'
      example:
        dueDate: '2022-10-22'
        overdueDate: '2022-11-22'
        amount: '2500.00'
        discounts:
          modality: FIXED_VALUE_UNTIL_THE_DATES_INFORMED
          discount1:
            date: '2022-10-05'
            value: '200.00'
          discount2:
            date: '2022-10-06'
            value: '150.00'
          discount3:
            date: '2022-10-07'
            value: '100.00'
        fine:
          modality: FIXED_VALUE
          amountPerc: '300.00'
          date: '2022-10-23'
        interest:
          amountPerc: '20.00'
          date: '2022-10-23'
        key: suporte@nomeempresa.com.br
        payer:
          name: Marcos Vinicius Pietro Brito
          taxId: '16879503853'
          street: Rua das Flores
          number: '43'
          neighborhood: Boa Vista
          city: Rio Branco
          stateCode: AC
          zipCode: '69912122'
        receiver:
          cnpj: '64629812000183'
          fantasyName: Agatha e Julio Fotografias ME
          Name: Agatha e Julio Fotografias ME
          publicArea: '20000000'
          city: Sao Paulo
          state: SP
          postalCode: '20000000'
        locationInformation:
          merchant:
            postalCode: '20000000'
            city: Sao Paulo
            name: Fotografias ME
            merchantCategoryCode: '0000'
        clientRequestId: 4fe74b3a-c800-4d65-ac47-c238a25a0943
    PaymentSlipPixShortDiscount:
      description: A discount property.
      type: object
      properties:
        date:
          description: 'Format: yyyy-MM-dd'
          type: string
        value:
          description: 'Format example: 100.00'
          type: string
    PaymentSlipPixShortDiscounts:
      description: List of discount amount or percentage if customer pays until informed date.
      type: object
      properties:
        discount1:
          $ref: '#/components/schemas/PaymentSlipPixShortDiscount'
          description: ''
        discount2:
          $ref: '#/components/schemas/PaymentSlipPixShortDiscount'
          description: ''
        discount3:
          $ref: '#/components/schemas/PaymentSlipPixShortDiscount'
          description: ''
        modality:
          description: ''
          enum:
            - FIXED_VALUE_UNTIL_THE_DATES_INFORMED
            - PERCENTAGE_DATE_REPORTED
            - AMOUNT_PER_CALENDAR_DAY_ADVANCE
            - AMOUNT_ADVANCE_BUSINESS_DAY
            - PERCENTAGE_ADVANCE_CURRENT_DAY
            - PERCENTAGE_ADVANCE_BUSINESS_DAY
          type: string
    PaymentSlipPixShortLocationInformation:
      description: ''
      type: object
      properties:
        merchant:
          $ref: '#/components/schemas/PixMerchant'
          description: ''
    PaymentSlipPixFine:
      description: Defines the type of fine to be applied.
      type: object
      properties:
        modality:
          description: Type of fine.
          enum:
            - FIXED_VALUE
            - PERCENT
          type: string
        date:
          description: 'Format: yyyy-MM-dd'
          type: string
        amountPerc:
          description: 'Format: 20.00'
          type: string
    PixCollectionDueDateBaseShort:
      title: Base Debt Collection Due date
      description: Attributes common to all Debt Collection entities
      type: object
      properties:
        additionalInformation:
          title: Additional information
          description: Each respective additional information contained in the list (name and value) must be presented to the payer.
          maximum: 50
          type: array
          items:
            required:
              - nome
              - valor
            type: object
            properties:
              key:
                title: Name
                description: Name Field.
                maxLength: 50
                type: string
              value:
                title: Value
                description: Data Field.
                maxLength: 200
                type: string
        key:
          title: DICT receiver key
          description: |-
            # Key field format
            * The key field, mandatory, determines the Pix key registered in the DICT that will be used for the billing. This key will be read by the payer's PSP application for consultation with the DICT, which will return the information that will identify the recipient of the charge.
            * The key types can be: PHONE, EMAIL, CPF/CNPJ OR EVP.
            * The format of the keys can be found in the \"Formatting the DICT keys in the BR Code\" section of the Standards Manual for Pix initiation](https://www.bcb.gov.br/estabilidadefinanceira/pagamentosinstantaneos).
          maxLength: 77
          type: string
    PaymentSlipPixInterest:
      description: The interest rate for issuing a simplified bolepix is ​​fixed and cannot be changed. The billing method is PERCENTAGE_POINT_PER_MONTH_CALENDAR_DAYS.
      required:
        - date
        - value
      properties:
        date:
          format: date
          description: 'Will be charged from that date. Format: yyyy-MM-dd'
          type: string
        value:
          description: 'Ex: 1.1'
          type: number
    AtdAuthorizationIssueingResponse:
      title: Root Type for AtdAuthorizationIssueingResponse
      description: ''
      required:
        - body
        - status
        - version
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          format: int32
          description: The http status code.
          type: integer
        body:
          description: The response body of request of single resource.
          required:
            - clientRequestId
            - pactualId
          type: object
          properties:
            clientRequestId:
              description: Unique resource identificator given by the client.
              type: string
            pactualId:
              description: Unique resource identificator (Uuid) generated by api.
              type: string
      example:
        version: 1.2.1
        status: 200
        body:
          clientRequestId: 49c6e67c-2c41-4ac9-b4da-fb24e2e61693
          pactualId: 4ac0544f-d747-4392-b0e1-86ea6c445973
    AtdBillingIssueingResponse:
      title: Root Type for AtdBillingIssueingResponse
      description: ''
      required:
        - body
        - status
        - version
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          format: int32
          description: The http status code.
          type: integer
        body:
          description: The response body of request of single resource.
          required:
            - clientRequestId
            - pactualId
          type: object
          properties:
            clientRequestId:
              description: Unique resource identificator given by the client.
              type: string
            pactualId:
              description: Unique resource identificator (Uuid) generated by api.
              type: string
      example:
        version: 1.2.1
        status: 200
        body:
          clientRequestId: 49c6e67c-2c41-4ac9-b4da-fb24e2e61693
          pactualId: 4ac0544f-d747-4392-b0e1-86ea6c445973
    AtdAuthorizationIssueingRequest:
      title: Root Type for AtdAuthorizationIssueingRequest
      description: ''
      required:
        - client
        - clientRequestId
        - contract
        - product
      type: object
      properties:
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        client:
          description: Client Account information.
          required:
            - documentNumber
            - account
          type: object
          properties:
            documentNumber:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              required:
                - number
                - agency
              type: object
              properties:
                number:
                  description: The account number.
                  type: string
                agency:
                  description: The agency number.
                  type: string
        product:
          description: Product identification
          required:
            - code
          type: object
          properties:
            code:
              description: Unique id code for each product
              type: string
        contract:
          description: Contract identification
          required:
            - identification
            - signatureDate
          type: object
          properties:
            identification:
              description: Contract identification
              type: string
            signatureDate:
              format: date-time
              description: Contract date of signature
              type: string
        tags:
          description: Markups
          type: array
          items:
            type: string
      example:
        clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        client:
          documentNumber: '89009196798'
          account:
            number: '003261691'
            agency: '20'
        product:
          code: a12b6cd69e56
        contract:
          identification: '1101822349999'
          signatureDate: '2022-10-01'
    AtdBillingIssueingChargebackRequest:
      description: ''
      required:
        - chargebackReason
      type: object
      properties:
        chargebackReason:
          description: Reason for the chargeback
          type: string
    AtdBillingIssueingRequest:
      title: Root Type for AtdBillingIssueingRequest
      description: ''
      required:
        - amount
        - billingDate
        - client
        - contract
        - discounts
        - product
        - clientRequestId
      type: object
      properties:
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        billingDate:
          format: date-time
          description: Billing date, must be d+1 or more
          type: string
        discounts:
          description: Discount identification
          required:
            - type
            - aliquot
            - discountAmount
          type: array
          items:
            type: object
            properties:
              type:
                description: The discount type (IOF).
                enum:
                  - IOF
                type: string
              aliquot:
                format: double
                description: Aliquot in percent (%)
                type: number
              discountAmount:
                description: Absolute value for discount.
                type: integer
        client:
          description: Client Account information.
          required:
            - documentNumber
            - account
          type: object
          properties:
            documentNumber:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              required:
                - number
                - agency
              type: object
              properties:
                number:
                  description: The account number.
                  type: string
                agency:
                  description: The agency number.
                  type: string
        product:
          description: Product identification
          required:
            - code
          type: object
          properties:
            code:
              description: Unique id code for each product
              type: string
        contract:
          description: Contract identification
          required:
            - identification
            - signatureDate
          type: object
          properties:
            identification:
              description: Contract identification
              type: string
            signatureDate:
              format: date-time
              description: Contract date of signature
              type: string
        amount:
          description: Amount in cents.
          type: integer
        tags:
          description: Markups
          type: array
          items:
            type: string
        authorizationPactualId:
          description: Pactual Id of the previously generated Authorization.
          type: string
      example:
        clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        authorizationPactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa1
        billingDate: '2022-11-02'
        amount: 200
        discounts:
          - type: IOF
            aliquot: 10
            discountAmount: 20
        client:
          documentNumber: '89009196798'
          account:
            number: '003261691'
            agency: '20'
        product:
          code: a12b6cd69e56
        contract:
          identification: '1101822349999'
          signatureDate: '2022-10-02'
    FxBuyIndicativeQuoteReponse:
      title: Root Type for FxBuyQuoteReponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Contract Entity name.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              type: object
              properties:
                unitPrice:
                  format: double
                  description: The unit price of the base currency in BRL
                  type: number
                total:
                  format: double
                  description: The amount based on the baseCurrency that the customer will be charged (BUY)/The amount based on the base Currency that the customer will recive (SELL)
                  type: number
                operationSide:
                  description: The direction of the trade.
                  type: string
                quoteCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                baseCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                amountCurrency:
                  description: 3 digit currency code of the amount
                  type: string
                amount:
                  format: int32
                  description: Indicated the amount for the currency of the quote/trade
                  type: integer
                quoteCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the QuoteCurrency
                  type: string
                baseCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the BaseCurrency
                  type: string
                indicative:
                  description: Indicates whether a quote is indicative or not, Indicative quotes cannot be accepeted
                  type: string
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
          clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          createTimestamp: '2021-03-25T17:39:14.873622+00:00'
          lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
          entity: ForeignExchange
          status: INDICATIVE
          body:
            unitPrice: 5.7702
            total: 63.47
            operationSide: BUY
            quoteCurrency: BRL
            baseCurrency: USD
            amountCurrency: BRL
            amount: 11
            quoteCurrencySettlementDate: '2021-03-25T00:00:00'
            baseCurrencySettlementDate: '2021-03-25T00:00:00'
            indicative: 'true'
          tags: []
    AtdAuthorizationIssueingGetResponse:
      title: Root Type for AtdAuthorizationIssueingGetResponse
      description: ''
      required:
        - body
        - status
        - version
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          format: int32
          description: The http status code.
          type: integer
        body:
          description: Data Object
          required:
            - pactualId
            - clientRequestId
            - createTimestamp
            - lastUpdateTimestamp
            - entity
            - status
            - body
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Contract Entity name.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              required:
                - client
                - product
                - contract
                - partner
              type: object
              properties:
                client:
                  description: Client Account information.
                  required:
                    - name
                    - documentNumber
                    - account
                  type: object
                  properties:
                    name:
                      description: The acocunt holder name.
                      type: string
                    documentNumber:
                      description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
                      type: integer
                    account:
                      required:
                        - number
                        - agency
                        - bank
                      type: object
                      properties:
                        number:
                          description: The account number.
                          type: string
                        agency:
                          description: The agency number.
                          type: string
                        bank:
                          description: The bank code (3 digits).
                          type: string
                product:
                  description: Product identification
                  required:
                    - code
                    - description
                    - authorizationType
                  type: object
                  properties:
                    code:
                      description: Unique id code for each product
                      type: string
                    description:
                      description: Product description
                      type: string
                    authorizationType:
                      description: Authorization type
                      type: string
                contract:
                  description: Contract identification
                  required:
                    - identification
                    - type
                  type: object
                  properties:
                    identification:
                      description: Contract identification
                      type: string
                    type:
                      description: Contract type
                      type: string
                partner:
                  description: Contract identification
                  required:
                    - code
                    - name
                  type: object
                  properties:
                    code:
                      description: Partner identification code
                      type: string
                    name:
                      description: Partner name
                      type: string
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 1.3.1
        status: 200
        body:
          pactualId: aff16b5c-2c57-4b05-a014-c7c77dad93fc
          clientRequestId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          createTimestamp: '2022-11-01T14:55:43.8274597+00:00'
          lastUpdateTimestamp: '2022-11-01T14:55:57.0039699+00:00'
          entity: AtdDebitAuthorization
          status: SCHEDULED
          body:
            authorizationId: 265bc9d6-c9f8-42f2-8252-3f2f0d9c18e5
            client:
              name: Sophia Cecilia Drumond
              documentNumber: '89009196798'
              account: {}
            product:
              code: a12b6cd69e56
              description: Seguro Vida total
              authorizationType: Autorização concedida pelo cliente
            contract:
              identification: '1101822341501'
              type: POLICY_NUMBER
            partner:
              code: '1101822349999'
              name: BTG
          tags: []
    AtdBillingIssueingGetResponse:
      title: Root Type for AtdBillingIssueingGetResponse
      description: ''
      required:
        - body
        - status
        - version
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          format: int32
          description: The http status code.
          type: integer
        body:
          description: Data Object
          required:
            - pactualId
            - clientRequestId
            - createTimestamp
            - lastUpdateTimestamp
            - entity
            - status
            - body
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Contract Entity name.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              required:
                - billingDate
                - amount
                - discounts
                - client
                - product
                - contract
              type: object
              properties:
                authorizationPactualId:
                  description: Pactual Id of the previously generated Authorization id.
                  type: string
                billingDate:
                  format: date-time
                  description: Billing date, must be d+1 or more.
                  type: string
                amount:
                  description: Amount in cents.
                  type: integer
                discounts:
                  description: Discount identification
                  required:
                    - type
                    - aliquot
                    - discountAmount
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        description: The discount type (IOF).
                        enum:
                          - IOF
                        type: string
                      aliquot:
                        description: Aliquot in percent (%)
                        type: integer
                      discountAmount:
                        description: Absolute value for discount.
                        type: integer
                client:
                  description: Client Account information.
                  required:
                    - name
                    - documentNumber
                    - account
                  type: object
                  properties:
                    name:
                      description: The acocunt holder name.
                      type: string
                    documentNumber:
                      description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
                      type: integer
                    account:
                      required:
                        - number
                        - agency
                        - bank
                      type: object
                      properties:
                        number:
                          description: The account number.
                          type: string
                        agency:
                          description: The agency number.
                          type: string
                        bank:
                          description: The bank code (3 digits).
                          type: string
                product:
                  description: Product identification
                  required:
                    - code
                  type: object
                  properties:
                    code:
                      description: Unique id code for each product
                      type: string
                contract:
                  description: Contract identification
                  required:
                    - identification
                  type: object
                  properties:
                    identification:
                      description: Contract identification
                      type: string
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 1.2.1
        status: 200
        body:
          pactualId: aff16b5c-2c57-4b05-a014-c7c77dad93fc
          clientRequestId: f45ff9f9-88c5-486b-9d2a-b0ea8d699721
          createTimestamp: '2022-11-01T14:55:43.8274597+00:00'
          lastUpdateTimestamp: '2022-11-01T14:55:57.0039699+00:00'
          entity: AtdAutomaticDebit
          status: SCHEDULED
          body:
            authorizationId: 265bc9d6-c9f8-42f2-8252-3f2f0d9c18e5
            billingDate: '2022-11-01T00:00:00Z'
            amount: '200'
            discounts:
              - type: IOF
                aliquot: '10'
                discountAmount: '20'
            client:
              name: Renata Gomes Alvarenga
              documentNumber: '95442383600'
              account:
                number: '004372702'
                agency: '20'
                bank: '208'
            product:
              code: e12a6ae69f55
            contract:
              identification: '1101822341501'
          tags: []
    FxPreTicketQuoteReponse:
      title: Root Type for FxBuyQuoteReponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
          clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
    Fine:
      description: Percentage or value of the charge amount charged if customer pays after the fine date. Default value = 0.00 (0%)
      required:
        - date
        - value
      properties:
        date:
          format: date
          description: 'Will be charged from that date. Format: yyyy-MM-dd'
          type: string
        value:
          description: 'Ex: 1.1'
          type: number
        Code:
          description: Defines the type of fine to be applied.
          default: PERCENT
          enum:
            - FIXED_VALUE
            - PERCENT
          type: string
    Interest:
      description: Day interest, in percentage or amount, charged if customer pays after the interest date. Default value = 0.00 (0%)
      required:
        - date
        - value
      properties:
        date:
          format: date
          description: 'Will be charged from that date. Format: yyyy-MM-dd'
          type: string
        value:
          description: 'Ex: 1.1'
          type: number
        Code:
          description: |-
            Defines the type of interest to be applied.

            |Code |
            |----------|
            |AMOUNT_CALENDAR_DAYS|
            |PERCENTAGE_POINT_PER_MONTH_CALENDAR_DAYS|
            |AMOUNT_WORKING_DAYS|
            |PERCENTAGE_POINT_PER_MONTH_WORKING_DAYS|
            |EXEMPT|
          default: PERCENTAGE_POINT_PER_MONTH_CALENDAR_DAYS
          type: string
    DiscountsType:
      description: ''
      required:
        - date
        - value
        - type
      type: object
      properties:
        date:
          format: date
          description: 'Will be charged from that date. Format: yyyy-MM-dd'
          type: string
          example: '2020-07-01T00:00:00.000Z'
        value:
          description: 'Ex: 1.1'
          type: number
          example: '1.1'
        type:
          description: "|Code |Description|\r\n|----------|:-------------|\r\n|0|Exempt|\r\n|1|Fixed amount until infomed date|\r\n|2|Percent until infomed date|\r\n|3|Amount per anticiption - Calendar days|\r\n|4|Amount per anticiption - Working days|\r\n|5|Percent per anticiption - Calendar days|\r\n|6|Percent per anticiption - Working days|"
          enum:
            - '0'
            - '1'
            - '2'
            - '3'
            - '4'
            - '5'
            - '6'
          type: string
    PaymentSlipBankSlipResponse:
      title: Root Type for PaymentSlipBankSlipResponse
      description: ''
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          format: int32
          description: Http status code.
        body:
          description: The response body.
          type: object
          properties:
            type:
              description: Type of Bank Slip.
              type: string
            maxAmount:
              format: int32
              description: Maximum amount for payment.
              type: integer
            minAmount:
              format: int32
              description: Minimum amount for payment.
              type: integer
            barCode:
              description: Identification barcode of the slip.
              type: string
            dueDate:
              format: date
              description: Payment deadline.
              type: string
            fineValue:
              format: int32
              description: Value of fine amount charged if customer pays after the due date.
              type: integer
            interestValue:
              format: int32
              description: Value of interest amount charged if customer pays after the due date.
              type: integer
            discountValue:
              format: int32
              description: Value of discount amount charged if customer pays before the due date.
              type: integer
            beneficiaryPersonType:
              description: Beneficiary person type identification.(PF = Person, PJ = Organization)
              enum:
                - PF
                - PJ
              type: string
            beneficiaryName:
              description: Beneficiary name.
              type: string
            beneficiaryDocument:
              description: Beneficiary document number.
              type: string
            customerName:
              description: Customer name.
              type: string
            customerDocument:
              description: Customer document number.
              type: string
            personType:
              description: Customer person type identification.
              enum:
                - PF
                - PJ
              type: string
            guarantorName:
              description: Guarantor Name.
              type: string
            guarantorDocument:
              description: Guarantor document number.
              type: string
            guarantorPersonType:
              description: Guarantor person type identification.
              enum:
                - PF
                - PJ
              type: string
            validForPayment:
              description: If the bank slip is valid for payment.
              type: boolean
            limitDate:
              format: date
              description: Deadline for bank slip registration.
              type: string
            paymentslipType:
              description: |
                Acronym of the payment slip type.

                |Type |Description|
                |----------|:-------------|
                |BCC|Credit Card|
                |BPC|Partial Bank slip|
                |BIT|Full Bank slip|
                |BPL|Installment bank slip|
              type: string
            paymentslipDescription:
              description: Payment slip type description.
              type: string
            originalValue:
              format: int32
              description: Payment amount without charging interest, fines or discounts.
              type: integer
            amount:
              format: int32
              description: Total amount.
              type: integer
            digitableLine:
              description: Identification digitable line of the slip.
              type: string
            receiverBankName:
              description: Receiver bank name.
              type: string
            receiverBankISPB:
              description: ISPB identification for receiver bank.
              type: string
            receiverBankCode:
              format: int32
              description: Code for receiver bank.
              type: integer
      example:
        version: 1.6.1
        status: 200
        body:
          type: paymentslip
          maxAmount: 5000
          minAmount: 5000
          barCode: '20895889400000050000001010000010422500817670'
          dueDate: '2022-02-12'
          fineValue: 0
          interestValue: 0
          discountValue: 0
          beneficiaryPersonType: PJ
          beneficiaryName: BTG PACTUAL SA
          beneficiaryDocument: '30306294000145'
          customerName: Casa Lira Construcoes
          customerDocument: '5643204000164'
          personType: PF
          guarantorName: Oliver Noah Emanuel Figueiredo
          guarantorDocument: '84020058458'
          guarantorPersonType: PF
          validForPayment: true
          limitDate: '20220212'
          paymentslipType: BIT
          paymentslipDescription: Boleto integral
          originalValue: 10000
          amount: 5000
          digitableLine: '20890001091000001042025008176700588940000005000'
          receiverBankName: BTG PACTUAL SA
          receiverBankISPB: '54403563'
          receiverBankCode: 208
    FxManagerialBuyQuoteRequestBody:
      title: Root Type for FxManagerialBuyQuoteRequestBody
      description: ''
      required:
        - baseCurrencySettlementDate
        - quoteCurrencySettlementDate
        - amount
        - baseCurrency
        - clientRequestId
      type: object
      properties:
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        tags:
          description: Tags that will be recorded with the request response.
          type: array
          items:
            type: string
        amount:
          format: decimal
          description: Indicated the amount of the AmountCurrency
          type: number
        baseCurrencySettlementDate:
          format: date
          description: The settlementDate from the BaseCurrency
          type: string
        quoteCurrencySettlementDate:
          format: date
          description: The settlementDate from the QuoteCurrency
          type: string
        baseCurrency:
          description: First 3 digit currency code within the currency pair quotation
          type: string
        amountCurrency:
          description: 3 digit currency code of the amount
          type: string
      example:
        clientRequestId: guid/uuid
        tags:
          - UAT
        amount: 11
        baseCurrencySettlementDate: '2021-02-18'
        quoteCurrencySettlementDate: '2021-02-18'
        baseCurrency: USD
        amountCurrency: BRL
    FxBuyQuoteRequestBody:
      title: Root Type for FxBuyQuoteRequestBody
      description: ''
      required:
        - baseCurrencySettlementDate
        - quoteCurrencySettlementDate
        - amount
        - baseCurrency
        - clientRequestId
        - preTicketPactualId
      type: object
      properties:
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        tags:
          description: Tags that will be recorded with the request response.
          type: array
          items:
            type: string
        amount:
          format: decimal
          description: Indicated the amount of the AmountCurrency
          type: number
        baseCurrencySettlementDate:
          format: date
          description: The settlementDate from the BaseCurrency
          type: string
        quoteCurrencySettlementDate:
          format: date
          description: The settlementDate from the QuoteCurrency
          type: string
        preTicketPactualId:
          description: The pactualid of the pre ticket
          type: string
        baseCurrency:
          description: First 3 digit currency code within the currency pair quotation
          type: string
        amountCurrency:
          description: 3 digit currency code of the amount
          type: string
      example:
        clientRequestId: guid/uuid
        tags:
          - TesteLocalUat
        amount: 11
        baseCurrencySettlementDate: '2021-02-18'
        quoteCurrencySettlementDate: '2021-02-18'
        baseCurrency: USD
        amountCurrency: BRL
        preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
    FxSellQuoteRequestBody:
      title: Root Type for FxBuyQuoteRequestBody
      description: ''
      required:
        - baseCurrencySettlementDate
        - quoteCurrencySettlementDate
        - amount
        - baseCurrency
        - clientRequestId
        - preTicketPactualId
      type: object
      properties:
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        tags:
          description: Tags that will be recorded with the request response.
          type: array
          items:
            type: string
        amount:
          format: decimal
          description: Indicated the amount of the AmountCurrency
          type: number
        preTicketPactualId:
          description: The pactualid of the pre ticket
          type: string
        baseCurrencySettlementDate:
          format: date
          description: The settlementDate from the BaseCurrency
          type: string
        quoteCurrencySettlementDate:
          format: date
          description: The settlementDate from the QuoteCurrency
          type: string
        baseCurrency:
          description: First 3 digit currency code within the currency pair quotation
          type: string
        amountCurrency:
          description: 3 digit currency code of the amount
          type: string
      example:
        clientRequestId: guid/uuid
        tags:
          - UAT
        amount: 11
        baseCurrencySettlementDate: '2021-02-18'
        quoteCurrencySettlementDate: '2021-02-18'
        preTicketPactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
        baseCurrency: USD
        amountCurrency: BRL
    FxSellIndicativeQuoteReponse:
      title: Root Type for FxBuyQuoteReponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Contract Entity name.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              type: object
              properties:
                unitPrice:
                  format: double
                  description: The unit price of the base currency in BRL
                  type: number
                total:
                  format: double
                  description: The amount based on the baseCurrency that the customer will be charged (BUY)/The amount based on the base Currency that the customer will recive (SELL)
                  type: number
                operationSide:
                  description: The direction of the trade.
                  type: string
                quoteCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                baseCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                amountCurrency:
                  description: 3 digit currency code of the amount
                  type: string
                amount:
                  format: int32
                  description: Indicated the amount for the currency of the quote/trade
                  type: integer
                quoteCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the QuoteCurrency
                  type: string
                baseCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the BaseCurrency
                  type: string
                indicative:
                  description: Indicates whether a quote is indicative or not, Indicative quotes cannot be accepeted
                  type: string
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
          clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          createTimestamp: '2021-03-25T17:39:14.873622+00:00'
          lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
          entity: ForeignExchangeIndicative
          status: INDICATIVE
          body:
            unitPrice: 5.7702
            total: 63.47
            operationSide: SELL
            quoteCurrency: BRL
            baseCurrency: USD
            amountCurrency: BRL
            amount: 11
            quoteCurrencySettlementDate: '2021-03-25T00:00:00'
            baseCurrencySettlementDate: '2021-03-25T00:00:00'
            indicative: 'false'
          tags: []
    GetBankingChannelResponse:
      title: Root Type for GetBankingChannelResponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: object
          properties:
            beneficiaryId:
              description: The id of the bankingChannel that was created.
              type: string
            beneficiaryName:
              description: The name of the beneficiary
              type: string
            beneficiaryStatus:
              description: The status of the Banking Channel
              type: string
            address:
              type: object
              properties:
                code:
                  format: int32
                  description: Available on the GetCountries method of the Banking Channel API. The code is the 2 Digit code of the Country.
                  type: integer
                description:
                  description: The name of the country, also available on the GetCountries method.
                  type: string
            businessType:
              type: object
              properties:
                code:
                  description: BACEN Code for the client nature, it is a 2 digits field. The available codes can be found on the above link under the name of "Códigos de classificação de operações relativos a clientes", on the "ANEXO XIV" of the [document](https://www.bcb.gov.br/pre/normativos/circ/2013/pdf/circ_3690_v1_O.pdf).
                  type: string
                description:
                  description: The description of the code field.
                  type: string
            expenses:
              type: object
              properties:
                code:
                  description: '"OUR" -> Means that the costs of the Operation will be from the BTG. "BEN" -> Means that the costs of the Operation will be from the Beneficiary "SHA" -> Means that the costs of the Operation will be shared with BTG and the Beneficiary'
                  type: string
                description:
                  description: The description of the code field.
                  type: string
            account:
              type: object
              properties:
                details:
                  type: object
                  properties:
                    option:
                      type: string
                    name:
                      description: The name from the owner of the account.
                      type: string
                    address:
                      description: The address of the account, it will be the country of the account.
                      type: string
                    accountNumber:
                      description: The account number.
                      type: string
                currency:
                  type: object
                  properties:
                    code:
                      description: Accepeted Values Available on the GetCurrencies method of the Banking Channel API. It is the 3 Digit Code of the Currency.
                      type: string
                    description:
                      description: The name of the currency.
                      type: string
                country:
                  type: object
                  properties:
                    code:
                      type: string
                    description:
                      type: string
                beneficiaryBank:
                  type: object
                  properties:
                    name:
                      description: The name of the Bank.
                      type: string
                registrationDate:
                  description: The Timestamp of the creation of the Banking Channel.
                  type: string
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          clientRequestId: bc18f2f4-57b5-46cc-8c5e-4e4287dbe878
          createTimestamp: '2020-01-01T00:00:00.7807113+00:00'
          lastUpdateTimestamp: '2020-01-01T00:00:00.7807113+00:00'
          entity: PixPayment
          status: CONFIRMED
          body:
            amount: 0.01
            debitParty:
              bank: '12345678'
              branch: '10'
              account: '12340'
              name: Client Test
              taxId: '11122233344'
              personType: LEGAL_PERSON
              accountType: CACC
            creditParty:
              key: test@test.com
              bank: '87654321'
              branch: '10'
              account: '43210'
              name: User Test
              taxId: '44433322211'
              personType: NATURAL_PERSON
              accountType: CACC
            movementId: '0000001'
            endToEndId: E00038166201907261559y6j6mt9l0pi
          tags:
            - tag_test
    FxSellIndicativeQuoteRequestBody:
      title: Root Type for FxBuyQuoteRequestBody
      description: ''
      required:
        - baseCurrencySettlementDate
        - quoteCurrencySettlementDate
        - amount
        - baseCurrency
        - clientRequestId
      type: object
      properties:
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        tags:
          description: Tags that will be recorded with the request response.
          type: array
          items:
            type: string
        amount:
          format: decimal
          description: Indicated the amount of the AmountCurrency
          type: number
        baseCurrencySettlementDate:
          format: date
          description: The settlementDate from the BaseCurrency
          type: string
        quoteCurrencySettlementDate:
          format: date
          description: The settlementDate from the QuoteCurrency
          type: string
        baseCurrency:
          description: First 3 digit currency code within the currency pair quotation
          type: string
        amountCurrency:
          description: 3 digit currency code of the amount
          type: string
      example:
        clientRequestId: guid/uuid
        tags:
          - TesteLocalUat
        amount: 11
        baseCurrencySettlementDate: '2021-02-18'
        quoteCurrencySettlementDate: '2021-02-18'
        baseCurrency: USD
        amountCurrency: BRL
    FxBuyIndicativeQuoteRequestBody:
      title: Root Type for FxBuyQuoteRequestBody
      description: ''
      required:
        - baseCurrencySettlementDate
        - quoteCurrencySettlementDate
        - amount
        - baseCurrency
        - clientRequestId
      type: object
      properties:
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        tags:
          description: Tags that will be recorded with the request response.
          type: array
          items:
            type: string
        amount:
          format: decimal
          description: Indicated the amount of the AmountCurrency
          type: number
        baseCurrencySettlementDate:
          format: date
          description: The settlementDate from the BaseCurrency
          type: string
        quoteCurrencySettlementDate:
          format: date
          description: The settlementDate from the QuoteCurrency
          type: string
        baseCurrency:
          description: First 3 digit currency code within the currency pair quotation
          type: string
        amountCurrency:
          description: 3 digit currency code of the amount
          type: string
      example:
        clientRequestId: guid/uuid
        tags:
          - TesteLocalUat
        amount: 11
        baseCurrencySettlementDate: '2021-02-18'
        quoteCurrencySettlementDate: '2021-02-18'
        baseCurrency: USD
        amountCurrency: BRL
    GetPreTicketResponse:
      title: Root Type for FxBuyQuoteReponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Contract Entity name.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              type: object
              properties:
                accountId:
                  description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
                  type: string
                amount:
                  format: decimal
                  description: Value to be quoted (always in base currency)
                  type: number
                availableBalance:
                  format: decimal
                  description: The balance of the pre ticket
                  type: number
                operationSide:
                  description: The direction of the trade.
                  type: string
                baseCurrency:
                  description: 3 digit currency being purchased
                  type: string
                countryCode:
                  description: 2 digit code of country of origin of the money
                  type: string
                senderName:
                  description: Name of the payer
                  type: string
                additionalInformation:
                  description: Field 70 of the SWIFT file
                  type: string
                bankChannelId:
                  description: The Id of the Banking Channel, the banking channel contains the SWIFT account information, it can be retrieved using Banking Channel API.
                beneficiary:
                  description: Beneficiary of the bank channel
                  type: string
                bacenNature:
                  description: All informations about the BACEN Nature are available on this [link](https://www.bcb.gov.br/pre/normativos/circ/2013/pdf/circ_3690_v1_O.pdf)
                  type: object
                  properties:
                    codeOperationNature:
                      description: BACEN Code for the general operation nature, it is a 5 digits field. The available codes can be found on the above link under the name of "Códigos de classificação e operações, on the "ANEXO I - ANEXO XI and ANEXO XIII" of the document.
                      type: string
                    clientNature:
                      description: BACEN Code for the client nature, it is a 2 digits field. The available codes can be found on the above link under the name of "Códigos de classificação de operações relativos a clientes", on the "ANEXO XIV" of the document.
                      type: string
                    avalNature:
                      description: BACEN Code that indicates whether the transaction needs to authorize the operation. More information about this field on the document on the "ANEXO XV"
                      type: string
                    payerNature:
                      description: BACEN Code for the Payer/Reciver on abroad, it is a 2 digits field. The available codes can be found on the above link under the name of "Códigos de classificação de operações relativos a pagadores/recebedores no exterior", on the "ANEXO XVI" of the document
                      type: string
                    groupNature:
                      description: BACEN Code for the group that the operation belongs to, it is a 2 digits field. The available codes can be found on the above link under the name of "Códigos de grupos", on the "ANEXO XV" of the document
                      type: string
                    relationshipNature:
                      description: BACEN Code for the relationship between the parts of the operation, it is a 2 digit field. The available codes can be found on the above link under the name of "Códigos relativos a relações de vínculo", on the "ANEXO XVIII" of the document.
                      type: string
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
          clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          createTimestamp: '2021-03-25T17:39:14.873622+00:00'
          lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
          entity: ForeignExchangePreTicket
          status: CONFIRMED
          body:
            accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
            amount: 11
            operationSide: BUY
            baseCurrency: USD
            countryCode: US
            bankChannelId: dcfbf259caa148e6ab1eaf2b012d3fd0
            additionaInformation: teste
            beneficiary: OSL DIGITAL LIMITED
            bacenNature:
              codeOperationNature: '37217'
              clientNature: '00'
              avalNature: 'N'
              payerNature: '00'
              groupNature: '10'
              relationshipNature: '10'
          tags: []
    JudicialRequest:
      title: Root Type for JudicialRequest
      description: ''
      required:
        - accountFrom
        - amount
        - bankTo
        - branchFrom
        - clientRequestId
        - codIdentTransf
      type: object
      properties:
        branchFrom:
          description: Sender Bank Account Branch
          maximum: 4
          type: integer
        accountFrom:
          description: Sender account number
          type: integer
        nameFrom:
          description: Sender name
          maximum: 50
          type: string
        amount:
          description: 'Amount in cents to be transfered. Example: 100 = R$1.00'
          type: integer
        bankTo:
          description: Receiver Bank Account Number. Must be from numbers 1 to 3.
          type: integer
        nameTo:
          description: Receivers name
          maximum: 50
          type: string
        accountTypeTo:
          description: CC = Checking account, CP = Saving account, PG = Payment Account
          enum:
            - CC
            - CP
            - PG
          type: string
        codIdentTransf:
          description: Unique judicial transfer identifier.
          type: integer
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        tags:
          description: Markups
          type: array
          items:
            type: string
      example:
        branchFrom: 9999
        accountFrom: 1
        nameFrom: string
        amount: 1
        bankTo: 2147483647
        nameTo: string
        accountTypeTo: string
        codIdentTransf: 0
        clientRequestId: string
        tags:
          - string
    PayPaymentSlipBarSubAccountRequest:
      title: Root Type for PayPaymentSlipBarSubAccountRequest
      description: ''
      required:
        - clientRequestId
        - barcode
        - accountInformation
        - amount
        - payer
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        barcode:
          description: Barcode value.
          type: string
        amount:
          format: int32
          description: 'The transaction Amount in cents. Example: 100 = R$1.00'
          type: integer
        accountInformation:
          description: Sub-Account information.
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
            - bank
          type: object
          properties:
            accountType:
              description: Account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The account's name.
              type: string
        payer:
          description: Payer Information.
          required:
            - name
            - taxId
          properties:
            name:
              description: Payer Name.
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        clientRequestId: string
        barcode: string
        amount: 0
        accountInformation:
          account: 37480109
          branch: 30
          bank: 208
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        payer:
          name: string
          taxId: string
        tags:
          - string
    PayPaymentSlipRequest:
      title: Root Type for PayPaymentSlipRequest
      description: ''
      required:
        - clientRequestId
        - digitableLine
        - amount
        - payer
      type: object
      properties:
        amount:
          format: int32
          description: Total amount to be charged from the payment slip.
          type: integer
        digitableLine:
          description: Identification digitable line of the slip.
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        payer:
          description: Payer Information.
          required:
            - name
            - taxId
          properties:
            name:
              description: Payer Name.
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
        tags:
          description: List of tags.
          type: array
          items:
            type: string
      example:
        amount: 0
        digitableLine: string
        clientRequestId: string
        payer:
          name: string
          taxId: string
        tags:
          - string
    PayPaymentSlipSubAccountRequest:
      title: Root Type for PayPaymentSlipSubAccountRequest
      description: ''
      required:
        - clientRequestId
        - digitableLine
        - accountInformation
        - amount
        - payer
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        digitableLine:
          description: Identification digitable line of the slip.
          type: string
        amount:
          format: int32
          description: 'The transaction Amount in cents. Example: 100 = R$1.00'
          type: integer
        accountInformation:
          description: Sub-Account information.
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
            - bank
          type: object
          properties:
            accountType:
              description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The account's name.
              type: string
        payer:
          description: Payer Information.
          required:
            - name
            - taxId
          type: object
          properties:
            name:
              description: Payer Name.
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
        tags:
          description: List of tags.
          type: array
          items:
            type: string
      example:
        clientRequestId: string
        digitableLine: string
        amount: 0
        accountInformation:
          account: 37480109
          branch: 30
          bank: 208
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        payer:
          name: string
          taxId: string
        tags:
          - string
    PaymentSlipPayBarcodeRequestBody:
      title: Root Type for PaymentSlipPayBarcodeRequestBody
      description: ''
      required:
        - amount
        - barcode
        - clientRequestId
        - payer
      type: object
      properties:
        amount:
          format: int32
          description: The transaction amount.
          type: integer
        barcode:
          description: Barcode value.
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        payer:
          description: Payer Information.
          required:
            - name
            - taxId
          properties:
            name:
              description: Payer Name.
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        amount: 0
        barcode: string
        clientRequestId: string
        payer:
          name: string
          taxId: string
        tags:
          - string
    CloneOfSchedulePaymentSlipPayBarcodeRequestBody:
      title: Root Type for SchedulePaymentSlipPayRequestBody
      description: ''
      required:
        - amount
        - barcode
        - clientRequestId
        - payer
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        tags:
          description: List of tags.
          type: array
          items:
            type: string
        amount:
          format: int32
          description: 'Amount in cents of the transaction. Example: 100 = R$1.00.'
          type: integer
        barcode:
          description: Payment Slip encoded information data.
          type: string
        payer:
          description: Payer Information.
          required:
            - name
            - taxId
          properties:
            name:
              description: Payer Name.
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
      example:
        clientRequestId: string
        tags:
          - string
        amount: 0
        barcode: string
        payer:
          name: string
          taxId: string
    SchedulePaymentSlipPayRequestBody:
      title: Root Type for SchedulePaymentSlipPayRequestBody
      description: ''
      required:
        - amount
        - clientRequestId
        - digitableLine
        - payer
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        tags:
          description: List of tags.
          type: array
          items:
            type: string
        amount:
          format: int32
          description: 'Amount in cents of the transaction. Example: 100 = R$1.00.'
          type: integer
        digitableLine:
          description: Payment Slip encoded information data.
          type: string
        payer:
          description: Payer Information.
          required:
            - name
            - taxId
          properties:
            name:
              description: Payer Name.
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
      example:
        clientRequestId: string
        tags:
          - string
        amount: 0
        digitableLine: string
        payer:
          name: string
          taxId: string
    BillErroCode:
      title: Root Type for teste
      description: "            | Error Code |Error Name|Error Description|\r\n\r\n            |----------|:-------------|------|\r\n\r\n            |PCE421|BadRequest|Digitable line or Barcode is invalid.|\r\n\r\n            |PCE421|BadRequest|It is necessary to inform an amount for a payment.|\r\n\r\n            |PBE434|BadRequest|Digitable line or Barcode not found.|\r\n\r\n            |PCE422|BadRequest|The request is invalid.|\r\n\r\n            |PCE423|BadRequest|Value not allowed.|\r\n\r\n            |PCE424|BadRequest|Transaction received outside the accepted time grid.|\r\n\r\n            |PCE425|BadRequest|Payment already done.|\r\n\r\n            |PCE426|BadRequest|Payment not allowed.|\r\n\r\n            |PCE427|BadRequest|DocumentNumber value does not match PersonType value.|\r\n\r\n            |PCE428|BadRequest|Beneficiary doesn't exist.|\r\n\r\n            |PCE429|BadRequest|The amount to be paid is invalid.|\r\n\r\n            |PBE450|BadRequest|It is not possible to make this type of payment.|\r\n\r\n            |PCE430|BadRequest|The amount to be paid is below the mininum allowed.|\r\n\r\n            |PCE431|BadRequest|The amount to be paid is above the maximum allowed.|\r\n\r\n            |PBE433|NotFound|Account not found.|\r\n\r\n            |PCE432|BadRequest|Cannot pay a value different from the total value of an utilities bill.|\r\n\r\n            |PBE435|BadRequest|BankSlip is already writed off.|\r\n\r\n            |PBE436|BadRequest|BankSlip is blocked for payments.|\r\n\r\n            |PBE437|BadRequest|BankSlip found and beneficiary unqualified at bill's issuer.|\r\n\r\n            |PBE438|BadRequest|BankSlip found on base and beneficiary without registration.|\r\n\r\n            |PBE439|BadRequest|BankSlip found on central base and beneficiary is under analysis at bill's\r\n            issuer.|\r\n\r\n            |PBE440|BadRequest|BankSlip exceed the limit of parcial payments.|\r\n\r\n            |PBE441|BadRequest|Write off duplicated for BankSlip that does not allow parcial payments.|\r\n\r\n            |PBE442|BadRequest|Operational write off already registered for BankSlip that does not allow\r\n            parcial payments.|\r\n\r\n            |PBE443|BadRequest|BankSlip exceeded the balance value for parcial payment to this kind of\r\n            calculation model 04.|\r\n\r\n            |PBE444|BadRequest|BankSlip found and beneficiary unqualified at different bill's issuer.|\r\n\r\n            |PBE445|BadRequest|BankSlip found and beneficiary is under analysis at different bill's issuer.|\r\n\r\n            |PBE446|InternalServerError|Start time Bill Payment invalid.|\r\n\r\n            |PBE447|InternalServerError|End time Bill Payment invalid.|\r\n\r\n            |PBE448|Forbidden|Bill Payment received after the cut-off time.|\r\n\r\n            |PBE449|BadRequest|It is not possible to cancel the payment.|\r\n\r\n            |PBE451|BadRequest|The payment amount does not match the payment details.|\r\n\r\n            |PBE105|BadRequest|Insufficient funds.|"
      type: object
      properties:
        version:
          type: string
        status:
          format: int32
          type: integer
        body:
          type: object
          properties:
            type:
              type: string
            maxAmount:
              format: int32
              type: integer
            minAmount:
              format: int32
              type: integer
            barCode:
              type: string
            dueDate:
              format: date
              type: string
            fineValue:
              format: int32
              type: integer
            interestValue:
              format: int32
              type: integer
            discountValue:
              format: int32
              type: integer
            beneficiaryPersonType:
              type: string
            beneficiaryName:
              type: string
            beneficiaryDocument:
              type: string
            customerName:
              type: string
            customerDocument:
              type: string
            personType:
              type: string
            guarantorName:
              type: string
            guarantorDocument:
              type: string
            guarantorPersonType:
              type: string
            validForPayment:
              type: boolean
            limitDate:
              format: date
              type: string
            paymentslipType:
              type: string
            paymentslipDescription:
              type: string
            originalValue:
              format: int32
              type: integer
            amount:
              format: int32
              type: integer
            digitableLine:
              type: string
            receiverBankName:
              type: string
            receiverBankISPB:
              type: string
            receiverBankCode:
              format: int32
              type: integer
            fine:
              format: int32
              type: integer
            discount:
              format: int32
              type: integer
            interest:
              format: int32
              type: integer
      example:
        version: 1.6.1
        status: 200
        body:
          type: paymentslip
          maxAmount: 5000
          minAmount: 5000
          barCode: '20895889400000050000001010000010422500817670'
          dueDate: '2022-02-12'
          fineValue: 0
          interestValue: 0
          discountValue: 0
          beneficiaryPersonType: PJ
          beneficiaryName: BTG PACTUAL SA
          beneficiaryDocument: '30306294000145'
          customerName: Casa Lira Construcoes
          customerDocument: '5643204000164'
          personType: PF
          guarantorName: Oliver Noah Emanuel Figueiredo
          guarantorDocument: '84020058458'
          guarantorPersonType: PF
          validForPayment: true
          limitDate: '20220212'
          paymentslipType: BIT
          paymentslipDescription: Boleto integral
          originalValue: 10000
          amount: 5000
          digitableLine: '20890001091000001042025008176700588940000005000'
          receiverBankName: BTG PACTUAL SA
          receiverBankISPB: '54403563'
          receiverBankCode: 0
          fine: 0
          discount: 0
          interest: 0
    PaymentSlipResponse:
      description: ''
      required:
        - pactualId
        - clientRequestId
        - createTimestamp
        - lastUpdateTimestamp
        - status
        - body
        - entity
        - tags
      type: object
      properties:
        pactualId:
          description: Unique resource Identifier (Uuid) generated by api.
          type: string
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        createTimestamp:
          format: date-time
          description: Respects the GMT timezone
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: Respects the GMT timezone
          type: string
        status:
          description: The current status. More information about status <b><a href="#section/Payment-Slip-Status">here</a></b>.
          type: string
        body:
          $ref: '#/components/schemas/PaymentSlip'
          description: PaymentSlip Information.
        entity:
          description: The name of entity.
          type: string
        tags:
          description: A list of tags.
          type: array
          items:
            type: string
        errorCode:
          description: The error code.
          type: string
        errorDescription:
          description: The error description.
          type: string
    FinancialMovementEnvelope:
      description: Financial Movement Information.
      required:
        - pactualId
        - clientRequestId
        - createTimestamp
        - lastUpdateTimestamp
        - status
        - body
        - entity
        - tags
      type: object
      properties:
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        clientRequestId:
          description: Unique resource identificator given by the client.
          type: string
        createTimestamp:
          description: Respects the GMT timezone
          type: string
        lastUpdateTimestamp:
          description: Respects the GMT timezone
          type: string
        status:
          description: The current status. More information about status <b><a href="#section/External-Transfer-Status">here</a></b>.
          type: string
        body:
          $ref: '#/components/schemas/FinancialMovement'
          description: ''
        entity:
          description: The entity's name.
          type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
        errorCode:
          description: The error code.
          type: string
        errorDescription:
          description: The error description.
          type: string
    FinancialMovement:
      description: Represents a internal or external financial movement.
      required:
        - movementId
        - amount
        - debitParty
        - creditParty
      type: object
      properties:
        movementId:
          description: Identifier of impact on account.
          type: string
        amount:
          description: Amount in cents.
          type: integer
        debitParty:
          $ref: '#/components/schemas/Party'
          description: Debit Party account information.
        creditParty:
          $ref: '#/components/schemas/Party'
          description: Credit Party account information.
      example:
        movementId: 044392d7545248e3adef38e1b5041f60
        amount: 300000
        debitParty:
          bank: 41
          branch: 86
          account: 38
          name: Fulano de Tal
          taxId: '02154125410'
          accountType: CC
        creditParty:
          bank: 280
          branch: 10
          account: 38
          name: Beltrano de Tal
          taxId: '02154125410'
          accountType: CC
    Party:
      description: Account Information
      required:
        - bank
        - branch
        - account
        - name
        - taxId
        - accountType
      type: object
      properties:
        bank:
          description: Bank Account Number.
          type: integer
        branch:
          description: Bank Account Branch.
          type: integer
        account:
          description: Account number
          type: integer
        name:
          description: Account owner's name.
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted).
          type: string
        accountType:
          description: CC = Checking account, CP = Saving account, PG = Payment Account
          enum:
            - CC
            - CP
            - PG
          type: string
    FinancialMovementGetBulkResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          description: Http status code.
          type: integer
        body:
          $ref: '#/components/schemas/FinancialMovementGetBulk'
          description: The response body.
    FinancialMovementGetBulk:
      description: The response body.
      required:
        - pactualBulkId
        - items
      type: object
      properties:
        pactualBulkId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        items:
          description: ''
          type: array
          items:
            $ref: '#/components/schemas/FinancialMovementEnvelope'
    GenericTransferEnvelope:
      description: The response body
      required:
        - pactualId
        - clientRequestId
        - createTimestamp
        - lastUpdateTimestamp
        - status
        - body
        - entity
        - tags
      type: object
      properties:
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        clientRequestId:
          description: Unique resource identificator given by the client.
          type: string
        createTimestamp:
          description: The string representation of the Timestamp that the record was created (UTC).
          type: string
        lastUpdateTimestamp:
          description: The string representation of the Timestamp that the record was last updated (UTC).
          type: string
        status:
          description: The operation status.
          type: string
        body:
          $ref: '#/components/schemas/GenericTransfer'
          description: Data object.
        entity:
          description: Operation Contract Entity.
          type: string
        tags:
          description: List with tags.
          type: array
          items:
            type: string
        errorCode:
          description: The error code.
          type: string
        errorDescription:
          description: The error description.
          type: string
      example:
        pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        pactualBulkId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        clientRequestId: 123456ABCDE789528e3adef38e1b5041f60
        createTimestamp: '2022-04-18T15:25:51.1493225'
        lastUpdateTimestamp: '2022-04-18T15:25:51.1493225'
        entity: GenericTransfer
        status: ENQUEUED
        errorCode: string
        errorDescription: string
        body:
          movementId: 044392d7545248e3adef38e1b5041f60
          processingCode: 1234
          amount: 100
          financialMovementPayload:
            processingCode: 1234
            description: Generic Financial Transaction
            type: InternalTransfer
            typeDebit: 1234
            typeDebitCancel: 4321
            typeCredit: 7894
          creditAccount:
            account: 37480109
            branch: 30
            bank: 208
            ispb: 30306294
            taxId: 946138000188
            name: PARTNERS ALPHA PARTICIPACOES LTDA
            personType: J
            accountType: CC
          debitAccount:
            accountId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
            account: 37480109
            branch: 30
            bank: 208
            ispb: 30306294
            taxId: 946138000188
            name: PARTNERS ALPHA PARTICIPACOES LTDA
            personType: J
            accountType: CC
        tags:
          - string
    GenericTransfer:
      description: Represents a generic transfer.
      required:
        - movementId
        - amount
        - debitAccount
        - creditAccount
        - processingCode
      type: object
      properties:
        movementId:
          description: Unique identification created when the transaction impacted the main client's account.
          type: string
        amount:
          description: Amount in cents.
          type: integer
        processingCode:
          format: int32
          description: The Processing Code
          type: integer
        financialMovementPayload:
          $ref: '#/components/schemas/ProcessingCode'
          description: ''
        creditAccount:
          description: Credit Account information.
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
            - ispb
          type: object
          properties:
            accountType:
              description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The acocunt's name.
              type: string
            ispb:
              description: ISPB (Brazilian Payments System Identifier) of the SPI (Instant Payments System) participant with numbers only.
              type: string
        debitAccount:
          description: Debit Account information (Sub-Account).
          required:
            - accountType
            - personType
            - taxId
            - account
            - branch
          type: object
          properties:
            accountId:
              description: The Account Id of BTG Pactual BaaS
              type: string
            accountType:
              description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
              enum:
                - CC
                - CP
                - PG
              type: string
            personType:
              description: Person type (F = Person, J = Organization)
              enum:
                - F
                - J
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            account:
              description: The account number.
              type: string
            branch:
              description: The branch number.
              type: string
            bank:
              description: The bank code.
              type: string
            name:
              description: The acocunt's name.
              type: string
            ispb:
              description: ISPB (Brazilian Payments System Identifier) of the SPI (Instant Payments System) participant with numbers only.
              type: string
      example:
        movementId: 044392d7545248e3adef38e1b5041f60
        processingCode: 1234
        amount: 100
        financialMovementPayload:
          processingCode: 1234
          description: Generic Financial Transaction
          type: InternalTransfer
          typeDebit: 1234
          typeDebitCancel: 4321
          typeCredit: 7894
        creditAccount:
          account: 37480109
          branch: 30
          bank: 208
          ispb: 30306294
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
        debitAccount:
          accountId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
          account: 37480109
          branch: 30
          bank: 208
          ispb: 30306294
          taxId: 946138000188
          name: PARTNERS ALPHA PARTICIPACOES LTDA
          personType: J
          accountType: CC
    PaymentSlipUtilitiesResponse:
      title: Root Type for PaymentSlipUtilitiesResponse
      description: ''
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          description: Http status code.
          type: integer
        body:
          description: The response body.
          type: object
          properties:
            type:
              description: PaymentSlip type.
              type: string
            assignor:
              description: Assignor Name.
              type: string
            segment:
              description: Segment Name.
              type: string
            state:
              description: State Name.
              type: string
            amount:
              format: int32
              description: 'Amount in cents. Example: 100 = R$1.00.'
              type: integer
            digitableLine:
              description: Identification digitable line of the slip.
              type: string
            settlementDate:
              description: Payment settlement date.
              type: string
            startTime:
              description: Start time for payment.
              type: string
            endTime:
              description: End time for payment.
              type: string
            dueDate:
              description: Payment deadline.
              type: string
      example:
        version: 1.2.5
        status: 200
        body:
          type: utilities
          assignor: LIGHT  - RJ
          segment: ENERGIA ELETRICA E GAS
          state: RJ
          amount: 38716
          digitableLine: '836500000036871600531077589007190012100361364381'
    SchedulerResponseBody:
      title: Root Type for SchedulerResponseBody
      description: ''
      type: object
      properties:
        version:
          description: Http status code.
          type: string
        status:
          description: The api version.
          type: integer
        body:
          description: The response body.
          type: object
          properties:
            accountId:
              description: The Account Id (Uuid) of Beneficiary.
              type: string
            scheduleDate:
              format: date
              description: Scheduled payment date.
              type: string
            scheduleDateTime:
              format: date-time
              description: Scheduled payment date (following the UTC pattern).
              type: string
            pactualId:
              description: The resource's unique identificator on BTG Pactual systems.
              type: string
            clientRequestId:
              description: The unique transaction identification given by the client side.
              type: string
            createTimestamp:
              description: Creation timestamp of collection.
              type: string
            lastUpdateTimestamp:
              description: Last update time stamp of collection.
              type: string
            entity:
              description: The name of entity.
              type: string
            status:
              description: The current status.
              type: string
            body:
              description: Payment Information.
              type: object
              properties:
                amount:
                  format: int32
                  description: 'Amount in cents. Example: 100 = R$1.00'
                  type: integer
                digitableLine:
                  description: Identification digitable line of the slip.
                  type: string
                financialType:
                  description: Collection Financial Type.
                  type: string
            tags:
              description: List of tags.
              type: array
              items:
                type: string
      example:
        version: 1.8.0
        status: 200
        body:
          accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
          scheduleDate: '2022-03-29'
          scheduleDateTime: '2022-03-29T10:00:00+00:00'
          pactualId: b0da44eb-8b06-46d5-8a21-5a4c834bfa03
          clientRequestId: a75f68fa-85b0-4cb3-822e-d253844f57b7
          createTimestamp: '2022-03-28T20:03:05.3795102+00:00'
          lastUpdateTimestamp: '2022-03-28T20:03:05.3795708+00:00'
          entity: FinancialScheduler
          status: PENDING
          body:
            amount: 80006
            digitableLine: '03399201595100028823681904501020389370000080006'
            financialType: PaymentSlip
          tags:
            - test
    GetBankSliClientRequestIdResponse:
      title: Root Type for GetBankSliClientRequestIdResponse
      description: ''
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          format: int32
          description: The HTTP response code.
          type: integer
        body:
          description: Data Object.
          type: object
          properties:
            status:
              description: Transaction's current status.
              type: string
            pactualId:
              description: Unique resource Identifier (Uuid) generated by api.
              type: string
            amount:
              format: int32
              description: 'Amount in cents. Example: 100 = R$1.00'
              type: integer
            digitableLine:
              description: Payment encoded information data.
              type: string
            authentication:
              description: Authentication key.
              type: string
            consumer:
              description: Consumer Name.
              type: string
            issuer:
              description: Issuer Name.
              type: string
            receiverBankCode:
              format: int32
              description: Code for receiver bank.
              type: integer
            dueDate:
              format: date
              description: Limit date to which the transction's fines start applying.
              type: string
            fine:
              format: int32
              description: Fine value applied to this transaction.
              type: integer
            discount:
              format: int32
              description: Discount value applied to this transaction.
              type: integer
            interest:
              format: int32
              description: Interest value applied to this transaction.
              type: integer
            paymentDate:
              format: date
              description: Date that this transaction was submitted.
              type: string
            beneficiary:
              description: Beneficiary Information.
              type: object
              properties:
                name:
                  description: The beneficiary's name.
                  type: string
                taxId:
                  description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
                  type: string
            accountInformation:
              description: Account Information.
              type: object
              properties:
                accountType:
                  description: The account type.
                  type: string
                personType:
                  description: Person type (F = Person, J = Organization)
                  type: string
                taxId:
                  description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
                  type: string
                account:
                  format: int32
                  description: The account number.
                  type: integer
                cge:
                  format: int32
                  type: integer
                branch:
                  format: int32
                  description: The branch number.
                  type: integer
                bank:
                  format: int32
                  description: The bank code.
                  type: integer
                name:
                  description: The account holder's name.
                  type: string
      example:
        version: 1.6.1
        status: 200
        body:
          status: CONFIRMED
          pactualId: xxxxxxxx-4034-4d1a-9f06-e29a8e805491
          amount: 12389
          digitableLine: xxxxxxxx247086023000500000000000287670000012389
          authentication: xxxxxxxx1b8846abbd3064ca7b180b6b
          consumer: BAAS
          issuer: BANK ABC
          receiverBankCode: 208
          dueDate: '20211008'
          fine: 0
          discount: 0
          interest: 0
          paymentDate: '20211207'
          beneficiary:
            name: BANK ABC
            taxId: XXXXXX90000104
          accountInformation:
            accountType: CC
            personType: F
            taxId: XXXX3440704
            account: 32161
            cge: 0
            branch: 20
            bank: 208
            name: John Doe
    DDACreateSucessResponse:
      title: Root Type for DDACreateSucessResponse
      description: ''
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          format: int32
          description: Http status code.
          type: integer
        body:
          description: The response body.
          type: object
          properties:
            ownerTaxId:
              description: Owner Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            customerTaxId:
              description: Customer Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
            clientRequestId:
              description: Unique identifier provided by the client.
              type: string
      example:
        version: 1.5.6
        status: 200
        body:
          ownerTaxId: '82790006000174'
          customerTaxId: '32842840011'
          clientRequestId: 717b25b5-8f12-4509-aa5f-5bfb3c52c124
    PaymentSlipDDAResponse:
      title: Root Type for PaymentSlipDDAResponse
      description: ''
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          format: int32
          description: Http status code.
          type: integer
        body:
          $ref: '#/components/schemas/PaymentSlipDDAResponseBody'
          description: The response body.
          properties:
            status:
              type: string
            clientRequestId:
              type: string
            tags:
              type: array
              items:
                type: string
            Owner:
              type: object
              properties:
                taxId:
                  format: int32
                  type: integer
                Account:
                  type: object
                  properties:
                    Account:
                      format: int32
                      type: integer
                    AccountType:
                      type: string
                    Branch:
                      format: int32
                      type: integer
            Customer:
              type: object
              properties:
                taxId:
                  format: int32
                  type: integer
                Name:
                  type: string
      example:
        version: 1.1.2
        status: 200
        body:
          status: CREATED
          clientRequestId: e4c1d6c4-60cf-407f-a495-57bd5aa4bb52
          tags:
            - Markups
          Owner:
            taxId: 71565184025
            Account:
              Account: 5104732
              AccountType: CC
              Branch: 20
          Customer:
            taxId: 43687221083
            Name: string
    PaymentSlipDDAResponseBody:
      title: Root Type for PaymentSlipDDAResponseBody
      description: ''
      type: object
      properties:
        status:
          description: The current status. More information about status <b><a href="#section/DDA-Status">here</a></b>.
          type: string
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        tags:
          description: A list of tags.
          type: array
          items:
            type: string
        Owner:
          description: Owner Information.
          type: object
          properties:
            taxId:
              format: int32
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted).
              type: integer
            Account:
              description: Owner account information.
              type: object
              properties:
                Account:
                  format: int32
                  description: The account number.
                  type: integer
                AccountType:
                  description: CC = Checking account, CP = Saving account, PG = Payment Account
                  enum:
                    - CC
                    - CP
                    - PG
                  type: string
                Branch:
                  format: int32
                  description: Bank Account Branch.
                  type: integer
        Customer:
          description: Customer Information.
          type: object
          properties:
            taxId:
              format: int32
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted).
              type: integer
            Name:
              description: Customer Name.
              type: string
      example:
        status: CREATED
        clientRequestId: e4c1d6c4-60cf-407f-a495-57bd5aa4bb52
        tags:
          - Markups
        Owner:
          taxId: 71565184025
          Account:
            Account: 5104732
            AccountType: CC
            Branch: 20
        Customer:
          taxId: 43687221083
          Name: string
    PixCollectionDueDateResponse:
      title: Root Type for PixCollectionDueDateReponse
      description: ''
      required:
        - calendar
        - debtor
        - receiver
        - txid
        - key
        - revision
        - status
        - amount
      type: object
      allOf:
        - $ref: '#/components/schemas/PixCollectionDueDateCalendarResponse'
        - type: object
          properties:
            txid:
              description: The unique transaction identification given by the client side.
              type: string
        - type: object
          properties:
            revision:
              format: int32
              description: Collection review. Always starts at zero. Always varies in increments of 1.
              type: integer
        - $ref: '#/components/schemas/PixCollectionDueDateDebtor'
        - $ref: '#/components/schemas/PixCollectionDueDateReceiver'
        - type: object
          properties:
            amount:
              $ref: '#/components/schemas/PixCollectionDueDateAmount'
            loc:
              $ref: '#/components/schemas/PixLocEntity'
            status:
              $ref: '#/components/schemas/PixCobStatus'
        - $ref: '#/components/schemas/PixCollectionDueDateBase'
    PixCollectionDueDateCalendarResponse:
      title: Root Type for Calendar.
      required:
        - calendar
      type: object
      properties:
        calendar:
          description: The fields nested under the calendar identifier organize information regarding billing time tracking.
          allOf:
            - $ref: '#/components/schemas/PixCollectionDueDateCalendarBaseResponse'
    PixCollectionDueDateCalendarBaseResponse:
      title: Root Type for CalendarioBase
      description: ''
      required:
        - creationTimestamp
        - dueDate
        - expirationAfterPayment
      type: object
      properties:
        creationTimestamp:
          format: date-time
          description: Timestamp that indicates the moment when the collection was created. Respects the format defined in RFC 3339.
          type: string
        dueDate:
          format: date
          description: It is a date, in the format `yyyy-mm-dd`, according to ISO 8601. It is the due date of the collection. The charge can be honored up to and including that day, at any time of the day.
          type: string
        expirationAfterPayment:
          format: int32
          description: This is the number of calendar days after the due date on which the charge can be paid. If this period has expired and the charge has not been paid, it will remain ACTIVE.
          default: '30'
          type: integer
    PixLocEntity:
      title: Root Type for LocEntity
      description: ''
      required:
        - body
        - clientRequestId
        - createTimestamp
        - entity
        - lastUpdateTimestamp
        - pactualId
        - status
      type: object
      properties:
        body:
          $ref: '#/components/schemas/PixLocEntityBody'
          description: The loc object instance.
          properties:
            emv:
              type: string
            locationType:
              type: string
            locationUrl:
              type: string
            merchant:
              type: object
              properties:
                merchantCategoryCode:
                  format: int32
                  type: integer
                merchantCity:
                  type: string
                merchantName:
                  type: string
                postalCode:
                  type: string
        clientRequestId:
          description: The unique transaction identification (txid) given by the client side. This value can't be repeated.
          pattern: '[a-zA-Z0-9]{26,35}'
          type: string
        createTimestamp:
          format: date-time
          description: Creation timestamp of location.
          type: string
        entity:
          description: The name of entity.
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: Last update time stamp of location.
          type: string
        pactualId:
          description: The unique identifier of location.
          type: string
        status:
          description: The current status of location.
          type: string
        tags:
          description: The list of tags.
          type: array
          items: {}
    PixLocEntityBody:
      title: Root Type for LocEntityBody
      description: ''
      required:
        - merchant
        - locationUrl
        - locationType
        - emv
        - id
      type: object
      properties:
        emv:
          description: The QRCode string representation.
          type: string
        id:
          format: int64
          description: Location identifier to be informed when creating the collection.
          type: integer
        merchant:
          $ref: '#/components/schemas/PixMerchant'
          description: The merchant object instance.
          properties:
            merchantCategoryCode:
              format: int32
              type: integer
            merchantCity:
              type: string
            merchantName:
              type: string
            postalCode:
              type: string
        type:
          description: The type of location.
          enum:
            - COB
            - COBV
          type: string
        url:
          description: The location of URL.
          type: string
    PixCobStatus:
      title: Debt Collection Status
      enum:
        - ATIVA
        - CONCLUIDA
        - REMOVIDA_PELO_USUARIO_RECEBEDOR
        - REMOVIDA_PELO_PSP
      type: string
    PaymentSlipPixPostResponse:
      title: Root Type for PaymentSlipPixPostResponse
      description: ''
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          format: int32
          description: Http status code.
          type: integer
        body:
          description: The response body of PaymentSlip Pix resource.
          type: object
          properties:
            pactualId:
              description: Unique resource identificator (Uuid) generated by api.
              type: string
            paymentSlip:
              type: object
              properties:
                pactualId:
                  description: Unique resource identificator (Uuid) generated by api.
                  type: string
                barCode:
                  description: Barcode value.
                  type: string
                digitableLine:
                  description: Digitable Line value.
                  type: string
                body:
                  $ref: '#/components/schemas/PixCollectionDueDateResponse'
            pix:
              type: object
              properties:
                txId:
                  description: The unique transaction identification given by the client side.
                  type: string
                emv:
                  description: The QRCode emv string.
                  type: string
                body:
                  $ref: '#/components/schemas/PixCollectionDueDateResponse'
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: b7badaf4-f841-4f2f-8f4b-76fed363cff1
          paymentSlip:
            pactualId: b7badaf4-f841-4f2f-8f4b-76fed363cff1
            barCode: '20899909200000120600030010000000014804874080'
            digitableLine: '20890030041000000001748048740806990920000012060'
            body:
              calendar:
                creationTimestamp: '2022-08-18T17:43:06.0513982-03:00'
                dueDate: '2022-08-29'
                expirationAfterPayment: 0
              txid: 6a53c5d9bc99478b93222ea3bc011dc2
              revision: 0
              debtor:
                cpf: '08010745090'
                name: string
                email: string
                publicArea: string
                city: string
                state: SP
                postalCode: '12785003'
              receiver:
                cpf: '08010745090'
                name: string
                publicArea: string
                city: string
                state: SP
                postalCode: '12785003'
              loc:
                pactualId: e6feceb0-ac17-4acd-b84c-09d7884cf638
                clientRequestId: 6a53c5d9bc99478b93222ea3bc011dc2
                createTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                lastUpdateTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                entity: QrCodeLocation
                status: CREATED
                body:
                  merchant:
                    postalCode: '61078147'
                    city: string
                    name: string
                    merchantCategoryCode: '5067'
                  url: api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf638
                  emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf6385204506753039865802BR5906string6006string61086107814762070503***6304674C
                  type: COBV
                  id: '5241761266735342611'
                tags: []
              amount:
                original: '120.60'
              key: string
              payerQuestion: string
              additionalInformation:
                - key: string
                  value: string
          pix:
            txId: 6a53c5d9bc99478b93222ea3bc011dc2
            emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf6385204506753039865802BR5906string6006string61086107814762070503***6304674C
            body:
              calendar:
                creationTimestamp: '2022-08-18T17:43:06.0513982-03:00'
                dueDate: '2022-08-29'
                expirationAfterPayment: 0
              txid: 6a53c5d9bc99478b93222ea3bc011dc2
              revision: 0
              debtor:
                cpf: '08010745090'
                name: string
                email: string
                publicArea: string
                city: string
                state: SP
                postalCode: '12785003'
              receiver:
                cpf: '08010745090'
                name: string
                publicArea: string
                city: string
                state: SP
                postalCode: '12785003'
              loc:
                pactualId: e6feceb0-ac17-4acd-b84c-09d7884cf638
                clientRequestId: 6a53c5d9bc99478b93222ea3bc011dc2
                createTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                lastUpdateTimestamp: '2022-08-18T17:43:06.0355728-03:00'
                entity: QrCodeLocation
                status: CREATED
                body:
                  merchant:
                    postalCode: '61078147'
                    city: string
                    name: string
                    merchantCategoryCode: '5067'
                  url: api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf638
                  emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/e6feceb0ac174acdb84c09d7884cf6385204506753039865802BR5906string6006string61086107814762070503***6304674C
                  type: COBV
                  id: '5241761266735342611'
                tags: []
              amount:
                original: '120.60'
              key: string
              payerQuestion: string
              additionalInformation:
                - key: string
                  value: string
    beneficiaryAccount:
      title: Root Type for beneficiaryAccount
      description: Beneficiary Information
      type: object
      properties:
        accountId:
          description: The Account Id (Uuid) of Beneficiary.
          type: string
        clientId:
          description: The Client Id (Uuid) of Beneficiary.
          type: string
        account:
          description: The account number.
          type: string
        branch:
          description: The branch number.
          type: string
        bank:
          description: The bank code.
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted)
          type: string
        name:
          description: The account's name.
          type: string
        personType:
          description: Person type (F = Person, J = Organization)
          enum:
            - F
            - J
          type: string
        accountType:
          description: The account type (CC = Checking Account, CP = Saving Account, PG = Payment Account).
          enum:
            - CC
            - CP
            - PG
          type: string
        status:
          description: Account Status
          type: string
        lockedAccount:
          description: Account Locked
          type: boolean
        bankBranchAccount:
          description: Number with Bank Branch Account
          type: string
        createTimestamp:
          description: The string representation of the Timestamp that the record was created (UTC).
          type: string
        lastUpdateTimestamp:
          description: The string representation of the Timestamp that the record was last updated (UTC).
          type: string
        beneficiaryTreatyCode:
          description: Beneficiary Treaty Code
          type: string
        beneficiaryMarketTreatyCode:
          description: Beneficiary Market Treaty Code
          type: string
        defaultAccount:
          description: Default Account
          type: boolean
        markups:
          description: List of Markups
          type: array
          items: {}
        clientAccountType:
          description: Client Account Type
          type: string
      example:
        accountId: 210d0c63-c6c3-47ef-a76c-79077b2451a0
        clientId: eb9e8702-8753-4c66-82cc-1e2c754861fd
        account: '4874087'
        branch: '30'
        bank: '208'
        taxId: '31445249000134'
        name: WECLIX TELECOM S.A.
        personType: J
        accountType: CC
        status: ACTIVE
        lockedAccount: false
        bankBranchAccount: '208_30_4874087'
        createTimestamp: '2022-03-14T15:37:51.3758581-03:00'
        lastUpdateTimestamp: '2022-03-14T15:37:51.3758688-03:00'
        beneficiaryTreatyCode: '637828590801441233'
        beneficiaryMarketTreatyCode: '01'
        defaultAccount: true
        markups: []
        clientAccountType: BaaS_Default
    PaymentSlipPixSlipBody:
      title: Root Type for PaymentSlipPixSlipBody
      description: PaymentSlip Information.
      type: object
      properties:
        amount:
          format: int32
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        dueDate:
          format: date
          description: Limit date to which the transction's fines start applying.
          type: string
        customer:
          description: Customer Information.
          type: object
          properties:
            name:
              description: The Customer's name.
              type: string
            taxId:
              description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
              type: string
        overdueDate:
          format: date
          description: How many days after issue Date the charge is canceled and can not be paid anymore.
          type: string
        description:
          description: Text to be displayed in your statement.
          type: string
        issueDate:
          format: date-time
          description: Issue date
          type: string
        barCode:
          description: Bar code number that describes the payment.
          type: string
        digitableLine:
          description: Number sequence that describes the payment.
          type: string
        beneficiaryAccount:
          $ref: '#/components/schemas/beneficiaryAccount'
        ourNumber:
          description: Unique Number.
          type: string
        ourNumberDigit:
          description: Our Number Digit.
          type: string
      example:
        amount: 12060
        dueDate: '2022-08-29'
        customer:
          name: string
          taxId: '08010745090'
        overdueDate: '2022-08-29'
        description: string
        issueDate: '2022-08-24 17:39:05'
        barCode: '20897909200000120600030010000000015204874080'
        digitableLine: '20890030041000000001752048740808790920000012060'
        beneficiaryAccount:
          accountId: 210d0c63-c6c3-47ef-a76c-79077b2451a0
          clientId: eb9e8702-8753-4c66-82cc-1e2c754861fd
          account: '4874087'
          branch: '30'
          bank: '208'
          taxId: '31445249000134'
          name: WECLIX TELECOM S.A.
          personType: J
          accountType: CC
          status: ACTIVE
          lockedAccount: false
          bankBranchAccount: '208_30_4874087'
          createTimestamp: '2022-03-14T15:37:51.3758581-03:00'
          lastUpdateTimestamp: '2022-03-14T15:37:51.3758688-03:00'
          beneficiaryTreatyCode: '637828590801441233'
          beneficiaryMarketTreatyCode: '01'
          defaultAccount: true
          markups:
            - DEFAULT-OVERDUEDATE:60
            - PISMO-ACL-BALANCE
          clientAccountType: BaaS_Default
        ourNumber: '152'
        ourNumberDigit: '3'
    PaymentSlip:
      title: BillRequest-Long
      description: PaymentSlip Information.
      required:
        - amount
      type: object
      properties:
        amount:
          description: 'Amount in cents to be transfered. Example: 100 = R$1.00'
          type: integer
        dueDate:
          format: date
          description: 'Due date of the charge. Format: yyyy-MM-dd'
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
          description: Customer that will be charged. (default = create a charge for yourself)
          properties:
            name:
              type: string
            taxId:
              type: string
            street:
              type: string
            number:
              type: string
            numberComplement:
              type: string
            neighborhood:
              type: string
            city:
              type: string
            stateCode:
              type: string
            zipCode:
              type: string
        fine:
          $ref: '#/components/schemas/Fine'
          description: Percentage or value of the charge amount charged if customer pays after the due date. Default value = 0.00 (0%)
          properties:
            date:
              type: string
            type:
              type: string
            value:
              type: number
        interest:
          $ref: '#/components/schemas/Interest'
          description: Day interest, in percentage or amount, charged if customer pays after the due date. Default value = 0.00 (0%)
          properties:
            date:
              type: string
            type:
              type: string
            value:
              type: number
        overdueDate:
          format: date
          description: How many days after issue Date the charge is canceled and can not be paid anymore. Default value = 3
          type: string
        description:
          description: Text to be displayed in your statement.
          type: string
        issueDate:
          format: date
          description: Issue date
          type: string
        barCode:
          description: Bar code number that describes the payment.
          type: string
        digitableLine:
          description: Number sequence that describes the payment.
          type: string
        movementId:
          description: Unique identification created when the transaction impacted the main client's account.
          type: string
        ourNumber:
          description: Our Identifier Number.
          type: string
        ourNumberDigit:
          description: Our Number.
          type: string
        guarantorDrawer:
          $ref: '#/components/schemas/GuarantorDrawer'
          description: ''
        discounts:
          $ref: '#/components/schemas/Discount'
    PaymentSlipPixResponse:
      title: Root Type for PaymentSlipPixResponse
      description: ''
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          description: Http status code.
          type: integer
        body:
          description: The response body.
          type: object
          properties:
            paymentSlip:
              description: PaymentSlip Information.
              type: object
              properties:
                pactualId:
                  description: Unique resource Identifier (Uuid) generated by api.
                  type: string
                barCode:
                  description: Identification barcode of the slip.
                  type: string
                digitableLine:
                  description: Payment Slip encoded information data.
                  type: string
                body:
                  $ref: '#/components/schemas/PaymentSlipPixSlipBody'
            pix:
              description: Pix Information.
              type: object
              properties:
                txId:
                  description: The unique transaction identification given by the client side.
                  type: string
                emv:
                  description: The QRCode emv string.
                  type: string
                body:
                  $ref: '#/components/schemas/PixCollectionDueDateResponse'
      example:
        version: 1.9.0
        status: 200
        body:
          pix:
            pactualId: 89c91682-31b0-4ece-a9a3-03552854d8f8
            clientRequestId: 6a53c5d9bd99478b93222ea3ec011dc2
            createTimestamp: '2022-08-17T13:30:30.9814173+00:00'
            lastUpdateTimestamp: '2022-08-17T13:30:30.9814173+00:00'
            entity: PixCollectionDueDate
            status: ACTIVE
            body:
              calendar:
                creationTimestamp: '2022-08-17T13:30:30.9814044+00:00'
                dueDate: '2022-08-29'
                expirationAfterPayment: 0
              txid: 6a53c5d9bd99478b93222ea3ec011dc2
              revision: 0
              debtor:
                cpf: '08010745090'
                name: string
                email: string
                publicArea: string
                city: string
                state: SP
                postalCode: '12785003'
              receiver:
                cpf: '08010745090'
                name: string
                publicArea: string
                city: string
                state: SP
                postalCode: '12785003'
              loc:
                pactualId: 602519f4-3744-4e24-87d4-724ed0c38a83
                clientRequestId: 6a53c5d9bd99478b93222ea3ec011dc2
                createTimestamp: '2022-08-17T13:30:30.914337+00:00'
                lastUpdateTimestamp: '2022-08-17T13:30:30.914337+00:00'
                entity: QrCodeLocation
                status: CREATED
                body:
                  merchant:
                    postalCode: '61078147'
                    city: string
                    name: string
                    merchantCategoryCode: '5067'
                  url: api-h.developer.btgpactual.com/v1/p/v2/cobv/602519f437444e2487d4724ed0c38a83
                  emv: 00020101021226980014br.gov.bcb.pix2576api-h.developer.btgpactual.com/v1/p/v2/cobv/602519f437444e2487d4724ed0c38a835204506753039865802BR5906string6006string61086107814762070503***63043464
                  type: COBV
                  id: '4376493081802255986'
                tags: []
              amount:
                original: '110.30'
              key: string
              payerQuestion: string
              additionalInformation:
                - key: string
                  value: string
            tags:
              - PAYMENT_SLIP_PIX
          paymentSlip:
            pactualId: 6db1d017-23ef-42ab-a522-1f4a43228dbf
            clientRequestId: 6a53c5d9bd99478b93222ea3ec011dc2
            createTimestamp: '2022-08-17T13:30:30.150663+00:00'
            lastUpdateTimestamp: '2022-08-17T13:30:49.6281562+00:00'
            entity: PaymentSlip
            status: CREATED
            body:
              amount: 11030
              dueDate: '2022-08-29'
              customer:
                name: string
                taxId: '08010745090'
              overdueDate: '2022-08-29'
              description: string
              issueDate: '2022-08-17 13:30:30'
              barCode: '20891909200000110300030010000000058503299490'
              digitableLine: '20890030041000000005885032994908190920000011030'
              beneficiaryAccount:
                accountId: f38321f8-59f9-4e50-976d-073ba35ccc4a
                clientId: 95d0f064-bbb2-4045-a69b-b0dcb27b7f9d
                account: '3299492'
                branch: '30'
                bank: '208'
                taxId: '26758072000196'
                name: FIDC Creditos Empirica Noverde EP
                personType: J
                accountType: CC
                status: ACTIVE
                lockedAccount: false
                bankBranchAccount: '208_30_3299492'
                createTimestamp: '2021-04-14T20:38:00.5006985+00:00'
                lastUpdateTimestamp: '2022-05-28T13:30:49.0377225+00:00'
                beneficiaryTreatyCode: '637823632001565235'
                beneficiaryMarketTreatyCode: '01'
                defaultAccount: true
                transactionalType: PixMerchant
                markups:
                  - NOT-USE-PIX-PAYMENT-ASYNC:true
                  - PIX-ISPB:30306294
                  - PIX-MERCHANT-CATEGORY_CODE:0
                  - PIX-MERCHANT-CITY:Sao Paulo
                  - PIX-MERCHANT-NAME:Credito Empirica Noverde
                  - PIX-MERCHANT-POSTAL_CODE:20000000
                  - PIX-MERCHANT:true
                clientAccountType: BaaS_Default
              ourNumber: '585'
              ourNumberDigit: '5'
            tags:
              - PAYMENT_SLIP_PIX
          status: CREATED
    DarfContent:
      title: Root Type for DarfContent
      description: Darf Information.
      type: object
      properties:
        treasuryRevenueCode:
          description: Treasure recipe code. This parameter must be provided on "TRC_0000" format, see the example. On this <b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Link</a></b> you will have access to all possible codes in the section "<b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Codigo Receita Tesouro</a></b>".
          type: string
        personType:
          description: Person type (F = Person, J = Organization)
          enum:
            - F
            - J
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary
          type: string
        fineAmount:
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        name:
          description: DARF issue name
          maxLength: 80
          type: string
        interestAmount:
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        type:
          description: Type of DARF. N - Normal or S - Simple
          enum:
            - S
            - 'N'
          type: string
        dueDate:
          format: date
          description: Due Date. This parameter must be provided on "yyyy-MM-dd" format
          type: string
        mainAmount:
          description: Accumulated gross revenue percentage
          type: integer
        referenceDate:
          format: date
          description: Reference Date. This parameter must be provided on "yyyy-MM-dd" format
          type: string
      example:
        treasuryRevenueCode: TRC_6015
        personType: F
        taxId: '34687115810'
        fineAmount: 0
        name: Felipe Cardoso Garcia
        interestAmount: 0
        type: 'N'
        dueDate: '2021-12-30'
        mainAmount: 1500
        referenceDate: '2021-11-30'
    TreasuryResponse:
      title: Root Type for TreasuryResponse
      description: Treasury Information.
      type: object
      properties:
        MessageCode:
          description: The message code
          type: string
        History:
          description: Message sent by treasury
          type: string
        TreasuryDateTime:
          format: date-time
          description: Effective date in treasury
          type: string
        TreasuryControlNumber:
          description: Control Number
          type: string
        TreasuryDocumentNumber:
          description: DocumentNumber
          type: string
      example:
        MessageCode: TES0020
        History: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0017R2 NR.OPERACAO 30306294202112167248250
        TreasuryDateTime: '2021-12-16T10:35:15'
        TreasuryControlNumber: TES20211216106520574
        TreasuryDocumentNumber: 0574TES22002021DF193604
    DarfResponse:
      title: Root Type for DarfResponse
      description: ''
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          description: The response body.
          type: object
          properties:
            debitParty:
              type: object
              allOf:
                - $ref: '#/components/schemas/Party'
                - type: object
                  properties:
                    personType:
                      description: Person type (F = Person, J = Organization)
                      enum:
                        - F
                        - J
                      type: string
            type:
              description: Tax Payment Type.
              type: string
            darfContent:
              $ref: '#/components/schemas/DarfContent'
            status:
              description: The current status. More information about status <b><a href="#section/DARF-Status">here</a></b>.
              type: string
            pactualId:
              description: Unique resource Identifier (Uuid) generated by api.
              type: string
            internalDescription:
              description: Description.
              type: string
            treasuryResponse:
              $ref: '#/components/schemas/TreasuryResponse'
      example:
        version: 0.1.0
        status: 200
        body:
          debitParty:
            account: '5468327'
            bank: '208'
            branch: '30'
            personType: J
            taxId: '37880206000163'
            accountType: CC
            name: CORA SOCIEDADE DE CR�DITO DIRETO S/A
          type: DARF
          darfContent:
            treasuryRevenueCode: TRC_6015
            personType: F
            taxId: '34687115810'
            fineAmount: 0
            name: Felipe Cardoso Garcia
            interestAmount: 0
            type: 'N'
            dueDate: '2021-12-30'
            mainAmount: 1500
            referenceDate: '2021-11-30'
          status: PAID
          pactualId: 95658a65-d993-4498-9f2e-449cc36aec70
          internalDescription: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0017R2 NR.OPERACAO 30306294202112167248250
          treasuryResponse:
            MessageCode: TES0020
            History: RECOLHIMENTO DE TRIBUTO FEDERAL DIRETAMENTE NA SECRETARIA TESOURO NACIONAL REFERENTE MENSAGEM TES0017R2 NR.OPERACAO 30306294202112167248250
            TreasuryDateTime: '2021-12-16T10:35:15'
            TreasuryControlNumber: TES20211216106520574
            TreasuryDocumentNumber: 0574TES22002021DF193604
    GpsContent:
      title: Root Type for GpsContent
      description: GPS Information.
      type: object
      properties:
        anotherEntityAmount:
          format: int32
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        chargeAmount:
          format: int32
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        competenceDate:
          format: int32
          description: This parameter must be provided on yyyyMM format
          type: integer
        gpsCode:
          description: Gps code. This parameter must be provided on "CODE_1104" format, see the example. On this <b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Link</a></b> you will have access to all possible codes in the section "<b>Codigo GPS</b>".
          type: string
        inssAmount:
          format: int32
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        name:
          description: GPS issue name
          maxLength: 80
          type: string
        taxPayerIdentificationType:
          description: Tax payer identification type
          enum:
            - NIT
            - PIS
            - PASEP
          type: string
        taxPayerIdentifier:
          description: Number tax payer identifier
          type: string
      example:
        anotherEntityAmount: 0
        chargeAmount: 0
        competenceDate: 202204
        gpsCode: CODE_4308
        inssAmount: 54265
        name: Norte Produções em Comunicação LTDA
        taxPayerIdentificationType: PIS
        taxPayerIdentifier: '16849154000192'
    GpsResponse:
      title: Root Type for GpsResponse
      description: ''
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          description: The response body.
          type: object
          properties:
            debitParty:
              type: object
              allOf:
                - $ref: '#/components/schemas/Party'
                - type: object
                  properties:
                    personType:
                      description: Person type (F = Person, J = Organization)
                      enum:
                        - F
                        - J
                      type: string
            type:
              description: Tax Payment Type.
              type: string
            movementId:
              description: Unique identification created when the transaction impacted the main client's account.
              type: string
            gpsContent:
              $ref: '#/components/schemas/GpsContent'
            status:
              description: The current status. More information about status <b><a href="#section/GPS-Status">here</a></b>.
              type: string
            pactualId:
              description: Unique resource Identifier (Uuid) generated by api.
              type: string
            internalDescription:
              description: Description.
              type: string
            treasuryResponse:
              $ref: '#/components/schemas/TreasuryResponse'
    GruResponse:
      title: Root Type for GruResponse
      description: ''
      type: object
      properties:
        version:
          description: The api version.
          type: string
        status:
          description: The http status code.
          type: integer
        body:
          description: The response body.
          type: object
          properties:
            debitParty:
              type: object
              allOf:
                - $ref: '#/components/schemas/Party'
                - type: object
                  properties:
                    personType:
                      description: Person type (F = Person, J = Organization)
                      enum:
                        - F
                        - J
                      type: string
            type:
              description: Tax Payment Type.
              type: string
            gruContent:
              $ref: '#/components/schemas/GruContent'
            status:
              description: The current status. More information about status <b><a href="#section/GRU-Status">here</a></b>.
              type: string
            pactualId:
              description: Unique resource Identifier (Uuid) generated by api.
              type: string
            internalDescription:
              description: Description.
              type: string
    GruContent:
      title: Root Type for GruContent
      description: GRU Information.
      type: object
      properties:
        description:
          description: Some description for transaction
          type: string
        personType:
          description: Person type (F = Person, J = Organization)
          enum:
            - F
            - J
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary
          type: string
        name:
          description: "\r\nGRU issue name"
          maxLength: 80
          type: string
        treasureCollectionCode:
          description: Treasure collection code. This parameter must be provided on "TCC_10000" format, see the example. On this <b><a href="https://developer.btgpactual.com/docs/TaxMessageCodes.pdf ">Link</a></b> you will have access to all possible codes in the section "<b>Codigo Recolhimento Tesouro</b>".
          type: string
        gruReferenceNumber:
          description: Reference number
          type: string
        yearMonth13Competency:
          format: int32
          description: This parameter must be provided on yyyyMM format
          type: integer
        dueDate:
          format: date
          description: Due Date. This parameter must be provided on "yyyy-MM-dd" format
          type: string
        managingUnitCode:
          description: Managing unit code
          type: string
        mainAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        interestAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        fineAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        discountAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        otherDiscountAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        otherAddedAmount:
          format: int64
          description: 'Amount in cents. Example: 100 = R$1.00'
          type: integer
        history:
          description: History to be sent to the treasury
          type: string
    NewBankingChannelRequestBody:
      title: Root Type for NewBankingChannelRequestBody
      description: ''
      required:
        - beneficiary
        - beneficiaryBank
        - beneficiaryAccount
        - link
        - nature
      type: object
      properties:
        nature:
          description: All informations about the BACEN Nature are available on this [link](https://www.bcb.gov.br/pre/normativos/circ/2013/pdf/circ_3690_v1_O.pdf)
          type: object
          properties:
            codeOperationNature:
              description: BACEN Code for the general operation nature, it is a 5 digits field. The available codes can be found on the above link under the name of "Códigos de classificação de operações", on the "ANEXO I - ANEXO XI and ANEXO XIII" of the document.
              type: string
            clientNature:
              description: BACEN Code for the client nature, it is a 2 digits field. The available codes can be found on the above link under the name of "Códigos de classificação de operações relativos a clientes", on the "ANEXO XIV" of the document.
              type: string
            avalNature:
              format: int32
              description: BACEN Code that indicates whether the transaction needs to authorize the operation. More information about this field on the document on the "ANEXO XV"
              type: integer
            payerNature:
              description: BACEN Code for the Payer/Reciver on abroad, it is a 2 digits field. The available codes can be found on the above link under the name of "Códigos de classificação de operações relativos a pagadores/recebedores no exterior", on the "ANEXO XVI" of the document
              type: string
            groupNature:
              description: BACEN Code for the group that the operation belongs to, it is a 2 digits field. The available codes can be found on the above link under the name of "Códigos de grupos", on the "ANEXO XV" of the document
              type: string
            relationshipNature:
              description: BACEN Code for the relationship between the parts of the operation, it is a 2 digit field. The available codes can be found on the above link under the name of "Códigos relativos a relações de vínculo", on the "ANEXO XVIII" of the document.
              type: string
        beneficiary:
          description: Data object
          type: object
          properties:
            name:
              description: The name of the Beneficiary
              type: string
            countryId:
              description: Available on the GetCountries method of the Banking Channel API. The code is the 2 Digit code of the Country.
              type: string
        beneficiaryAccount:
          description: Data object
          type: object
          properties:
            accountNumber:
              description: The account number of the channel
              type: string
            currencyId:
              description: Available on the GetCurrencies method of the Banking Channel API. It is the 3 Digit Code of the Currency.
              type: string
            countryId:
              description: Available on the GetCountries method of the Banking Channel API. The code is the 2 Digit code of the Country.
              type: string
            expenseId:
              description: '"OUR" -> Means that the costs of the Operation will be from the BTG. "BEN" -> Means that the costs of the Operation will be from the Beneficiary "SHA" -> Means that the costs of the Operation will be shared with BTG and the Beneficiary'
              type: string
            swiftCode:
              description: The account swift code, if the account don't have one, is not necessary to send this field
              type: string
        beneficiaryBank:
          description: Data object
          type: object
          properties:
            name:
              description: The bank that the beneficiary account is under.
              type: string
            swiftCode:
              description: The Bank SWIFT Code. (If the FedWire property of the Beneficiary Bank is sent, the SWIFT Code is not required)
              type: string
            FedWrile:
              description: The Bank FedWire. (If the SWIFT Code property of the Beneficiary Bank is sent, the FedWire Code is not required)
              type: string
        intermediateBank:
          description: Data object
          type: object
          properties:
            name:
              description: The bank that the beneficiary account is under.
              type: string
            swiftCode:
              description: The Bank SWIFT Code. (If the FedWire property of the Beneficiary Bank is sent, the SWIFT Code is not required)
              type: string
            FedWrile:
              description: The Bank FedWire. (If the SWIFT Code property of the Beneficiary Bank is sent, the FedWire Code is not required)
              type: string
        link:
          format: int32
          description: The link between the Client and the Beneficiary/ 11. Operation between business on the same economic group, using this link value, means that the client has participation on the capital of the company. 12. Operation between business on the same economic group, using this link value, means that the beneficiary has participation on the capital of the company. 19. Operation between business on the same economic group - other situations. 20. Operation between business that are not on the same economic group. 30. Operation where the client and/or beneficiary is not a company.
          type: integer
        senderReceiverInformation:
          description: Name of the payer
          type: string
      example:
        beneficiary:
          name: First Test
          countryId: BR
        beneficiaryAccount:
          accountNumber: '12345678'
          currencyId: USD
          countryId: US
          expenseId: OUR
        beneficiaryBank:
          name: BTG PACTUAL SA
          swiftCode: BPABBRRJ
        link: 20
        senderReceiverInformation: Peter
    ForeignExchangePreTicketWebhookBody:
      description: Foreign Exchange Pre ticket webhook body.
      type: object
      properties:
        accountId:
          description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
          type: string
        amount:
          format: decimal
          description: Pre ticket value (always in base currency)
          type: number
        availableBalance:
          format: decimal
          description: The balance of the pre ticket
          type: number
        operationSide:
          description: The direction of the trade
          type: string
        baseCurrency:
          description: 3 digit currency being purchased
          type: string
        countryCode:
          description: 2 digit code of country of origin of the money
          type: string
        senderName:
          description: Name of the payer
          type: string
        additionalInformation:
          description: Field 70 of the SWIFT file
          type: string
        bankChannelId:
          description: The Id of the Banking Channel, the banking channel contains the SWIFT account information, it can be retrieved using Banking Channel API.
        beneficiary:
          description: Beneficiary of the bank channel
          type: string
        bacenNature:
          description: All informations about the BACEN Nature are available on this [link](https://www.bcb.gov.br/pre/normativos/circ/2013/pdf/circ_3690_v1_O.pdf)
          type: object
          properties:
            codeOperationNature:
              description: BACEN Code for the general operation nature, it is a 5 digits field. The available codes can be found on the above link under the name of "Códigos de classificação e operações, on the "ANEXO I - ANEXO XI and ANEXO XIII" of the document.
              type: string
            clientNature:
              description: BACEN Code for the client nature, it is a 2 digits field. The available codes can be found on the above link under the name of "Códigos de classificação de operações relativos a clientes", on the "ANEXO XIV" of the document.
              type: string
            avalNature:
              description: BACEN Code that indicates whether the transaction needs to authorize the operation. More information about this field on the document on the "ANEXO XV"
              type: string
            payerNature:
              description: BACEN Code for the Payer/Reciver on abroad, it is a 2 digits field. The available codes can be found on the above link under the name of "Códigos de classificação de operações relativos a pagadores/recebedores no exterior", on the "ANEXO XVI" of the document
              type: string
            groupNature:
              description: BACEN Code for the group that the operation belongs to, it is a 2 digits field. The available codes can be found on the above link under the name of "Códigos de grupos", on the "ANEXO XV" of the document
              type: string
            relationshipNature:
              description: BACEN Code for the relationship between the parts of the operation, it is a 2 digit field. The available codes can be found on the above link under the name of "Códigos relativos a relações de vínculo", on the "ANEXO XVIII" of the document.
              type: string
    FxManagerialBuyQuoteReponse:
      title: Root Type for FxManagerialBuyQuoteReponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            pactualBulkId:
              description: The pactualId of the quote aggregation
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Contract Entity name.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              type: object
              properties:
                unitPrice:
                  format: double
                  description: The unit price of the base currency in BRL
                  type: number
                total:
                  format: double
                  description: The amount based on the baseCurrency that the customer will be charged (BUY)/The amount based on the base Currency that the customer will recive (SELL)
                  type: number
                expirationDate:
                  description: The Datetime that the quote wil expire (once the quote expirte, it will be no longer possible to accept)
                  type: string
                quoteTimestamp:
                  description: The Datetime that the quote was created
                  type: string
                acceptTimestamp:
                  format: date-time
                  description: The Datetime that the currency was accepted, default value if the quote was not accepeted
                  type: string
                operationSide:
                  description: The direction of the trade.
                  type: string
                quoteCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                baseCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                amount:
                  format: int32
                  description: Indicated the amount for the currency of the quote/trade
                  type: integer
                quoteCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the QuoteCurrency
                  type: string
                baseCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the BaseCurrency
                  type: string
                docAccountId:
                  description: The BaaS Doc AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
                  type: string
                bankChannelId:
                  description: The bankingChannelId retrieved from the BankingChannelApi, its translates the SWIFT account used on the quote, the account that will recive the foreignCurrency (BUY) / the account will send the foreignCurrency (SELL)
                  type: string
                indicative:
                  description: Indicates whether a quote is indicative or not, Indicative quotes cannot be accepeted
                  type: string
                isManagerialOnly:
                  description: It indicates whether a quote is managerial only or not, managerial only quotes won't be executed, they exists only for managerial purposes
                  type: boolean
                accountId:
                  description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
                  type: string
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
          pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
          clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          createTimestamp: '2021-03-25T17:39:14.873622+00:00'
          lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
          entity: ForeignExchange
          status: CREATED
          body:
            unitPrice: 5.7702
            total: 63.47
            expirationDate: '2021-03-25T14:41:14.1611053-03:00'
            quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
            acceptTimestamp: '0001-01-01T00:00:00'
            operationSide: BUY
            quoteCurrency: BRL
            baseCurrency: USD
            amount: 11
            quoteCurrencySettlementDate: '2021-03-25T00:00:00'
            baseCurrencySettlementDate: '2021-03-25T00:00:00'
            docAccountId: 00000000-0000-0000-0000-000000000000
            bankChannelId: aa9ce499242349d28c4facf5015555c8
            accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
            indicative: 'false'
            isManagerialOnly": true
          tags: []
    FxManagerialSellQuoteReponse:
      title: Root Type for FxManagerialSellQuoteReponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            pactualBulkId:
              description: The pactualId of the quote aggregation
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Contract Entity name.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              type: object
              properties:
                unitPrice:
                  format: double
                  description: The unit price of the base currency in BRL
                  type: number
                total:
                  format: double
                  description: The amount based on the baseCurrency that the customer will be charged (BUY)/The amount based on the base Currency that the customer will recive (SELL)
                  type: number
                expirationDate:
                  description: The Datetime that the quote wil expire (once the quote expirte, it will be no longer possible to accept)
                  type: string
                quoteTimestamp:
                  description: The Datetime that the quote was created
                  type: string
                acceptTimestamp:
                  format: date-time
                  description: The Datetime that the currency was accepted, default value if the quote was not accepeted
                  type: string
                operationSide:
                  description: The direction of the trade.
                  type: string
                senderName:
                  description: Name of the payer
                  type: string
                countryCode:
                  description: 2 digit code of country of origin of the money
                  type: string
                quoteCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                baseCurrency:
                  description: 3 digit currency code that the quote/trade quote
                  type: string
                amount:
                  format: int32
                  description: Indicated the amount for the currency of the quote/trade
                  type: integer
                quoteCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the QuoteCurrency
                  type: string
                baseCurrencySettlementDate:
                  format: date-time
                  description: The settlementDate from the BaseCurrency
                  type: string
                docAccountId:
                  description: The BaaS Doc AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
                  type: string
                indicative:
                  description: Indicates whether a quote is indicative or not, Indicative quotes cannot be accepeted
                  type: string
                isManagerialOnly:
                  description: It indicates whether a quote is managerial only or not, managerial only quotes won't be executed, they exists only for managerial purposes
                  type: boolean
                accountId:
                  description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
                  type: string
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 62277c6f-e36a-4503-880a-dba760e51a91
          pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
          clientRequestId: 247da583-a4b1-404b-b654-7af144098f69
          createTimestamp: '2021-03-25T17:39:14.873622+00:00'
          lastUpdateTimestamp: '2021-03-25T17:39:14.8740875+00:00'
          entity: ForeignExchange
          status: CREATED
          body:
            unitPrice: 5.7702
            total: 63.47
            expirationDate: '2021-03-25T14:41:14.1611053-03:00'
            quoteTimestamp: '2021-03-25T14:39:14.7631919-03:00'
            acceptTimestamp: '0001-01-01T00:00:00'
            operationSide: SELL
            senderName: Paulo
            countryCode: AF
            quoteCurrency: BRL
            baseCurrency: USD
            amount: 11
            quoteCurrencySettlementDate: '2021-03-25T00:00:00'
            baseCurrencySettlementDate: '2021-03-25T00:00:00'
            docAccountId: 00000000-0000-0000-0000-000000000000
            accountId: 13191aa1-6da7-4748-9d09-6849f4b372c6
            indicative: 'false'
            isManagerialOnly: true
          tags: []
    FxManagerialSellQuoteRequestBody:
      title: Root Type for FxManagerialSellQuoteRequestBody
      description: ''
      required:
        - baseCurrencySettlementDate
        - quoteCurrencySettlementDate
        - amount
        - baseCurrency
        - clientRequestId
        - senderName
        - countryCode
      type: object
      properties:
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        tags:
          description: Tags that will be recorded with the request response.
          type: array
          items:
            type: string
        amount:
          format: decimal
          description: Indicated the amount of the AmountCurrency
          type: number
        baseCurrencySettlementDate:
          format: date
          description: The settlementDate from the BaseCurrency
          type: string
        quoteCurrencySettlementDate:
          format: date
          description: The settlementDate from the QuoteCurrency
          type: string
        baseCurrency:
          description: First 3 digit currency code within the currency pair quotation
          type: string
        amountCurrency:
          description: 3 digit currency code of the amount
          type: string
        senderName:
          description: Name of the payer
          type: string
        countryCode:
          description: 2 digit code of country of origin of the money
          type: string
      example:
        clientRequestId: guid/uuid
        tags:
          - UAT
        amount: 11
        baseCurrencySettlementDate: '2021-02-18'
        quoteCurrencySettlementDate: '2021-02-18'
        baseCurrency: USD
        amountCurrency: BRL
        senderName: Paulo
        countryCode: BR
    GuarantorDrawer:
      title: ''
      description: Guarantor Drawer information
      type: object
      properties:
        documentType:
          description: |

            |Code |Description|
            |----------|:-------------|
            |1|CPF|
            |2|CNPJ|
            |3|PIS|
            |9|OTHER|
          enum:
            - '1'
            - '2'
            - '3'
            - '9'
          type: integer
        documentNumber:
          description: Tax Identification - CPF (11 digits) or CNPJ (14 digits), fill with zeros left of the number if necessary. (Just numbers allowed)
          type: integer
        name:
          description: The name of customer that will be charged.
          type: string
      example:
        documentType: 0
        documentNumber: 0
        name: string
    PixCollectionDueDateUpdateRequest:
      title: PixCollectionDueDateUpdateRequest
      description: ''
      required:
        - clientRequestId
        - calendar
        - key
        - debtor
        - receiver
        - amount
      type: object
      allOf:
        - $ref: '#/components/schemas/PixCollectionDueDateCalendarRequest'
        - $ref: '#/components/schemas/PixCollectionDueDateDebtor'
        - $ref: '#/components/schemas/PixCollectionDueDateReceiver'
        - type: object
          properties:
            amount:
              $ref: '#/components/schemas/PixCollectionDueDateAmount'
        - $ref: '#/components/schemas/PixCollectionDueDateBase'
    PaymentSlipPixUpdateRequest:
      title: Root Type for PaymentSlipPixUpdateRequest
      description: ''
      type: object
      properties:
        paymentSlip:
          $ref: '#/components/schemas/PaymentSlipUpdateRequestBody'
          description: PaymentSlip information.
        pix:
          $ref: '#/components/schemas/PixCollectionDueDateUpdateRequest'
        clientRequestId:
          description: Unique Id for the request, preferably a GUID (UUID)
          type: string
        tags:
          type: array
          items:
            description: Tags that will be recorded with the request response.
            type: array
            items:
              type: string
    SettlementServiceWebhook:
      title: Root Type for SettlementServiceWebhook
      description: ''
      type: object
      properties:
        pactualId:
          description: The record primary key, used to identify the record for further operations. It is a string representation of a GUID (UUID)
          type: string
        createTimestamp:
          description: Date and time in which the Settlement was created
          type: string
        lastUpdateTimestamp:
          description: Date and time in which the Settlement was last updated
          type: string
        entity:
          description: The entity name. It will always be SettlementService
          type: string
        status:
          description: The Settlement status
          type: string
        body:
          description: Settlement data
          type: object
          properties:
            IdMovto:
              description: Identifer from SLC about the transaction. It's a concatenate of date (yyyy-mm-dd) and Origin (SLC Type)
              type: string
            IdentdLinhaBilat:
              description: The bilateral line identification (CIP canonical field)
              type: string
            Amount:
              format: int32
              description: The amount settle in the transaction
              type: integer
            BankBranchAccount:
              description: Bank, branch and account numbers concatenated
              type: string
            CashDirection:
              description: The cash direction
              enum:
                - CashIn
                - CashOut
              type: string
            CodProdt:
              description: Product code (CIP canonical field)
              type: string
            Description:
              description: BTG internal description about the transaction
              type: string
            DtMovto:
              format: date
              description: The date of the Settlement movement (CIP canonical field)
              type: string
            MessageBody:
              description: SLC message body (CIP canonical fields)
              type: object
              properties:
                IdentdLinhaBilat:
                  description: The bilateral line identification
                  type: string
                CNPJNLiqdantCredtd:
                  description: The CNPJ of the creditor part
                  type: string
                CNPJNLiqdantDebtd:
                  description: The CNPJ of the debitor part
                  type: string
                ISPBIFCredtd:
                  description: The ISPB of the creditor part
                  type: string
                ISPBIFDebtd:
                  description: The ISPB of the debitor part
                  type: string
                NomCliCredtd:
                  description: The name of the creditor part
                  type: string
                NomCliDebtd:
                  description: The name of the debitor part
                  type: string
                TpDeb_Cred:
                  description: Indicates if the Settlement is a debit (D) or credit (C)
                  enum:
                    - C
                    - D
                  type: string
                TpTranscSLC:
                  description: The SLC type of the transaction
                  type: string
                VlrLanc:
                  format: double
                  description: The movement value
                  type: number
            MovementId:
              description: The financial transaction identificator. Use this field for reconciliation
              type: string
            NUOp:
              description: Operation number
              type: string
            Origin:
              description: The SLC origin
              enum:
                - SLC0001
                - SLC0002R1
                - SLC0002R2
                - SLC0005
              type: string
        tags:
          description: Markups
          type: array
          items: {}
    Sme0001Body:
      title: Root Type for Sme0001Body
      description: SME0001 Request body.
      type: object
      properties:
        codMsg:
          description: Message Code.
          type: string
        dtMovto:
          format: date
          description: Movement Date.
          type: string
        iSPBIEME:
          description: IEME's ISPB Code.
          type: string
        iSPBIF:
          description: IF's ISPB Code.
          type: string
        numCtrlIF:
          description: IF Control Number.
          type: string
        vlrLanc:
          description: Investment amount.
          type: string
      example:
        codMsg: SME0001
        dtMovto: '2023-06-23'
        iSPBIEME: '30306294'
        iSPBIF: '30306294'
        numCtrlIF: '208'
        vlrLanc: '1900'
    ForeignExchangeStatus:
      description: |
        The state of the quote, which at the time of its creation will be CREATED.
      enum:
        - CREATED
        - ACCEPTED
        - VALIDATED
        - CALCULATING_TAXES
        - BASE_CURRENCY_SETTLED
        - SETTLED
        - CANCELLED
        - ERROR
        - EXPIRED
        - AMENDED
        - PARTIAL_CANCELLATION
      type: string
    ForeignExchangeAggregationStatus:
      description: |
        The state of the group quote, which at the time of its creation will be ENQUEUED.
      enum:
        - ENQUEUED
        - VALIDATED
        - CALCULATING_TAXES
        - BASE_CURRENCY_SETTLED
        - SETTLED
        - CANCELLED
        - AMENDED
        - PARTIAL_CANCELLATION
      type: string
    ForeignExchangePreTicketStatus:
      description: |
        The state of the group quote, which at the time of its creation will be CREATED.
      enum:
        - CREATED
        - ENQUEUED
        - PROCESSING
        - BLOCKED
        - EXPIRED
        - CONFIRMED
      type: string
    ForeignExchangeAggregationWebhook:
      description: Foreign Exchange Aggregation webhook body.
      type: object
      properties:
        pactualId:
          $ref: '#/components/schemas/PactualId'
        pactualBulkId:
          $ref: '#/components/schemas/PactualBulkId'
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        createTimestamp:
          $ref: '#/components/schemas/CreateTimestamp'
        lastUpdateTimestamp:
          $ref: '#/components/schemas/LastUpdateTimestamp'
        entity:
          $ref: '#/components/schemas/Entity'
        status:
          $ref: '#/components/schemas/ForeignExchangeAggregationStatus'
        body:
          $ref: '#/components/schemas/ForeignExchangeAggregationWebhookBody'
        tags:
          $ref: '#/components/schemas/Tags'
    ForeignExchangePreTicketWebhook:
      description: Foreign Exchange Pre Ticket webhook.
      type: object
      properties:
        pactualId:
          $ref: '#/components/schemas/PactualId'
        pactualBulkId:
          $ref: '#/components/schemas/PactualBulkId'
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        createTimestamp:
          $ref: '#/components/schemas/CreateTimestamp'
        lastUpdateTimestamp:
          $ref: '#/components/schemas/LastUpdateTimestamp'
        entity:
          $ref: '#/components/schemas/Entity'
        status:
          $ref: '#/components/schemas/ForeignExchangePreTicketStatus'
        body:
          $ref: '#/components/schemas/ForeignExchangePreTicketWebhookBody'
        tags:
          $ref: '#/components/schemas/Tags'
    ForeignExchangeWebhook:
      description: Foreign Exchange Pre Ticket webhook.
      type: object
      properties:
        pactualId:
          $ref: '#/components/schemas/PactualId'
        pactualBulkId:
          $ref: '#/components/schemas/PactualBulkId'
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        createTimestamp:
          $ref: '#/components/schemas/CreateTimestamp'
        lastUpdateTimestamp:
          $ref: '#/components/schemas/LastUpdateTimestamp'
        entity:
          $ref: '#/components/schemas/Entity'
        status:
          $ref: '#/components/schemas/ForeignExchangeStatus'
        body:
          $ref: '#/components/schemas/ForeignExchangeWebhookBody'
        tags:
          $ref: '#/components/schemas/Tags'
    ForeignExchangeWebhookBody:
      description: Foreign Exchange webhook body.
      type: object
      properties:
        unitPrice:
          format: double
          description: The unit price of the base currency in BRL
          type: number
        total:
          format: double
          description: The amount based on the baseCurrency that the customer will be charged (BUY)/The amount based on the base Currency that the customer will recive (SELL)
          type: number
        expirationDate:
          description: The Datetime that the quote wil expire (once the quote expirte, it will be no longer possible to accept)
          type: string
        quoteTimestamp:
          description: The Datetime that the quote was created
          type: string
        acceptTimestamp:
          format: date-time
          description: The Datetime that the currency was accepted, default value if the quote was not accepeted
          type: string
        operationSide:
          description: The direction of the trade
          type: string
        quoteCurrency:
          description: 3 digit currency code that the quote/trade quote
          type: string
        baseCurrency:
          description: 3 digit currency code that the quote/trade quote
          type: string
        amountCurrency:
          description: 3 digit currency code of the amount currency
          type: string
        aggregationDateTime:
          format: date-time
          description: The date and hour of the aggregation
          type: string
        amount:
          format: int32
          description: Indicated the amount for the currency of the quote/trade
          type: integer
        quoteCurrencySettlementDate:
          format: date-time
          description: The settlementDate from the QuoteCurrency
          type: string
        baseCurrencySettlementDate:
          format: date-time
          description: The settlementDate from the BaseCurrency
          type: string
        bankChannelId:
          description: The bankingChannelId retrieved from the BankingChannelApi, its translates the SWIFT account used on the quote, the account that will recive the foreignCurrency (BUY) / the account will send the foreignCurrency (SELL)
          type: string
        indicative:
          description: Indicates whether a quote is indicative or not, Indicative quotes cannot be accepeted
          type: string
        isManagerialOnly:
          description: It indicates whether a quote is managerial only or not, managerial only quotes won�t be executed, they exists only for managerial purposes
          type: boolean
        accountId:
          description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
          type: string
        preTicketPactualId:
          description: The pactualid of the pre ticket
          type: string
        bacenIdentification:
          description: Trade identification code at Bacen
          type: string
        previousQuoteCurrencySettlementDate:
          format: date-time
          description: The old settlementDate from the QuoteCurrency when there is a change
          type: string
        previousBaseCurrencySettlementDate:
          format: date-time
          description: The old settlementDate from the BaseCurrency when there is a change
          type: string
        taxes:
          description: The ids of the trade taxes
          type: array
          items:
            $ref: '#/components/schemas/Tax'
        movementId:
          description: The id of the foreign exchange trade
          type: string
    CcmeGetResponse:
      title: Root Type for CcmeGetResponse
      description: ''
      type: object
      properties:
        accountId:
          description: The Account Id of BTG Pactual BaaS.
          type: string
        clientId:
          description: The Client Id of BTG Pactual BaaS.
          type: string
        pactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side.
          type: string
        createTimestamp:
          description: Entity creation time.
          type: string
        lastUpdateTimestamp:
          description: Entity update time.
          type: string
        entity:
          description: Entity name.
          type: string
        status:
          description: The current status. More information about status <b><a href="#section/CCME-Investment-Status">here</a></b>.
          type: string
        errorCode:
          description: The error code.
          type: string
        errorDescription:
          description: The error description.
          type: string
        body:
          description: The response body of request of single resource.
          type: object
          properties:
            movementId:
              description: Unique identification created when the transaction impacted the client's account.
              type: string
            reversalMovementId:
              description: Unique identification created when the transaction was reversed on the customer's account.
              type: string
            messageType:
              description: |
                Type of transaction investment.

                |Code |Description|
                |----------|:-------------|
                |SME0001|Transfer request for electronic Money Account Deposit.|
              enum:
                - SME0001
              type: string
            request:
              $ref: '#/components/schemas/Sme0001Body'
            notification:
              type: object
              properties:
                codMsg:
                  description: Message Code.
                  type: string
                domSist:
                  type: string
                dtHrSit:
                  format: date-time
                  description: Date Time Status.
                  type: string
                dtMovto:
                  format: date-time
                  description: Movement Date.
                  type: string
                identdDestinatario:
                  description: Receiver identification code.
                  type: string
                identdEmissor:
                  description: Sender identification code.
                  type: string
                iSPBIF:
                  description: IF's ISPB Code.
                  type: string
                numCtrlIF:
                  description: IF Control Number.
                  type: string
                numCtrlSTR:
                  description: STR Control Number.
                  type: string
                nUOp:
                  description: Numero de operação.
                  type: string
                sitLancSTR:
                  description: STR Release Status.
                  type: string
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
      example:
        accountId: e228bb61-8b18-4af7-9416-a94cd813652d
        body:
          messageType: SME0001
          movementId: string
          reversalMovementId: string
          request:
            codMsg: SME0001
            dtMovto: '2023-06-23'
            iSPBIEME: '30306294'
            iSPBIF: '30306294'
            numCtrlIF: '208'
            vlrLanc: '1900'
          notification:
            codMsg: SME0001R1
            domSist: SPB01
            dtHrSit: '2023-06-27T12:25:17Z'
            dtMovto: '2023-06-27T00:00:00Z'
            identdDestinatario: '30306294'
            identdEmissor: '00038166'
            iSPBIF: '30306294'
            numCtrlIF: SME20230627005000125
            numCtrlSTR: STR20230627033038561
            nUOp: '30306294202306275000125'
            sitLancSTR: '1'
        clientId: f96cdde6-bbe4-4eb7-840f-56c309a575ab
        clientRequestId: 0d5c1afd-19b6-4fca-9681-4580a30eca90
        createTimestamp: '2023-06-23T13:41:07.0534905+00:00'
        entity: CcmeInvestment
        lastUpdateTimestamp: '2023-06-23T13:41:08.6111612+00:00'
        pactualId: 6c0788a5-1c10-4a6e-b1c8-e42ee3844dd4
        status: TRANSFER_PROCESSING
        errorCode: string
        errorDescription: string
        tags: []
    PaymentSlipPix:
      title: paymentSlip
      required:
        - amount
      type: object
      properties:
        amount:
          description: Nominal amount.
          pattern: \d{1,10}\.\d{2}
          type: string
        dueDate:
          format: date
          description: 'Due date. Format: yyyy-MM-dd'
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
          description: Customer that will be charged. (default = create a charge for yourself)
          properties:
            name:
              type: string
            taxId:
              type: string
            street:
              type: string
            number:
              type: string
            numberComplement:
              type: string
            neighborhood:
              type: string
            city:
              type: string
            stateCode:
              type: string
            zipCode:
              type: string
        fine:
          $ref: '#/components/schemas/Fine'
          description: Percentage or value of the charge amount charged if customer pays after the due date. Default value = 0.00 (0%)
          properties:
            date:
              type: string
            type:
              type: string
            value:
              type: number
        interest:
          $ref: '#/components/schemas/Interest'
          description: Day interest, in percentage or amount, charged if customer pays after the due date. Default value = 0.00 (0%)
          properties:
            date:
              type: string
            type:
              type: string
            value:
              type: number
        discounts:
          $ref: '#/components/schemas/Discount'
          description: List of discount amount or percentage if customer pays until informed date.
        overdueDate:
          format: date
          description: How date the payment slip is canceled and can not be paid anymore. Default value = Due date + 30 Days
          type: string
        divergentAmountType:
          description: |
            Authorization in the divergent amount.

            |Code |Description|
            |----------|:-------------|
            |1|Any amount|
            |2|Between min and max|
            |3|Not accept payment with different amount|
            |4|Only min amount|
          default: 2
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
          type: integer
        amountLimit:
          description: Amount Limit information.
          type: object
          properties:
            minPercentAmountType:
              description: |
                Minimum charge type.

                |Code |Description|
                |----------|:-------------|
                |V|Amount|
                |P|Percent|
              enum:
                - V
                - P
              type: string
            minPercentAmount:
              description: Minimum charge value.
              type: number
            maxPercentAmountType:
              description: |
                Maximum charge type.

                |Code |Description|
                |----------|:-------------|
                |V|Amount|
                |P|Percent|
              enum:
                - V
                - P
              type: string
            maxPercentAmount:
              description: Maximum charge value.
              type: number
        guarantorDrawer:
          $ref: '#/components/schemas/GuarantorDrawer'
          description: ''
        ourNumber:
          description: Our payment slip number.
          type: string
        description:
          description: Text to be displayed in your statement.
          type: string
        tags:
          description: A list of tags.
          type: array
          items:
            type: string
      example:
        amount: '400.00'
        customer:
          city: string
          numberComplement: Sala 101 3 andar
          neighborhood: Itaim Bibi
          name: Alex
          zipCode: 12345678
          number: 13A
          street: Av. Faria Lima, 0001
          stateCode: string
          taxId: '61718265298'
        description: string
        interest:
          date: '2020-08-20'
          value: 1.1
          code: AMOUNT_CALENDAR_DAYS
        fine:
          date: '2020-08-20'
          value: 1.1
          code: FIXED_VALUE
        discounts:
          discount1:
            date: '2020-07-01'
            value: 15
            type: '2'
          discount2:
            date: '2020-07-10'
            value: 10
            type: '2'
          discount3:
            date: '2020-07-15'
            value: 5
            type: '2'
        dueDate: '2020-07-20'
        divergentAmountType: 2
        amountLimit:
          minPercentAmountType: V
          minPercentAmount: 125.65
          maxPercentAmountType: V
          maxPercentAmount: 400
        ourNumber: '97136922411752832424'
        guarantorDrawer:
          documentType: 1
          documentNumber: 26671395934
          name: Tereza Silvana
        overdueDate: '2020-07-30'
    CcmeInvestmentPost:
      title: Root Type for CmmeInvestmentPost
      description: ''
      type: object
      properties:
        clientRequestId:
          description: The unique transaction identification given by the client side.
          type: string
          example: 89aba265-1548-4ce5-a592-f53f9f6925ae
        body:
          required:
            - vlrLanc
          type: object
          properties:
            vlrLanc:
              description: 'Investment amount in cents to be transfered. Example: 100 = R$1.00'
              type: integer
              example: 2400
        tags:
          description: A list with tags.
          type: array
          items:
            type: string
    PaymentSlipPixRequest:
      description: ''
      required:
        - PaymentSlip
        - Pix
        - clientRequestId
      type: object
      properties:
        clientRequestId:
          description: 'Unique identifier (Uuid) provided by the client. Can be used in response corelation. For example: {05a8b502-682e-4ca0-9762-8e260ff736c6}'
          type: string
          example: 05a8b502-682e-4ca0-9762-8e260ff736c6
        paymentSlip:
          $ref: '#/components/schemas/PaymentSlipPix'
          description: ''
        pix:
          $ref: '#/components/schemas/PixCollectionDueDateCreateRequest'
          description: ''
        tags:
          description: A list of tags.
          type: array
          items:
            type: string
      example:
        PaymentSlip:
          Amount: '728.10'
          DueDate: '2024-06-24'
          Customer:
            Name: Linha Rara Indústria E Comércio Ltda
            TaxId: '06051750000179'
            Street: AVENIDA SAPUCAIA
            Number: '1780'
            City: SAPUCAIA DO SUL
            StateCode: RS
            ZipCode: '93210240'
          Fine:
            Date: '2024-06-25'
            Value: 2
            Code: PERCENT
          Interest:
            Date: '2024-06-25'
            Value: 1.5
            Code: PERCENTAGE_POINT_PER_MONTH_CALENDAR_DAYS
          Discounts:
            Discount1:
              Date: '2024-06-08'
              Value: 3
              Type: '2'
          OverdueDate: '2024-07-24'
          DivergentAmountType: NOT_ACCEPT_PAYMENT_WITH_DIFFERENT_AMOUNT
          OurNumber: '40443301084451380'
          Description: Plano Doctorclin 1° Parcela
          AmountLimit:
            MinPercentAmountType: P
            MinPercentAmount: 100
            MaxPercentAmountType: P
            MaxPercentAmount: 100
        Pix:
          Amount:
            Original: '728.10'
            Fine:
              Modality: PERCENT
              AmountPerc: '2.00'
            Interest:
              Modality: PERCENTAGE_PER_MONTH_CALENDAR_DAYS
              AmountPerc: '1.50'
            Discount:
              Modality: PERCENTAGE_DATE_REPORTED
              DiscountDateFixed:
                - Date: '2024-06-08'
                  AmountPerc: '3.00'
          Calendar:
            DueDate: '2024-06-24'
            ExpirationAfterPayment: 122
          Debtor:
            CNPJ: '06051750000179'
            Name: Linha Rara Indústria E Comércio Ltda
          Key: 6f343008-0000-4662-90a0-9d74f37db6e9
          LocationInformation:
            Merchant:
              PostalCode: '04538133'
              City: SAO PAULO
              Name: VECHI
              MerchantCategoryCode: '6533'
            Type: COBV
          Receiver:
            CNPJ: '12449020000123'
            Name: UNISAUDEPOA CORRETORA DE SEGUROS LTDA
            PublicArea: AV BRIGADEIRO FARIA LIMA 3477
            City: SAO PAULO
            State: SP
            PostalCode: '04538133'
        ClientRequestId: d450fe22-fad7-4d5f-b7e7-b5edfa040e11
    GenericWH:
      title: Root Type for GenericWH
      description: ''
      type: object
      properties:
        ClientId:
          description: The Client Id of BTG Pactual BaaS.
          type: string
        ClientRequestId:
          description: The unique transaction identification given by the client side.
          type: string
        CreateTimestamp:
          description: Entity creation time.
          type: string
        Entity:
          description: Entity name.
          type: string
        LastUpdateTimestamp:
          description: Entity update time.
          type: string
        PactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        Status:
          description: The current status.
          type: string
        Tags:
          description: A list with tags.
          type: array
          items:
            type: string
    CcmeReversalInvestmentWH:
      title: Root Type for CcmeReversalInvestmentWH
      description: ''
      type: object
      allOf:
        - type: object
          properties:
            Body:
              description: CCME Reversal Investment information.
              type: object
              properties:
                MessageType:
                  description: |
                    Type of transaction investment.

                    |Code |Description|
                    |----------|:-------------|
                    |SME0004|Requests transfer to return improper entry in the SME|
                  type: string
                MovementId:
                  description: Unique identification created when the transaction impacted the client's account.
                  type: string
                Notification:
                  type: object
                  properties:
                    codMsg:
                      description: Message Code.
                      type: string
                    domSist:
                      description: System domain type.
                      type: string
                    dtHrBC:
                      format: date-time
                      description: BCB Date.
                      type: string
                    dtMovto:
                      format: date-time
                      description: Movement Date.
                      type: string
                    hist:
                      description: Transaction Description.
                      type: string
                    identdDestinatario:
                      description: IEME's Receiver ISPB Code.
                      type: string
                    identdEmissor:
                      description: IEME's Sender ISPB Code.
                      type: string
                    ispbiF_IEMECredtd:
                      description: IEME's Credit ISPB Code.
                      type: string
                    ispbiF_IEMEDebtd:
                      description: IEME's Debit ISPB Code.
                      type: string
                    numCtrlSTR:
                      description: STR Control Number.
                      type: string
                    numCtrlSTROr:
                      description: STR Control Number.
                      type: string
                    nuOp:
                      description: Operation number.
                      type: string
                    vlrLanc:
                      format: int32
                      description: Investment amount.
                      type: integer
            Status:
              description: |-
                The current status.

                |Status Code |Description|
                |----------|:-------------|
                |ENQUEUED|Request with the contract Ok and waiting for processing.|
                |PROCESSING|Request is processing.|
                |PROCESSED|Operation was processed.|
                |ERROR|Internal error of data consistency validations.|
              type: string
        - $ref: '#/components/schemas/GenericWH'
      example:
        Body:
          MessageType: SME0004
          MovementId: '110248645850'
          Notification:
            codMsg: SME0004R2
            domSist: SPB01
            dtHrBC: '2023-07-12T10:12:48'
            dtMovto: '2023-07-12T00:00:00'
            hist: DEVOLUCAO
            identdDestinatario: '30306294'
            identdEmissor: '00034465'
            ispbiF_IEMECredtd: '30306294'
            ispbiF_IEMEDebtd: '44815065'
            numCtrlSTR: STR20277078033019816
            numCtrlSTROr: STR41259712023590295
            nuOp: '5890294202306275000125'
            vlrLanc: 800
        ClientId: 1036503a-f04f-45fa-89a6-464679611e18
        ClientRequestId: 95b48e67-6977-4483-af96-31b1582f5299_SME0004R2
        CreateTimestamp: '2023-07-12T13:12:54.1929292+00:00'
        Entity: CcmeReversalInvestment
        LastUpdateTimestamp: '2023-07-12T13:14:39.4986623+00:00'
        PactualId: 6801c53a-7dba-45cd-bbdc-f58673648ed0
        Status: PROCESSED
        Tags: []
    CcmeWithdrawWh:
      title: Root Type for CcmeWithdrawWh
      description: ''
      type: object
      properties:
        Body:
          type: object
          properties:
            messageType:
              description: |
                Type of transaction investment.

                |Code |Description|
                |----------|:-------------|
                |SME0002|Withdraw request for electronic Money Account.|
              enum:
                - SME0002
              type: string
            movementId:
              description: Unique identification created when the transaction impacted the client's account.
              type: string
            notification:
              type: object
              properties:
                agCredtd:
                  description: Receiver Bank Branch.
                  type: string
                cnpjCliCredtd:
                  description: Receiver Tax Identification.
                  type: string
                codMsg:
                  description: Message Code.
                  type: string
                ctCredtd:
                  description: Receiver Bank Account.
                  type: string
                dtHrBC:
                  format: date-time
                  description: BCB Date.
                  type: string
                dtMovto:
                  format: date-time
                  description: Movement Date.
                  type: string
                ispbieme:
                  description: IEME's ISPB Code.
                  type: string
                ispbifCredtd:
                  description: IF's ISPB Code.
                  type: string
                numCtrlSTR:
                  description: STR Control Number.
                  type: string
                vlrLanc:
                  description: Withdraw amount.
                  type: string
        ClientId:
          description: The Client Id of BTG Pactual BaaS.
          type: string
        ClientRequestId:
          description: The unique transaction identification given by the client side.
          type: string
        CreateTimestamp:
          description: Entity creation time.
          type: string
        Entity:
          description: Entity name.
          type: string
        LastUpdateTimestamp:
          description: Entity update time.
          type: string
        PactualId:
          description: Unique resource identificator (Uuid) generated by api.
          type: string
        Status:
          description: |
            The current status.

            | Status Code |Status Description|
            |----------|:-------------|
            |ENQUEUED|Request with the contract Ok and waiting for processing.|
            |PROCESSING|Request is processing.|
            |PROCESSED|Operation was processed.|
            |ERROR|Internal error of data consistency validations.|
          type: string
        Tags:
          description: A list with tags.
          type: array
          items: {}
      example:
        Body:
          messageType: SME0002
          movementId: '1234567'
          notification:
            agCredtd: '30'
            cnpjCliCredtd: '49456800564345'
            codMsg: SME0002R2
            ctCredtd: '134566'
            dtHrBC: '2023-07-12T10:13:51'
            dtMovto: '2023-07-12T00:00:00'
            ispbieme: '30306294'
            ispbifCredtd: '30306294'
            numCtrlSTR: SME0002R2
            vlrLanc: '2000.0'
        ClientId: e42d2eb7-0082-41c5-bf6e-144089f18219
        ClientRequestId: 79061255-9233-4d36-810e-e6968f12b42a_SME0002R2
        CreateTimestamp: '2023-07-12T13:13:58.9750871+00:00'
        Entity: CcmeWithdraw
        LastUpdateTimestamp: '2023-07-12T13:15:31.3459436+00:00'
        PactualId: aa891434-c994-431a-ba8c-b4f536e9e0b9
        Status: PROCESSED
        Tags: []
    PaymentSlipRequest:
      title: BillRequest-Long
      required:
        - amount
        - clientRequestId
      type: object
      properties:
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        amount:
          description: 'Amount in cents to be transfered. Example: 100 = R$1.00'
          type: integer
        dueDate:
          format: date
          description: 'Due date. Format: yyyy-MM-dd'
          type: string
        customer:
          $ref: '#/components/schemas/Customer'
          description: Customer that will be charged. (default = create a charge for yourself)
          properties:
            name:
              type: string
            taxId:
              type: string
            street:
              type: string
            number:
              type: string
            numberComplement:
              type: string
            neighborhood:
              type: string
            city:
              type: string
            stateCode:
              type: string
            zipCode:
              type: string
        fine:
          $ref: '#/components/schemas/Fine'
          description: Percentage or value of the charge amount charged if customer pays after the due date. Default value = 0.00 (0%)
          properties:
            date:
              type: string
            type:
              type: string
            value:
              type: number
        interest:
          $ref: '#/components/schemas/Interest'
          description: Day interest, in percentage or amount, charged if customer pays after the due date. Default value = 0.00 (0%)
          properties:
            date:
              type: string
            type:
              type: string
            value:
              type: number
        overdueDate:
          format: date
          description: How date the payment slip is canceled and can not be paid anymore. Default value = Due date + 30 Days
          type: string
        divergentAmountType:
          description: |
            Authorization in the divergent amount.

            |Code |Description|
            |----------|:-------------|
            |1|Any amount|
            |2|Between min and max|
            |3|Not accept payment with different amount|
            |4|Only min amount|
          default: 2
          enum:
            - '1'
            - '2'
            - '3'
            - '4'
          type: integer
        amountLimit:
          description: Amount Limit information.
          type: object
          properties:
            minPercentAmountType:
              description: |
                Minimum charge type.

                |Code |Description|
                |----------|:-------------|
                |V|Amount|
                |P|Percent|
              enum:
                - V
                - P
              type: string
            minPercentAmount:
              description: Minimum charge value.
              type: number
            maxPercentAmountType:
              description: |
                Maximum charge type.

                |Code |Description|
                |----------|:-------------|
                |V|Amount|
                |P|Percent|
              enum:
                - V
                - P
              type: string
            maxPercentAmount:
              description: Maximum charge value.
              type: number
        guarantorDrawer:
          $ref: '#/components/schemas/GuarantorDrawer'
          description: ''
        ourNumber:
          description: Our payment slip number.
          type: string
        documentNumber:
          description: Document Number.
          maxLength: 15
          type: string
        description:
          description: Text to be displayed in your statement.
          type: string
        tags:
          description: A list of tags.
          type: array
          items:
            type: string
        discounts:
          $ref: '#/components/schemas/Discount'
          description: List of discount amount or percentage if customer pays until informed date.
      example:
        clientRequestId: bb6fb4eb-f0f7-46d7-a2b3-eba424f6dca4
        customer:
          city: string
          numberComplement: Sala 101 3 andar
          neighborhood: Itaim Bibi
          name: Alex
          zipCode: 12345678
          number: 13A
          street: Av. Faria Lima, 0001
          stateCode: string
          taxId: '61718265298'
        description: string
        tags:
          - Warsupply
          - Invoice_1234
        amount: 400025
        interest:
          date: '2020-08-20'
          value: 1.1
          code: AMOUNT_CALENDAR_DAYS
        fine:
          date: '2020-08-20'
          value: 1.1
          code: FIXED_VALUE
        discounts:
          discount1:
            date: '2020-07-01'
            value: 15
            type: '2'
          discount2:
            date: '2020-07-10'
            value: 10
            type: '2'
          discount3:
            date: '2020-07-15'
            value: 5
            type: '2'
        dueDate: '2020-07-20'
        divergentAmountType: 2
        amountLimit:
          minPercentAmountType: V
          minPercentAmount: 125.65
          maxPercentAmountType: V
          maxPercentAmount: 4000.25
        ourNumber: '97136922411752832424'
        guarantorDrawer:
          documentType: 1
          documentNumber: 26671395934
          name: Tereza Silvana
        overdueDate: '2020-07-30'
        documentNumber: '13561919841022'
    Tax:
      description: Foreign Exchange trade tax.
      type: object
      properties:
        iof:
          description: Iof trade tax id
          type: string
        cide:
          description: Cide trade tax id
          type: string
        cofs:
          description: Cofs trade tax id
          type: string
        fee:
          description: Fee trade tax id
          type: string
        iss:
          description: Iss trade tax id
          type: string
        pis:
          description: Pis trade tax id
          type: string
    ForeignExchangeNettingStatus:
      description: |
        The state of the netting, which at the time of its creation will be CREATED.
      enum:
        - CREATED
        - AWAITING_SWIFT_CODE
        - ENQUEUED
        - PROCESSING
        - SETTLED
        - INSUFFICIENT_BALANCE
        - ERROR
        - CANCELED
      type: string
    ForeignExchangeNettingWebhook:
      description: Foreign Exchange Netting webhook body.
      type: object
      properties:
        pactualId:
          $ref: '#/components/schemas/PactualId'
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        createTimestamp:
          $ref: '#/components/schemas/CreateTimestamp'
        lastUpdateTimestamp:
          $ref: '#/components/schemas/LastUpdateTimestamp'
        entity:
          $ref: '#/components/schemas/Entity'
        status:
          $ref: '#/components/schemas/ForeignExchangeNettingStatus'
        body:
          $ref: '#/components/schemas/ForeignExchangeNettingWebhookBody'
        tags:
          $ref: '#/components/schemas/Tags'
    FxNettingSwiftRequestBody:
      title: Root Type for FxNettingSwiftRequestBody
      description: ''
      required:
        - pactualId
        - swiftReference
      type: object
      properties:
        pactualId:
          description: Netting entity pactualId
          type: string
        swiftReference:
          description: Swift Field 21
          type: string
      example:
        pactualId: e768b05e-3c41-4c6b-9c5d-2c2f02eb99ed
        swiftReference: NTG18
    FxNettingSwiftReponse:
      title: Root Type for FxNettingSwiftReponse
      description: ''
      type: object
      properties:
        version:
          description: The API current version
          type: string
        status:
          format: int32
          description: The HTTP status code.
          type: integer
        body:
          description: Data Object
          type: object
          properties:
            pactualId:
              description: The record primary key, used for identify the record for further operations, is a string representation of a GUID (UUID)
              type: string
            clientRequestId:
              description: The sent clientRequestId
              type: string
            createTimestamp:
              description: The string representation of the Timestamp that the record was created (UTC)
              type: string
            lastUpdateTimestamp:
              description: The string representation of the Timestamp that the record was last updated (UTC)
              type: string
            entity:
              description: Contract Entity name.
              type: string
            status:
              description: The operation status.
              type: string
            body:
              description: Data object.
              type: object
              properties:
                totalQuotes:
                  format: double
                  description: The sum of the number of quotes from all netting aggregations
                  type: number
                meanTax:
                  format: double
                  description: The average price of the netting
                  type: number
                quoteCurrencyTotalAmount:
                  format: double
                  description: The average total value of the netting aggregations in quote currency
                  type: number
                baseCurrencyTotalAmoune:
                  format: double
                  description: The average total value of the netting aggregations in base currency
                  type: number
                settlementDate:
                  format: date-time
                  description: The netting settlement date
                  type: string
                accountId:
                  description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
                  type: string
                currency:
                  description: 3 digit currency code of the netting
                  type: string
                swiftReference:
                  description: Swift Field 21
                  type: string
                operationSide:
                  description: The direction of the netting
                  type: string
                movementIds:
                  description: The movementIds of the netting aggregations with the pactualIds of the netting aggregations
                  type: array
                  items:
                    $ref: '#/components/schemas/MovementIds'
            tags:
              description: The same Tags sent on the request
              type: array
              items: {}
      example:
        version: 0.1.0
        status: 200
        body:
          pactualId: 35fda7e1-f234-423c-8ad3-a77ad8c97f7b
          clientRequestId: 62c85fe5-9a6c-46cf-b877-95fc1d3f39ef
          createTimestamp: '2023-07-27T03:10:58.848Z'
          lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
          entity: ForeignExchangeNetting
          status: SETTLED
          body:
            baseCurrencyTotalAmount: 1847
            movementIds:
              1fc646eb-aa91-c2b8-b002-b288485fc118: '4002275'
              abc27a94-eac3-4ab0-ba6d-3d015a6d7ea8: '4482928'
            accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
            operationSide: SELL
            meanTax: 4.945559
            settlementDate: '2024-01-17'
            SwiftReference: NTG18
            currency: USD
            quoteCurrencyTotalAmount: 9134.45
            totalQuotes: 1847
          tags: string
    ForeignExchangeNettingWebhookBody:
      description: Foreign Exchange Netting webhook body.
      type: object
      properties:
        totalQuotes:
          format: double
          description: The sum of the number of quotes from all netting aggregations
          type: number
        meanTax:
          format: double
          description: The average price of the netting
          type: number
        quoteCurrencyTotalAmount:
          format: double
          description: The average total value of the netting aggregations in quote currency
          type: number
        baseCurrencyTotalAmoune:
          format: double
          description: The average total value of the netting aggregations in base currency
          type: number
        settlementDate:
          format: date-time
          description: The netting settlement date
          type: string
        accountId:
          description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
          type: string
        currency:
          description: 3 digit currency code of the netting
          type: string
        swiftReference:
          description: Swift Field 21
          type: string
        operationSide:
          description: The direction of the netting
          type: string
        movementIds:
          description: Array of dictionaries whose keys are the pactualIds of the netting aggregations and the value are the movementIds of the netting aggregations
          type: array
          items:
            $ref: '#/components/schemas/MovementIds'
    MovementIds:
      description: Netting movementIds
      type: object
      properties:
        movementId:
          description: Dictionary whose key is the pactualId of the aggregation and the value is the movementId of the aggregation
          type: string
      example:
        clientRequestId: guid/uuid
    PaymentSlipSplitRequest:
      title: BillRequest-Long
      required:
        - amount
        - clientRequestId
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentSlipRequest'
        - type: object
          properties:
            cashinSplit:
              $ref: '#/components/schemas/CspCashinSplitRequest'
    PaymentSlipPixSplitRequest:
      description: ''
      required:
        - PaymentSlip
        - Pix
        - clientRequestId
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentSlipPixRequest'
        - type: object
          properties:
            cashinSplit:
              $ref: '#/components/schemas/CspCashinSplitRequest'
    PaymentSlipPixSplitShortRequest:
      description: ''
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentSlipPixShortRequest'
        - type: object
          properties:
            cashinSplit:
              $ref: '#/components/schemas/CspCashinSplitRequest'
    PaymentSlipSplitGetResponse:
      description: ''
      required:
        - version
        - status
        - body
      type: object
      properties:
        version:
          description: Api version.
          type: string
        status:
          description: Http status code.
          type: integer
        body:
          $ref: '#/components/schemas/PaymentSlipSplitResponse'
          description: ''
    PaymentSlipSplitResponse:
      description: ''
      required:
        - pactualId
        - clientRequestId
        - createTimestamp
        - lastUpdateTimestamp
        - status
        - body
        - entity
        - tags
      type: object
      properties:
        pactualId:
          description: Unique resource Identifier (Uuid) generated by api.
          type: string
        clientRequestId:
          description: Unique identifier provided by the client. Can be used in response corelation.
          type: string
        createTimestamp:
          format: date-time
          description: Respects the GMT timezone
          type: string
        lastUpdateTimestamp:
          format: date-time
          description: Respects the GMT timezone
          type: string
        status:
          description: The current status. More information about status <b><a href="#section/Payment-Slip-Status">here</a></b>.
          type: string
        body:
          $ref: '#/components/schemas/PaymentSlipSplit'
          description: PaymentSlip Information.
        entity:
          description: The name of entity.
          type: string
        tags:
          description: A list of tags.
          type: array
          items:
            type: string
        errorCode:
          description: The error code.
          type: string
        errorDescription:
          description: The error description.
          type: string
    PaymentSlipSplit:
      title: BillRequest-Long
      description: PaymentSlip Information.
      required:
        - amount
      type: object
      allOf:
        - $ref: '#/components/schemas/PaymentSlip'
        - type: object
          properties:
            cashinSplit:
              $ref: '#/components/schemas/CspCashinSplitResponse'
    CspProcessingScheduleListSucessApiResponseEnvelope:
      description: Split Processing Schedule Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              type: array
              items:
                $ref: '#/components/schemas/CspProcessingSchedule'
    CspProcessingSchedule:
      description: Amount range that will be used as a rule trigger filter. Based on cash in amount.
      required:
        - dayOfWeek
        - processingHours
      type: object
      properties:
        dayOfWeek:
          $ref: '#/components/schemas/DayOfWeek'
        processingHours:
          description: List of times for automatic payment processing. The time must be in the format "HH:mm" and the minutes must be multiples of 10.
          type: array
          items:
            type: string
      example:
        dayOfWeek: Monday
        processingHours:
          - '15:20'
          - '16:30'
          - '16:50'
    DayOfWeek:
      description: Day of Week.
      enum:
        - Sunday
        - Monday
        - Tuesday
        - Wednesday
        - Thursday
        - Friday
        - Saturday
      type: string
    CspCashinSplitResponse:
      title: CashinSplit.
      description: CashinSplit Information.
      required:
        - ruleType
        - rulePactualId
      type: object
      properties:
        ruleType:
          enum:
            - MANAGED_RULE
            - ONE_SHOT_RULE
          type: string
        rulePactualId:
          format: uuid
          description: Unique resource identificator (uuid) of Rule.
          type: string
      example:
        ruleType: ONE_SHOT_RULE
        rulePactualId: 023297b6-c810-45cf-b879-c25f92ccce8f
    CspCashinSplitRequest:
      title: CashinSplit.
      description: CashinSplit details.
      required:
        - ruleType
      type: object
      properties:
        ruleType:
          enum:
            - MANAGED_RULE
            - ONE_SHOT_RULE
          type: string
        oneShotRule:
          $ref: '#/components/schemas/CspOneShotRuleReq'
        rulePactualId:
          format: uuid
          description: Unique resource identificator (uuid) of Rule (required if ruleType = MANAGED_RULE).
          type: string
      example:
        ruleType: ONE_SHOT_RULE
        oneShotRule:
          allowPartiallyProcess: false
          splitters:
            - type: PIX
              order: 1
              amountDefinition:
                percentile: 0.15
              addDaysToPayment: 0
              disallowAggregation: false
              automaticApproval: false
              creditAccount:
                name: Thomas A. Anderson
                taxId: 32176544561
                accountType: CACC
                account: 321456
                branch: 87
                bank: 123
                ispb: 98765432
            - type: Transfer
              order: 2
              amountDefinition:
                fixedAmount: 1000
              addDaysToPayment: 5
              disallowAggregation: true
              automaticApproval: false
              creditAccount:
                name: John Wick
                taxId: 29876543212
                accountType: CACC
                account: 654987
                branch: 37
                bank: 1
            - type: PIX
              order: 999
              amountDefinition:
                remainderAmount: true
              addDaysToPayment: 0
              disallowAggregation: false
              automaticApproval: true
              pixKey: '09876543210'
    CspOneShotRuleReq:
      title: OneShot Rule Entity.
      description: OneShot Rule split details (required if ruleType = ONE_SHOT_RULE).
      required:
        - splitters
      type: object
      properties:
        splitters:
          description: Splitters of rule.
          type: array
          items:
            $ref: '#/components/schemas/CspRuleSplitter'
        allowPartiallyProcess:
          description: 'Defines whether the rule will be allowed to be processed even when the total amount of payment transactions generated by the splitters is greater than the cash in amount. Important: Payment transactions that exceed the total (according to the order) will be ignored.'
          type: boolean
      example:
        allowPartiallyProcess: false
        splitters:
          - type: PIX
            order: 1
            amountDefinition:
              percentile: 0.15
            addDaysToPayment: 0
            disallowAggregation: false
            automaticApproval: false
            creditAccount:
              name: Thomas A. Anderson
              taxId: 32176544561
              accountType: CACC
              account: 321456
              branch: 87
              bank: 123
              ispb: 98765432
          - type: Transfer
            order: 2
            amountDefinition:
              fixedAmount: 1000
            addDaysToPayment: 5
            disallowAggregation: true
            automaticApproval: false
            creditAccount:
              name: John Wick
              taxId: 29876543212
              accountType: CACC
              account: 654987
              branch: 37
              bank: 1
          - type: PIX
            order: 999
            amountDefinition:
              remainderAmount: true
            addDaysToPayment: 0
            disallowAggregation: false
            automaticApproval: true
            pixKey: '09876543210'
    CspAccountType:
      description: The account type (CACC = Current Account, SLRY = Salary Account, SVGS = Saving Account, TRAN = Transactional Account).
      enum:
        - CACC
        - SLRY
        - SVGS
        - TRAN
      type: string
    CspAmountDefinition:
      description: Definition of amount of payment transaction. Only one of the options (fixedAmount, percentile or remainderAmount) for this attribute must be defined.
      type: object
      properties:
        fixedAmount:
          nullable: true
          format: int64
          description: 'A fixed amount for creating the payment transaction derived from cash in. Format in cents. Example: 100 = R$1.00'
          type: integer
        percentile:
          nullable: true
          format: double
          description: 'Percentile that will be used to calculate the value of the payment transaction derived from cash in. Format in decimal. Example: 0.15 = 15% (if the cash in value is R$100.00, the payment transaction will be R$15.00)'
          type: number
        remainderAmount:
          nullable: true
          description: Defines that the payment transaction will be the remaining amount after processing the cash in split
          type: boolean
    CspAmountRange:
      description: Amount range that will be used as a rule trigger filter. Based on cash in amount.
      required:
        - maxAmount
        - minAmount
      type: object
      properties:
        minAmount:
          format: int64
          description: Minimun amount
          type: integer
        maxAmount:
          format: int64
          description: Maximum amount
          type: integer
    CspCreditAccount:
      required:
        - account
        - accountType
        - name
        - taxId
      type: object
      properties:
        name:
          description: The acocunt's name.
          type: string
        taxId:
          description: Tax Identification - CPF (11 digits formatted) or CNPJ (14 digits formatted), fill with zeros left of the number if necessary.
          type: string
        accountType:
          $ref: '#/components/schemas/CspAccountType'
        account:
          description: The account number.
          type: string
        branch:
          description: The branch number.
          type: string
        bank:
          description: The bank code.
          type: string
        ispb:
          description: ISPB (Brazilian Payments System Identifier) of the SPI (Instant Payments System) participant with numbers only.
          type: string
    CspManagedRule:
      description: Managed Rule Entity
      required:
        - splitters
        - priority
      type: object
      properties:
        description:
          nullable: true
          description: Description of Managed Rule
          type: string
        priority:
          format: int32
          description: Rule priority over others when there are several that met the trigger filters.
          type: integer
        triggers:
          description: List of settings that trigger rule processing to process splitters and create payment transactions.
          type: array
          items:
            nullable: true
            $ref: '#/components/schemas/CspRuleTrigger'
        allowPartiallyProcess:
          description: 'Defines whether the rule will be allowed to be processed even when the total amount of payment transactions generated by the splitters is greater than the cash in amount. Important: Payment transactions that exceed the total (according to the order) will be ignored.'
          default: false
          type: boolean
        splitters:
          description: List of splitters settings for creating a payment transaction.
          type: array
          items:
            $ref: '#/components/schemas/CspRuleSplitter'
      example:
        description: Product 001 Sales
        priority: 1
        allowPartiallyProcess: false
        triggers:
          - type: Paymentslip
            amountRange:
              minAmount: 0
              maxAmount: 9000
          - type: PIX
            taxId: '12345678901'
          - type: Transfer
            amountRange:
              minAmount: 0
              maxAmount: 999999999
            debitAccount:
              account: 341987
              branch: 146
              bank: 341
        splitters:
          - type: PIX
            order: 1
            amountDefinition:
              percentile: 0.15
            addDaysToPayment: 0
            disallowAggregation: false
            automaticApproval: false
            creditAccount:
              name: Thomas A. Anderson
              taxId: 32176544561
              accountType: CACC
              account: 321456
              branch: 87
              bank: 123
              ispb: 98765432
          - type: Transfer
            order: 2
            amountDefinition:
              fixedAmount: 1000
            addDaysToPayment: 5
            disallowAggregation: true
            automaticApproval: false
            creditAccount:
              name: John Wick
              taxId: 29876543212
              accountType: CACC
              account: 654987
              branch: 37
              bank: 1
          - type: PIX
            order: 999
            amountDefinition:
              remainderAmount: true
            addDaysToPayment: 0
            disallowAggregation: false
            automaticApproval: true
            pixKey: '09876543210'
    CspManagedRuleEntityEnvelope:
      description: Split Managed Rule Entity
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/EntityEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CspManagedRule'
      example:
        pactualId: 023297b6-c810-45cf-b879-c25f92ccce8f
        clientRequestId: CLIREQID-20190824-0000001
        createTimestamp: '2019-08-24T14:15:22Z'
        lastUpdateTimestamp: '2019-08-24T14:15:22Z'
        status: ENABLED
        entity: CashinSplitManagedRule
        tags:
          - tag1
          - tag2
        body:
          description: Product 001 Sales
          priority: 1
          allowPartiallyProcess: false
          triggers:
            - type: Paymentslip
              amountRange:
                minAmount: 0
                maxAmount: 9000
            - type: PIX
              taxId: '12345678901'
            - type: Transfer
              amountRange:
                minAmount: 0
                maxAmount: 999999999
              debitAccount:
                account: 341987
                branch: 146
                bank: 341
          splitters:
            - type: PIX
              order: 1
              amountDefinition:
                percentile: 0.15
              addDaysToPayment: 0
              disallowAggregation: false
              automaticApproval: false
              creditAccount:
                name: Thomas A. Anderson
                taxId: 32176544561
                accountType: CACC
                account: 321456
                branch: 87
                bank: 123
                ispb: 98765432
            - type: Transfer
              order: 2
              amountDefinition:
                fixedAmount: 1000
              addDaysToPayment: 5
              disallowAggregation: true
              automaticApproval: false
              creditAccount:
                name: John Wick
                taxId: 29876543212
                accountType: CACC
                account: 654987
                branch: 37
                bank: 1
            - type: PIX
              order: 999
              amountDefinition:
                remainderAmount: true
              addDaysToPayment: 0
              disallowAggregation: false
              automaticApproval: true
              pixKey: '09876543210'
    CspManagedRuleEntityEnvelopeSucessApiResponseEnvelope:
      description: Split Managed Rule Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CspManagedRuleEntityEnvelope'
    CspManagedRuleEntityEnvelopeIEnumerableSucessApiResponseEnvelope:
      description: Many Split Managed Rule Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              type: array
              items:
                $ref: '#/components/schemas/CspManagedRuleEntityEnvelope'
    CspManagedRuleRequest:
      required:
        - clientRequestId
        - priority
        - splitters
      type: object
      properties:
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        description:
          nullable: true
          description: Description of Managed Rule
          type: string
        priority:
          format: int32
          description: Rule priority over others when there are several that met the trigger filters.
          type: integer
        triggers:
          description: Trigger of rule.
          type: array
          items:
            nullable: true
            $ref: '#/components/schemas/CspRuleTrigger'
        splitters:
          description: Splitters of rule.
          type: array
          items:
            $ref: '#/components/schemas/CspRuleSplitter'
        allowPartiallyProcess:
          description: 'Defines whether the rule will be allowed to be processed even when the total amount of payment transactions generated by the splitters is greater than the cash in amount. Important: Payment transactions that exceed the total (according to the order) will be ignored.'
          type: boolean
        tags:
          $ref: '#/components/schemas/Tags'
      example:
        clientRequestId: CLIREQID-20190824-0000001
        description: Product 001 Sales
        priority: 1
        allowPartiallyProcess: false
        triggers:
          - type: Paymentslip
            amountRange:
              minAmount: 0
              maxAmount: 9000
          - type: PIX
            taxId: '12345678901'
          - type: Transfer
            amountRange:
              minAmount: 0
              maxAmount: 999999999
            debitAccount:
              account: 341987
              branch: 146
              bank: 341
        splitters:
          - type: PIX
            order: 1
            amountDefinition:
              percentile: 0.15
            addDaysToPayment: 0
            disallowAggregation: false
            automaticApproval: false
            creditAccount:
              name: Thomas A. Anderson
              taxId: 32176544561
              accountType: CACC
              account: 321456
              branch: 87
              bank: 123
              ispb: 98765432
          - type: Transfer
            order: 2
            amountDefinition:
              fixedAmount: 1000
            addDaysToPayment: 5
            disallowAggregation: true
            automaticApproval: false
            creditAccount:
              name: John Wick
              taxId: 29876543212
              accountType: CACC
              account: 654987
              branch: 37
              bank: 1
          - type: PIX
            order: 999
            amountDefinition:
              remainderAmount: true
            addDaysToPayment: 0
            disallowAggregation: false
            automaticApproval: true
            pixKey: '09876543210'
        tags:
          - tag1
          - tag2
    CspManagedRuleUpdateRequest:
      required:
        - priority
        - splitters
      type: object
      properties:
        description:
          nullable: true
          description: Description of Managed Rule
          type: string
        priority:
          format: int32
          description: Rule priority over others when there are several that met the trigger filters.
          type: integer
        triggers:
          description: Trigger of rule.
          type: array
          items:
            nullable: true
            $ref: '#/components/schemas/CspRuleTrigger'
        splitters:
          description: Splitters of rule.
          type: array
          items:
            $ref: '#/components/schemas/CspRuleSplitter'
        allowPartiallyProcess:
          description: 'Defines whether the rule will be allowed to be processed even when the total amount of payment transactions generated by the splitters is greater than the cash in amount. Important: Payment transactions that exceed the total (according to the order) will be ignored.'
          type: boolean
      example:
        description: Product 001 Sales
        priority: 1
        allowPartiallyProcess: false
        triggers:
          - type: Paymentslip
            amountRange:
              minAmount: 0
              maxAmount: 9000
          - type: PIX
            taxId: '12345678901'
          - type: Transfer
            amountRange:
              minAmount: 0
              maxAmount: 999999999
            debitAccount:
              account: 341987
              branch: 146
              bank: 341
        splitters:
          - type: PIX
            order: 1
            amountDefinition:
              percentile: 0.15
            addDaysToPayment: 0
            disallowAggregation: false
            automaticApproval: false
            creditAccount:
              name: Thomas A. Anderson
              taxId: 32176544561
              accountType: CACC
              account: 321456
              branch: 87
              bank: 123
              ispb: 98765432
          - type: Transfer
            order: 2
            amountDefinition:
              fixedAmount: 1000
            addDaysToPayment: 5
            disallowAggregation: true
            automaticApproval: false
            creditAccount:
              name: John Wick
              taxId: 29876543212
              accountType: CACC
              account: 654987
              branch: 37
              bank: 1
          - type: PIX
            order: 999
            amountDefinition:
              remainderAmount: true
            addDaysToPayment: 0
            disallowAggregation: false
            automaticApproval: true
            pixKey: '09876543210'
    CspOneShotRule:
      description: OneShot Rule Entity
      required:
        - splitters
        - trigger
      type: object
      properties:
        allowPartiallyProcess:
          description: 'Defines whether the rule will be allowed to be processed even when the total amount of payment transactions generated by the splitters is greater than the cash in amount. Important: Payment transactions that exceed the total (according to the order) will be ignored.'
          type: boolean
        trigger:
          $ref: '#/components/schemas/CspTransactionTrigger'
        splitters:
          description: List of splitters settings for creating a payment transaction.
          type: array
          items:
            $ref: '#/components/schemas/CspRuleSplitter'
      example:
        allowPartiallyProcess: true
        trigger:
          type: Paymentslip
          transactionPactualId: a1818fa4-fe99-4de4-b516-cc29573dff10
        splitters:
          - type: PIX
            order: 1
            amountDefinition:
              percentile: 0.15
            addDaysToPayment: 0
            disallowAggregation: false
            automaticApproval: false
            creditAccount:
              name: Thomas A. Anderson
              taxId: 32176544561
              accountType: CACC
              account: 321456
              branch: 87
              bank: 123
              ispb: 98765432
          - type: Transfer
            order: 2
            amountDefinition:
              fixedAmount: 1000
            addDaysToPayment: 5
            disallowAggregation: true
            automaticApproval: false
            creditAccount:
              name: John Wick
              taxId: 29876543212
              accountType: CACC
              account: 654987
              branch: 37
              bank: 1
          - type: PIX
            order: 999
            amountDefinition:
              remainderAmount: true
            addDaysToPayment: 0
            disallowAggregation: false
            automaticApproval: true
            pixKey: '09876543210'
    CspOneShotRuleEntityEnvelope:
      description: Split OneShot Rule Entity
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/EntityEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CspOneShotRule'
      example:
        pactualId: 023297b6-c810-45cf-b879-c25f92ccce8f
        clientRequestId: CLIREQID-20190824-0000001
        createTimestamp: '2019-08-24T14:15:22Z'
        lastUpdateTimestamp: '2019-08-24T14:15:22Z'
        status: ENABLED
        entity: CashinSplitOneshotRule
        tags:
          - tag1
          - tag2
        body:
          allowPartiallyProcess: true
          trigger:
            type: Paymentslip
            transactionPactualId: a1818fa4-fe99-4de4-b516-cc29573dff10
          splitters:
            - type: PIX
              order: 1
              amountDefinition:
                percentile: 0.15
              addDaysToPayment: 0
              disallowAggregation: false
              automaticApproval: false
              creditAccount:
                name: Thomas A. Anderson
                taxId: 32176544561
                accountType: CACC
                account: 321456
                branch: 87
                bank: 123
                ispb: 98765432
            - type: Transfer
              order: 2
              amountDefinition:
                fixedAmount: 1000
              addDaysToPayment: 5
              disallowAggregation: true
              automaticApproval: false
              creditAccount:
                name: John Wick
                taxId: 29876543212
                accountType: CACC
                account: 654987
                branch: 37
                bank: 1
            - type: PIX
              order: 999
              amountDefinition:
                remainderAmount: true
              addDaysToPayment: 0
              disallowAggregation: false
              automaticApproval: true
              pixKey: '09876543210'
    CspOneShotRuleEntityEnvelopeSucessApiResponseEnvelope:
      description: Split Managed Rule Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CspOneShotRuleEntityEnvelope'
    CspOneShotRuleRequest:
      required:
        - clientRequestId
        - splitters
        - trigger
      type: object
      properties:
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        trigger:
          $ref: '#/components/schemas/CspTransactionTrigger'
          description: Trigger of rule.
        splitters:
          description: Splitters of rule.
          type: array
          items:
            $ref: '#/components/schemas/CspRuleSplitter'
        allowPartiallyProcess:
          description: 'Defines whether the rule will be allowed to be processed even when the total amount of payment transactions generated by the splitters is greater than the cash in amount. Important: Payment transactions that exceed the total (according to the order) will be ignored.'
          type: boolean
        tags:
          $ref: '#/components/schemas/Tags'
    CspPaymentSummaryResponse:
      description: Summary by payment date and debit account
      type: object
      properties:
        paymentDate:
          format: date
          description: Payment date
          pattern: yyyy-MM-dd
          type: string
        debitAccount:
          $ref: '#/components/schemas/CspTranAccount'
        debitAccountId:
          nullable: true
          format: uuid
          description: AccountId (BaaS Id) of cashin credit account
          type: string
        summaryByType:
          description: List of "Summary by payment type"
          type: array
          items:
            nullable: true
            $ref: '#/components/schemas/CspPaymentSummaryTypeResponse'
        totalAmount:
          format: int64
          description: Amount sum of transactions for payment.
          type: integer
        totalCount:
          format: int64
          description: Number of transactions for payment.
          type: integer
        pendingAmount:
          format: int64
          description: Amount sum of pending transactions for payment. (totalAmount - (approvedAmount + completedAmount))
          type: integer
        pendingCount:
          format: int64
          description: Number of pending transactions for payment. (totalCount - (approvedCount + completedCount))
          type: integer
        approvedAmount:
          format: int64
          description: Amount sum of transactions with status 'APPROVED' for payment. (approvedAggrAmount + approvedNotAggrAmount)
          type: integer
        approvedCount:
          format: int64
          description: Number of transactions with status 'APPROVED' for payment. (approvedAggrCount + approvedNotAggrCount)
          type: integer
        completedAmount:
          format: int64
          description: Amount sum of transactions with status 'COMPLETED' that were paid. (completedAggrAmount + completedNotAggrAmount)
          type: integer
        completedCount:
          format: int64
          description: Number of transactions with status 'COMPLETED' that were paid. (completedAggrCount + completedNotAggrCount)
          type: integer
        totalAggrAmount:
          format: int64
          description: Amount sum of transactions that will be aggregated for payment.
          type: integer
        totalNotAggrAmount:
          format: int64
          description: Amount sum of transactions that will not be aggregated for payment.
          type: integer
        totalAggrCount:
          format: int64
          description: Number of transactions that will be aggregated for payment.
          type: integer
        totalNotAggrCount:
          format: int64
          description: Number of transactions that will not be aggregated for payment.
          type: integer
        pendingAggrAmount:
          format: int64
          description: Amount sum of pending transactions that will be aggregated for payment. (totalAggrAmount - (approvedAggrAmount + completedAggrAmount))
          type: integer
        pendingNotAggrAmount:
          format: int64
          description: Amount sum of pending transactions that will not be aggregated for payment. (totalNotAggrAmount - (approvedNotAggrAmount + completedNotAggrAmount))
          type: integer
        pendingAggrCount:
          format: int64
          description: Number of pending transactions that will be aggregated for payment. (totalAggrCount - (approvedAggrCount + completedAggrCount))
          type: integer
        pendingNotAggrCount:
          format: int64
          description: Number of pending transactions that will not be aggregated for payment. (totalNotAggrCount - (approvedNotAggrCount + completedNotAggrCount))
          type: integer
        approvedAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'APPROVED' that will be aggregated for payment.
          type: integer
        approvedNotAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'APPROVED' that will not be aggregated for payment.
          type: integer
        approvedAggrCount:
          format: int64
          description: Number of transactions with status 'APPROVED' that will be aggregated for payment.
          type: integer
        approvedNotAggrCount:
          format: int64
          description: Number of transactions with status 'APPROVED' that will not be aggregated for payment.
          type: integer
        completedAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'COMPLETED' that were aggregated for payment.
          type: integer
        completedNotAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'COMPLETED' that were not aggregated for payment.
          type: integer
        completedAggrCount:
          format: int64
          description: Number of transactions with status 'COMPLETED' that were aggregated for payment.
          type: integer
        completedNotAggrCount:
          format: int64
          description: Number of transactions with status 'COMPLETED' that were not aggregated for payment.
          type: integer
    CspPaymentSummaryResponseIEnumerableSucessApiResponseEnvelope:
      description: Payment Summary Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              type: array
              items:
                $ref: '#/components/schemas/CspPaymentSummaryResponse'
    CspPaymentSummaryTypeResponse:
      description: Summary by payment type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CspSplitTransactionType'
        paymentSummary:
          description: List of "Summary by credit account"
          type: array
          items:
            nullable: true
            $ref: '#/components/schemas/CspPaymentTransactionSummary'
        totalAmount:
          format: int64
          description: Amount sum of transactions for payment.
          type: integer
        totalCount:
          format: int64
          description: Number of transactions for payment.
          type: integer
        pendingAmount:
          format: int64
          description: Amount sum of pending transactions for payment. (totalAmount - (approvedAmount + completedAmount))
          type: integer
        pendingCount:
          format: int64
          description: Number of pending transactions for payment. (totalCount - (approvedCount + completedCount))
          type: integer
        approvedAmount:
          format: int64
          description: Amount sum of transactions with status 'APPROVED' for payment. (approvedAggrAmount + approvedNotAggrAmount)
          type: integer
        approvedCount:
          format: int64
          description: Number of transactions with status 'APPROVED' for payment. (approvedAggrCount + approvedNotAggrCount)
          type: integer
        completedAmount:
          format: int64
          description: Amount sum of transactions with status 'COMPLETED' that were paid. (completedAggrAmount + completedNotAggrAmount)
          type: integer
        completedCount:
          format: int64
          description: Number of transactions with status 'COMPLETED' that were paid. (completedAggrCount + completedNotAggrCount)
          type: integer
        totalAggrAmount:
          format: int64
          description: Amount sum of transactions that will be aggregated for payment.
          type: integer
        totalNotAggrAmount:
          format: int64
          description: Amount sum of transactions that will not be aggregated for payment.
          type: integer
        totalAggrCount:
          format: int64
          description: Number of transactions that will be aggregated for payment.
          type: integer
        totalNotAggrCount:
          format: int64
          description: Number of transactions that will not be aggregated for payment.
          type: integer
        pendingAggrAmount:
          format: int64
          description: Amount sum of pending transactions that will be aggregated for payment. (totalAggrAmount - (approvedAggrAmount + completedAggrAmount))
          type: integer
        pendingNotAggrAmount:
          format: int64
          description: Amount sum of pending transactions that will not be aggregated for payment. (totalNotAggrAmount - (approvedNotAggrAmount + completedNotAggrAmount))
          type: integer
        pendingAggrCount:
          format: int64
          description: Number of pending transactions that will be aggregated for payment. (totalAggrCount - (approvedAggrCount + completedAggrCount))
          type: integer
        pendingNotAggrCount:
          format: int64
          description: Number of pending transactions that will not be aggregated for payment. (totalNotAggrCount - (approvedNotAggrCount + completedNotAggrCount))
          type: integer
        approvedAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'APPROVED' that will be aggregated for payment.
          type: integer
        approvedNotAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'APPROVED' that will not be aggregated for payment.
          type: integer
        approvedAggrCount:
          format: int64
          description: Number of transactions with status 'APPROVED' that will be aggregated for payment.
          type: integer
        approvedNotAggrCount:
          format: int64
          description: Number of transactions with status 'APPROVED' that will not be aggregated for payment.
          type: integer
        completedAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'COMPLETED' that were aggregated for payment.
          type: integer
        completedNotAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'COMPLETED' that were not aggregated for payment.
          type: integer
        completedAggrCount:
          format: int64
          description: Number of transactions with status 'COMPLETED' that were aggregated for payment.
          type: integer
        completedNotAggrCount:
          format: int64
          description: Number of transactions with status 'COMPLETED' that were not aggregated for payment.
          type: integer
    CspPaymentTransactionSummary:
      description: Summary by payment date, payment type and credit account
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CspSplitTransactionType'
        paymentDate:
          format: date
          description: Payment date
          pattern: yyyy-MM-dd
          type: string
        pixKey:
          nullable: true
          description: PIX key used for payment. (Only when the payment type is PIX)
          type: string
        creditAccount:
          $ref: '#/components/schemas/CspSplitterAccount'
        debitAccount:
          $ref: '#/components/schemas/CspTranAccount'
        debitAccountId:
          format: uuid
          description: AccountId (BaaS Id) of cashin credit account
          type: string
        totalAggrAmount:
          format: int64
          description: Amount sum of transactions that will be aggregated for payment.
          type: integer
        totalNotAggrAmount:
          format: int64
          description: Amount sum of transactions that will not be aggregated for payment.
          type: integer
        totalAggrCount:
          format: int64
          description: Number of transactions that will be aggregated for payment.
          type: integer
        totalNotAggrCount:
          format: int64
          description: Number of transactions that will not be aggregated for payment.
          type: integer
        approvedAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'APPROVED' that will be aggregated for payment.
          type: integer
        approvedNotAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'APPROVED' that will not be aggregated for payment.
          type: integer
        approvedAggrCount:
          format: int64
          description: Number of transactions with status 'APPROVED' that will be aggregated for payment.
          type: integer
        approvedNotAggrCount:
          format: int64
          description: Number of transactions with status 'APPROVED' that will not be aggregated for payment.
          type: integer
        completedAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'COMPLETED' that were aggregated for payment.
          type: integer
        completedNotAggrAmount:
          format: int64
          description: Amount sum of transactions with status 'COMPLETED' that were not aggregated for payment.
          type: integer
        completedAggrCount:
          format: int64
          description: Number of transactions with status 'COMPLETED' that were aggregated for payment.
          type: integer
        completedNotAggrCount:
          format: int64
          description: Number of transactions with status 'COMPLETED' that were not aggregated for payment.
          type: integer
    CspProcessPayment:
      description: Process Payment Information (Only when approval of transaction processing was requested.)
      type: object
      properties:
        requestId:
          format: uuid
          description: Id of approval request
          type: string
        requestDate:
          format: date-time
          description: Approval request date
          pattern: yyyy-MM-ddTHH:mm:ssZ
          type: string
        transactionClientRequestId:
          nullable: true
          description: ClientRequestId of the generated payment
          type: string
        transactionPactualId:
          nullable: true
          format: uuid
          description: PactualId of the generated payment
          type: string
    CspTriggerAccount:
      description: Account information referring to the sender of the cash in (if it exists)
      required:
        - branch
        - account
      type: object
      properties:
        account:
          description: The account number.
          type: string
        branch:
          description: The branch number.
          type: string
        bank:
          description: The bank code.
          type: string
        ispb:
          description: ISPB (Brazilian Payments System Identifier) of the SPI (Instant Payments System) participant with numbers only.
          type: string
    CspSplitterAccount:
      description: Credit account used for payment. (Required when the PIX key is null)
      allOf:
        - $ref: '#/components/schemas/CspCreditAccount'
        - type: object
    CspRuleSplitter:
      description: Splitter Settings for creating a payment transaction.
      required:
        - amountDefinition
        - order
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CspSplitTransactionType'
        order:
          format: int32
          description: Sequence order that the splitter will be processed. Important when "allowPartiallyProcess" is enabled for rule.
          type: integer
        amountDefinition:
          $ref: '#/components/schemas/CspAmountDefinition'
        addDaysToPayment:
          format: int32
          description: Number of days that will be added, based on the cash in processing date, to define the effective date of the payment transaction.
          default: 0
          type: integer
        disallowAggregation:
          description: If "true" prevents the aggregation of payment transactions at the time of payment execution.
          default: false
          type: boolean
        automaticApproval:
          description: Defines whether the payment transaction generated by the splitter will be automatically approved.
          default: false
          type: boolean
        creditAccount:
          $ref: '#/components/schemas/CspSplitterAccount'
        pixKey:
          nullable: true
          description: PIX key used for payment. (Only when the payment type is PIX)
          type: string
    CspRuleTrigger:
      description: Settings that trigger rule processing to process splitters and create payment transactions.
      required:
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CspTriggerType'
        amountRange:
          $ref: '#/components/schemas/CspAmountRange'
        taxId:
          nullable: true
          description: TaxId referring to the sender of the cash in (if it exists)
          type: string
        creditAccountId:
          nullable: true
          format: uuid
          description: AccountId (BaaS Id) of cashin credit account
          type: string
        debitAccount:
          $ref: '#/components/schemas/CspTriggerAccount'
    CspRuleType:
      enum:
        - MANAGED_RULE
        - ONE_SHOT_RULE
      type: string
    CspSplitTransEntityStatus:
      enum:
        - PENDING
        - APPROVED
        - CANCELED
        - PROCESSING
        - PAYMENT_ENQUEUED
        - COMPLETED
        - ERROR
      type: string
    CspTranAccount:
      description: Debit account used for payment.
      allOf:
        - $ref: '#/components/schemas/CspCreditAccount'
        - type: object
    CspPaymentTransaction:
      description: Information about the payment transaction.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CspSplitTransactionType'
        paymentDate:
          format: date-time
          description: Payment date
          pattern: yyyy-MM-ddTHH:mm:ssZ
          type: string
        disallowAggregation:
          description: If "true" prevents the aggregation of payment transaction at the time of payment execution.
          type: boolean
        pixKey:
          nullable: true
          description: PIX key used for payment. (Only when the payment type is PIX)
          type: string
        creditAccount:
          $ref: '#/components/schemas/CspSplitterAccount'
        debitAccount:
          $ref: '#/components/schemas/CspTranAccount'
        amount:
          format: int64
          description: Payment amount
          type: integer
        processPayment:
          $ref: '#/components/schemas/CspProcessPayment'
    CspCashinTransaction:
      description: Information about the cash in that generated this payment transaction.
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CspTriggerType'
        entity:
          nullable: true
          description: Operation Entity
          type: string
        pactualId:
          format: uuid
          description: PactualId of cashin
          type: string
        accountId:
          format: uuid
          description: AccountId (BaaS Id) of cashin credit account
          type: string
        cashinDate:
          nullable: true
          format: date-time
          description: Date of cashin process
          pattern: yyyy-MM-ddTHH:mm:ssZ
          type: string
        endToEndId:
          nullable: true
          description: EndToEndIf of PIX (Only when the cashin type is PIX)
          type: string
    CspSplitTransaction:
      description: Payment Transaction Entity
      type: object
      properties:
        rulePactualId:
          format: uuid
          description: PactualId of the rule that generated this transaction
          type: string
        ruleType:
          $ref: '#/components/schemas/CspRuleType'
        cashin:
          $ref: '#/components/schemas/CspCashinTransaction'
        payment:
          $ref: '#/components/schemas/CspPaymentTransaction'
      example:
        rulePactualId: 023297b6-c810-45cf-b879-c25f92ccce8f
        ruleType: MANAGED_RULE
        cashin:
          type: Paymentslip
          entity: Paymentslip
          pactualId: 9636d6f1-3213-461c-a48c-87374ed195b6
          accountId: 3d07c219-0a88-45be-9cfc-91e9d095a1e9
          cashinDate: '2019-08-24T14:15:22Z'
        payment:
          type: PIX
          paymentDate: '2019-08-24T14:15:22Z'
          disallowAggregation: false
          pixKey: 98765432101
          debitAccount:
            name: Keanu Reeves
            taxId: 85987456254
            accountType: CACC
            account: 123456
            branch: 30
            bank: 208
          amount: 58756014
          processPayment:
            requestId: d385ab22-0f51-4b97-9ecd-b8ff3fd4fcb6
            requestDate: '2019-08-24T14:15:22Z'
            transactionClientRequestId: 573dff10-fe99-b516-4de4-a1818fa4cc29
            transactionPactualId: a1818fa4-fe99-4de4-b516-cc29573dff10
    CspSplitTransactionEntityEnvelope:
      description: Payment Transaction Entity
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/EntityEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CspSplitTransaction'
      example:
        pactualId: 123457b6-c810-45cf-b879-c25f92e45e5d
        clientRequestId: CID-20190824-00002
        createTimestamp: '2019-08-24T14:15:22Z'
        lastUpdateTimestamp: '2019-08-24T14:15:22Z'
        status: COMPLETED
        entity: CashinSplitTransaction
        tags:
          - tag1
          - tag2
        body:
          rulePactualId: 023297b6-c810-45cf-b879-c25f92ccce8f
          ruleType: MANAGED_RULE
          cashin:
            type: Paymentslip
            entity: Paymentslip
            pactualId: 9636d6f1-3213-461c-a48c-87374ed195b6
            accountId: 3d07c219-0a88-45be-9cfc-91e9d095a1e9
            cashinDate: '2019-08-24T14:15:22Z'
          payment:
            type: PIX
            paymentDate: '2019-08-24T14:15:22Z'
            disallowAggregation: false
            pixKey: 98765432101
            debitAccount:
              name: Keanu Reeves
              taxId: 85987456254
              accountType: CACC
              account: 123456
              branch: 30
              bank: 208
            amount: 58756014
            processPayment:
              requestId: d385ab22-0f51-4b97-9ecd-b8ff3fd4fcb6
              requestDate: '2019-08-24T14:15:22Z'
              transactionClientRequestId: 573dff10-fe99-b516-4de4-a1818fa4cc29
              transactionPactualId: a1818fa4-fe99-4de4-b516-cc29573dff10
    CspSplitTransactionEntityEnvelopeIEnumerableSucessApiResponseEnvelope:
      description: Many Payment Transactions Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              type: array
              items:
                $ref: '#/components/schemas/CspSplitTransactionEntityEnvelope'
    CspSplitTransactionEntityEnvelopeSucessApiResponseEnvelope:
      description: Payment Transaction Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CspSplitTransactionEntityEnvelope'
    CspSplitTransactionType:
      description: Type of payment transaction.
      enum:
        - PIX
        - Transfer
      type: string
    CspTransactionTrigger:
      description: Settings that trigger rule processing to process splitters and create payment transactions.
      required:
        - transactionPactualId
        - type
      type: object
      properties:
        type:
          $ref: '#/components/schemas/CspTriggerType'
        transactionPactualId:
          format: uuid
          description: PactualId of the transaction that originated the cashin
          type: string
    CspTriggerType:
      description: Type of transaction that originated the cashin.
      enum:
        - Paymentslip
        - PIX
        - Transfer
      type: string
    CcbIssuanceProductBaseListSucessApiResponseEnvelope:
      description: Many CCB Product Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              type: array
              items:
                $ref: '#/components/schemas/CcbIssuanceProductBase'
    CcbIssuanceProductBaseSucessApiResponseEnvelope:
      description: CCB Product Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CcbIssuanceProductBase'
    CcbIssuanceProductBase:
      description: CCB Issuance Response
      required:
        - productProfileId
        - calculationType
        - counterPartyType
        - iofFinance
        - minimumInstalments
        - maximumInstalments
        - minimumAmount
        - maximumAmount
        - minimumInterestRate
        - maximumInterestRate
      type: object
      properties:
        productProfileId:
          nullable: true
          type: string
        calculationType:
          nullable: true
          type: string
        counterPartyType:
          nullable: true
          type: string
        iofFinance:
          type: boolean
        minimumInstalments:
          format: int32
          type: integer
        maximumInstalments:
          format: int32
          type: integer
        minimumAmount:
          format: double
          type: number
        maximumAmount:
          format: double
          type: number
        minimumInterestRate:
          format: double
          type: number
        maximumInterestRate:
          format: double
          type: number
      additionalProperties: false
      example:
        productProfileId: CDB-BASIC-PF-PRICE
        calculationType: PRICE
        counterPartyType: PF
        iofFinance: true
        minimumInstalments: 12
        maximumInstalments: 48
        minimumAmount: 100
        maximumAmount: 1000000
        minimumInterestRate: 0.01
        maximumInterestRate: 0.1
    CcbIssuanceQuotationSucessApiResponseEnvelope:
      description: CCB Quotation Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CcbIssuanceQuotationEntityEnvelope'
    CcbIssuanceQuotationEntityEnvelope:
      description: CCB Quotation Entity
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/EntityEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CcbIssuanceQuotationEntity'
    CcbIssuanceQuotationEntity:
      required:
        - productProfileId
        - executionId
        - disbursementDate
        - firstPaymentDate
        - requestedAmount
      properties:
        productProfileId:
          nullable: true
          type: string
        executionId:
          nullable: true
          type: string
        simulationLastUpdate:
          nullable: true
          type: string
        disbursementDate:
          nullable: true
          type: string
        firstPaymentDate:
          nullable: true
          type: string
        requestedAmount:
          format: double
          type: number
        paymentDay:
          format: int32
          type: integer
        minimumInstalments:
          format: int32
          type: integer
        maximumInstalments:
          format: int32
          type: integer
        monthlyInterestRate:
          format: double
          type: number
        annualInterestRate:
          format: double
          type: number
        calculationType:
          nullable: true
          type: string
        valorizationMethod:
          nullable: true
          type: string
        counterPartyType:
          nullable: true
          type: string
        iofFinance:
          type: boolean
        amortizationFrequencyCode:
          nullable: true
          type: string
        interestIndexCode:
          nullable: true
          type: string
        interestFrequencyCode:
          nullable: true
          type: string
        operations:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/CcbIssuanceOperation'
      additionalProperties: false
    CcbIssuanceOperation:
      type: object
      properties:
        operationId:
          nullable: true
          type: string
        instalmentCount:
          format: int32
          type: integer
        amount:
          format: double
          type: number
        principal:
          format: double
          type: number
        disbursementAmount:
          format: double
          type: number
        instalmentAmount:
          format: double
          type: number
        cetRate:
          format: double
          type: number
        iof:
          $ref: '#/components/schemas/CcbIssuanceIofDetails'
        pprDisbursement:
          format: double
          type: number
        fees:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/CcbIssuanceFee'
        cashFlows:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/CcbIssuanceCashFlow'
      additionalProperties: false
    CcbIssuanceIofDetails:
      type: object
      properties:
        iofTotalAmount:
          format: double
          type: number
        dailyRate:
          format: double
          type: number
        additionalRate:
          format: double
          type: number
        pprIOF:
          format: double
          type: number
      additionalProperties: false
    CcbIssuanceFee:
      type: object
      properties:
        amount:
          format: double
          type: number
        pmt:
          format: double
          type: number
        grossValue:
          format: double
          type: number
        code:
          nullable: true
          type: string
        percentage:
          format: double
          type: number
        isFinanciable:
          type: boolean
        isGrossupable:
          type: boolean
        isDebitable:
          type: boolean
      additionalProperties: false
    CcbIssuanceCashFlow:
      type: object
      properties:
        index:
          format: int32
          type: integer
        balance:
          format: double
          type: number
        amortization:
          format: double
          type: number
        interestAmount:
          format: double
          type: number
        iofAmount:
          format: double
          type: number
        amount:
          format: double
          type: number
        mainTicket:
          format: double
          type: number
        incorporateDays:
          nullable: true
          type: string
        incorporationFlag:
          type: boolean
        startAccrual:
          nullable: true
          type: string
        endAccrual:
          nullable: true
          type: string
        paymentDate:
          nullable: true
          type: string
    CcbIssuanceQuotationRequest:
      required:
        - clientRequestId
        - productProfileId
        - amount
        - interestRate
        - minimumInstalments
        - maximumInstalments
      type: object
      properties:
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        productProfileId:
          nullable: true
          type: string
        amount:
          format: double
          type: number
        paymentDay:
          format: int32
          type: integer
        startDate:
          nullable: true
          type: string
        interestRate:
          format: double
          type: number
        minimumInstalments:
          format: int32
          type: integer
        maximumInstalments:
          format: int32
          type: integer
        tags:
          $ref: '#/components/schemas/Tags'
    CcbIssuanceProposalSucessApiResponseEnvelope:
      description: CCB Proposal Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CcbIssuanceProposalEntityEnvelope'
    CcbIssuanceProposalEntityEnvelope:
      description: CCB Proposal Entity
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/EntityEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CcbIssuanceProposalEntity'
    CcbIssuanceProposalEntity:
      type: object
      properties:
        quotationPactualId:
          format: uuid
          type: string
        quotationOperationId:
          nullable: true
          type: string
        quotationExecutionId:
          nullable: true
          type: string
        issuanceOperationId:
          nullable: true
          type: string
        issuanceTradeId:
          nullable: true
          type: string
        productProfileId:
          nullable: true
          type: string
        contract:
          nullable: true
          type: string
        borrowerInfo:
          $ref: '#/components/schemas/CcbIssuanceBorrowerInfo'
        financialInfo:
          $ref: '#/components/schemas/CcbIssuanceFinancialInfo'
        signInfo:
          $ref: '#/components/schemas/CcbIssuanceSignInfo'
    CcbIssuanceBorrowerInfo:
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        birthdate:
          nullable: true
          type: string
        cge:
          nullable: true
          format: int64
          type: integer
        taxId:
          nullable: true
          type: string
        onbApplicationPactualId:
          nullable: true
          format: uuid
          type: string
        account:
          $ref: '#/components/schemas/CcbIssuanceAccount'
    CcbIssuanceFinancialInfo:
      type: object
      properties:
        firstPaymentDate:
          nullable: true
          type: string
        disbursementDate:
          nullable: true
          type: string
        monthlyInterestRate:
          format: double
          type: number
        annualInterestRate:
          format: double
          type: number
        calculationType:
          nullable: true
          type: string
        valorizationMethod:
          nullable: true
          type: string
        counterPartyType:
          nullable: true
          type: string
        iofFinance:
          type: boolean
        amortizationFrequencyCode:
          nullable: true
          type: string
        interestIndexCode:
          nullable: true
          type: string
        interestFrequencyCode:
          nullable: true
          type: string
        operation:
          $ref: '#/components/schemas/CcbIssuanceOperation'
    CcbIssuanceSignInfo:
      type: object
      properties:
        status:
          nullable: true
          type: string
        contractDate:
          nullable: true
          type: string
        lastInfo:
          nullable: true
          type: string
        signerStatus:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/DocHubSignerStatus'
    CcbIssuanceAccount:
      type: object
      properties:
        bank:
          nullable: true
          type: string
        branch:
          nullable: true
          type: string
        account:
          nullable: true
          type: string
        ispb:
          nullable: true
          type: string
        accountType:
          $ref: '#/components/schemas/CcbIssuanceAccountType'
    CcbIssuanceAccountType:
      enum:
        - CACC
        - SLRY
        - SVGS
        - TRAN
      type: string
    DocHubSignerStatus:
      type: object
      properties:
        name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        taxId:
          nullable: true
          type: string
        signAs:
          nullable: true
          type: string
        signatureDate:
          nullable: true
          type: string
        authenticationType:
          nullable: true
          type: string
        status:
          nullable: true
          type: string
        statusInfo:
          nullable: true
          type: string
    CcbIssuanceProposalRequest:
      required:
        - clientRequestId
        - quotationPactualId
        - quotationOperationId
        - borrowerInfo
      type: object
      properties:
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        quotationPactualId:
          format: uuid
          type: string
        quotationOperationId:
          nullable: true
          type: string
        borrowerInfo:
          $ref: '#/components/schemas/CcbIssuanceBorrowerInfoBase'
        tags:
          $ref: '#/components/schemas/Tags'
    CcbIssuanceBorrowerInfoBase:
      required:
        - taxId
      type: object
      properties:
        taxId:
          nullable: true
          type: string
        onbApplicationPactualId:
          nullable: true
          format: uuid
          type: string
        account:
          $ref: '#/components/schemas/CcbIssuanceAccount'
    CcbIssuanceAssignmentSucessApiResponseEnvelope:
      description: CCB Assignment Response
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/ApiEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CcbIssuanceAssignmentEntityEnvelope'
    CcbIssuanceAssignmentEntityEnvelope:
      description: CCB Assignment Entity
      required:
        - body
      allOf:
        - $ref: '#/components/schemas/EntityEnvelope'
        - type: object
          properties:
            body:
              $ref: '#/components/schemas/CcbIssuanceAssignmentEntity'
    CcbIssuanceAssignmentEntity:
      type: object
      properties:
        amount:
          format: double
          type: number
        assignmentTradeId:
          nullable: true
          type: string
        contract:
          nullable: true
          type: string
        productProfileId:
          nullable: true
          type: string
        signInfo:
          $ref: '#/components/schemas/CcbIssuanceSignInfo'
        settlementInfo:
          $ref: '#/components/schemas/CcbIssuanceSettlementInfo'
        proposals:
          nullable: true
          type: array
          items:
            $ref: '#/components/schemas/CdbIssProposalInfo'
    CcbIssuanceSettlementInfo:
      type: object
      properties:
        cge:
          nullable: true
          format: int64
          type: integer
        taxId:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
        account:
          $ref: '#/components/schemas/CcbIssuanceAccount'
    CdbIssProposalInfo:
      type: object
      properties:
        proposalPactualId:
          format: uuid
          type: string
        proposalClientRequestId:
          nullable: true
          type: string
        issuanceTradeId:
          nullable: true
          type: string
        contract:
          nullable: true
          type: string
        issueDate:
          nullable: true
          type: string
        dueDate:
          nullable: true
          type: string
        borrowerTaxId:
          nullable: true
          type: string
        issueValue:
          format: double
          type: number
        acquisitionValue:
          format: double
          type: number
    PactualBulkId:
      format: uuid
      description: Unique resource identificator (uuid) generated by api.
      type: string
    InvestmentFundsAmount:
      title: Root Type for InvestmentFundsAmount
      description: Indicates the value and type of value for acquiring the fund.
      required:
        - amountType
        - value
      type: object
      properties:
        value:
          format: double
          description: Enter the monetary value or number of shares.
          type: number
        amountType:
          description: When entering the MONETARY_VALUE type, the acquisition/redemption of the fund will be based on the value entered. And for the SHARE_QUANTITY type, the acquisition/redemption will be based on the quantity of shares informed in the value field.
          enum:
            - MONETARY_VALUE
            - SHARE_QUANTITY
          type: string
      example:
        value: 2870.75
        amountType: MONETARY_VALUE
    InvestmentFundsRedeemRequest:
      title: Root Type for InvestmentFundsRedeemRequest
      description: ''
      required:
        - amount
        - referenceDateType
        - redeemOperationType
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/InvestmentFundsAmount'
          description: Indicates the value and type of value for acquiring the fund.
          properties:
            value:
              format: int32
              type: integer
            amountType:
              type: string
        creditParty:
          type: object
          properties:
            ispb:
              type: string
            bank:
              type: string
            branch:
              type: string
            account:
              type: string
            name:
              type: string
            taxId:
              type: string
            personType:
              type: string
            accountType:
              type: string
        referenceDateType:
          description: Indicates the type of date that will be used to acquire the fund.
          enum:
            - ORDER
            - SETTLEMENT
          type: string
        referenceDate:
          format: date
          type: string
        redeemOperationType:
          enum:
            - FINANCIAL_RESCUE
            - REDEMPTION_BY_SHARES
            - FULL_REDEMPTION
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        tags:
          type: array
          items:
            type: string
      example:
        amount:
          value: 1870
          amountType: MONETARY_VALUE
        creditParty:
          ispb: '30306294'
          bank: '208'
          branch: '1'
          account: '32161'
          name: Pedro Ferreira de Lara
          taxId: '57488202007'
          personType: F
          accountType: CC
        referenceDateType: ORDER
        referenceDate: '2024-08-30'
        redeemOperationType: FINANCIAL_RESCUE
        clientRequestId: b6d55988-a06d-46ee-9687-df1bc2fae267
        tags:
          - Markups
    InvestmentFundsInvestRequest:
      title: Root Type for InvestRequest
      description: ''
      required:
        - amount
        - referenceDateType
        - referenceDate
        - clientRequestId
      type: object
      properties:
        amount:
          $ref: '#/components/schemas/InvestmentFundsAmount'
          description: Indicates the value and type of value for acquiring the fund.
          properties:
            value:
              format: int32
              type: integer
            amountType:
              type: string
        referenceDateType:
          description: Indicates the type of date that will be used to acquire the fund.
          enum:
            - ORDER
            - SETTLEMENT
          type: string
        referenceDate:
          format: date
          description: Reference date for acquiring the fund, this field must be entered in the format "yyyy-mm-dd".
          type: string
        clientRequestId:
          description: The unique transaction identification given by the client side. This value can't be repeated.
          type: string
        tags:
          description: Tags that can be sent by the client, it will be saved on the Entity, use as a metadata field
          type: array
          items:
            type: string
      example:
        amount:
          value: 2870.75
          amountType: MONETARY_VALUE
        referenceDateType: SETTLEMENT
        referenceDate: '2024-08-30'
        clientRequestId: f1e51f3d-555c-4fdd-9346-a9100d61138c
        tags:
          - Markups
    InvestmentFundsStatementResponse:
      title: Root Type for InvestmentFundsStatementResponse
      description: ''
      type: object
      properties:
        accountNumber:
          type: string
        fundName:
          type: string
        grossTransactionValue:
          format: int32
          type: integer
        netValue:
          format: int32
          type: integer
        numberOfShares:
          format: double
          type: number
        settlementDate:
          format: date-time
          type: string
    AutomaticDebitIssueingAuthorizationStatus:
      description: |
        The state of the group quote, which at the time of its creation will be ENQUEUED.
      enum:
        - ENQUEUED
        - AWAITING_APPROVAL
        - CONFIRMED
        - CANCELED
        - REJECTED
        - ERROR
      type: string
    AutomaticDebitIssueingAuthorization:
      description: Automatic Debit Issueing Authorization Webhook body.
      type: object
      properties:
        pactualId:
          $ref: '#/components/schemas/PactualId'
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        createTimestamp:
          $ref: '#/components/schemas/CreateTimestamp'
        lastUpdateTimestamp:
          $ref: '#/components/schemas/LastUpdateTimestamp'
        entity:
          $ref: '#/components/schemas/Entity'
        status:
          $ref: '#/components/schemas/AutomaticDebitIssueingAuthorizationStatus'
        body:
          $ref: '#/components/schemas/AutomaticDebitIssueingAuthorizationBody'
        tags:
          $ref: '#/components/schemas/Tags'
    AutomaticDebitIssueingAuthorizationBodyProduct:
      description: Automatic Debit Issueing Authorization Webhook Product body.
      type: object
      properties:
        code:
          description: Unique Id representing the product from an automatic debit issueing authorization.
          type: string
    AutomaticDebitIssueingAuthorizationBodyClientAccount:
      description: Automatic Debit Issueing Authorization Webhook Client Account body.
      type: object
      properties:
        type:
          description: Representation of account type
          type: string
        agency:
          description: Representation of account agency
          type: string
        bank:
          description: Code representing the account's bank
          type: string
        number:
          description: Account number
          type: string
    AutomaticDebitIssueingAuthorizationBodyClient:
      description: Automatic Debit Issueing Authorization Webhook Client body.
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AutomaticDebitIssueingAuthorizationBodyClientAccount'
        documentType:
          description: Representation of the document type
          type: string
        documentNumber:
          description: Document Number
          type: string
    AutomaticDebitIssueingAuthorizationBodyContract:
      description: Automatic Debit Issueing Authorization Webhook Contract body.
      type: object
      properties:
        identification:
          description: Unique Id representing the contract from an automatic debit issueing authorization.
          type: string
    AutomaticDebitIssueingAuthorizationBody:
      description: Automatic Debit Issueing Authorization Webhook body.
      type: object
      properties:
        product:
          $ref: '#/components/schemas/AutomaticDebitIssueingAuthorizationBodyProduct'
        client:
          $ref: '#/components/schemas/AutomaticDebitIssueingAuthorizationBodyClient'
        contract:
          $ref: '#/components/schemas/AutomaticDebitIssueingAuthorizationBodyContract'
    AutomaticDebitIssueingBodyProduct:
      description: Automatic Debit Issueing Webhook Product body.
      type: object
      properties:
        code:
          description: Unique Id representing the product from an automatic debit issueing .
          type: string
    AutomaticDebitIssueingBodyClientAccount:
      description: Automatic Debit Issueing Webhook Client Account body.
      type: object
      properties:
        agency:
          description: Representation of account agency
          type: string
        bank:
          description: Code representing the account's bank
          type: string
        number:
          description: Account number
          type: string
    AutomaticDebitIssueingBodyContract:
      description: Automatic Debit Issueing Webhook Contract body.
      type: object
      properties:
        identification:
          description: Unique Id representing the contract from an automatic debit issueing.
          type: string
    AutomaticDebitIssueingBodyClient:
      description: Automatic Debit Issueing Webhook Client body.
      type: object
      properties:
        account:
          $ref: '#/components/schemas/AutomaticDebitIssueingBodyClientAccount'
        documentType:
          description: Representation of the document type
          type: string
        documentNumber:
          description: Document Number
          type: string
    AutomaticDebitIssueingBody:
      description: Automatic Debit Issueing Webhook body.
      type: object
      properties:
        amount:
          format: double
          type: number
        product:
          $ref: '#/components/schemas/AutomaticDebitIssueingBodyProduct'
        client:
          $ref: '#/components/schemas/AutomaticDebitIssueingBodyClient'
        contract:
          $ref: '#/components/schemas/AutomaticDebitIssueingBodyContract'
    AutomaticDebitIssueingStatus:
      description: |
        The state of the group quote, which at the time of its creation will be ENQUEUED.
      enum:
        - ENQUEUED
        - SCHEDULED
        - PROCESSING
        - CONFIRMED
        - CANCELED
        - REVERTING
        - REVERTED
        - ERROR
      type: string
    AutomaticDebitIssueing:
      description: Automatic Debit Issueing Webhook body.
      type: object
      properties:
        pactualId:
          $ref: '#/components/schemas/PactualId'
        clientRequestId:
          $ref: '#/components/schemas/ClientRequestId'
        createTimestamp:
          $ref: '#/components/schemas/CreateTimestamp'
        lastUpdateTimestamp:
          $ref: '#/components/schemas/LastUpdateTimestamp'
        entity:
          $ref: '#/components/schemas/Entity'
        status:
          $ref: '#/components/schemas/AutomaticDebitIssueingStatus'
        body:
          $ref: '#/components/schemas/AutomaticDebitIssueingBody'
        tags:
          $ref: '#/components/schemas/Tags'
        shareValue:
          format: double
          type: number
        transactionDate:
          format: date-time
          type: string
        transactionTypeDescription:
          type: string
        fundCNPJCode:
          type: string
        benchMark:
          type: string
        originAcquisitionDate:
          format: date-time
          type: string
      example:
        accountNumber: '000042161'
        fundName: BTG PACTUAL YIELD DI FI RF REF CRED PRIV
        grossTransactionValue: 25870
        netValue: 25870
        numberOfShares: 569.916549
        settlementDate: '2024-09-10T00:00:00Z'
        shareValue: 45.3926106
        transactionDate: '2024-09-10T00:00:00Z'
        transactionTypeDescription: APLICAÃ‡ÃƒO
        fundCNPJCode: '00840011000180'
        benchMark: FCDIE
        originAcquisitionDate: '2024-09-10T00:00:00Z'
    ForeignExchangeAggregationWebhookBody:
      description: Foreign Exchange Aggregation webhook body.
      type: object
      properties:
        quoteCurrencyTotalAmount:
          format: double
          description: The average total value of the aggregation's quotes in quote currency
          type: number
        baseCurrencyTotalAmount:
          format: double
          description: The average total value of the aggregation's quotes in base currency
          type: number
        meanTax:
          format: double
          description: The avarage value of the unit price
          type: number
        totalQuotes:
          format: double
          description: The number of quotes in the aggregation
          type: number
        operationSide:
          description: The direction of the trade
          type: string
        aggregationDateTime:
          format: date-time
          description: The date and hour of the aggregation
          type: string
        quoteCurrencySettlementDate:
          format: date-time
          description: The settlementDate from the QuoteCurrency
          type: string
        baseCurrencySettlementDate:
          format: date-time
          description: The settlementDate from the BaseCurrency
          type: string
        bacenIdentification:
          description: Trade identification code at Bacen
          type: string
        previousQuoteCurrencySettlementDate:
          format: date-time
          description: The old settlementDate from the QuoteCurrency when there is a change
          type: string
        previousBaseCurrencySettlementDate:
          format: date-time
          description: The old settlementDate from the BaseCurrency when there is a change
          type: string
        quoteCurrency:
          description: 3 digit currency code that the quote/trade quote
          type: string
        baseCurrency:
          description: 3 digit currency code that the quote/trade quote
          type: string
        isManagerialOnly:
          description: It indicates whether a quote is managerial only or not, managerial only quotes won't be executed, they exists only for managerial purposes
          type: boolean
        preTicketPactualId:
          description: The pactualid of the pre ticket
          type: string
        accountId:
          description: The BaaS AccountId that will be charged (BUY) / The BaaS AccountId that will recive (SELL)
          type: string
        taxes:
          description: The ids of the trade taxes
          type: array
          items:
            $ref: '#/components/schemas/Tax'
        movementId:
          description: The id of the foreign exchange trade
          type: string
        uniqueTransactionReferences:
          description: Unique reference for each transaction from the beginning to the end of the process, field 121 of MT103 with the name UETR. Only in BUY trades
          type: array
          items:
            type: string
  responses:
    SuccessCreateResource:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SingleResponse'
          examples:
            SuccessCreateResourceExample:
              value:
                version: '1.0'
                status: 202
                body:
                  clientRequestId: b2af2d7a-23b5-4cfb-b879-0b6fa705beb2
                  pactualId: 71a16885-4f6d-492f-a741-d0d3a106cfa1
      description: A success api response for create single resources.
    SuccessNoContentResource:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmptyOKResponse'
          examples:
            EmptyOKResponse:
              value:
                version: 1.0.0
                status: 204
      description: A success api response.
    SuccessCreateBulkOfResources:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BulkResponse'
          examples:
            SuccessCreateBulkOfResourcesExample:
              value:
                version: '1.0'
                status: 202
                body:
                  pactualBulkId: daf17267-f26d-43e5-baef-074bb67c95c8
                  items:
                    - clientRequestId: 6270f54d-58d7-4998-8946-c91ad1118273
                      pactualId: ae61453e-ce54-40fc-94c9-5f720de264d4
                    - clientRequestId: 87743d30-928f-4587-9620-c39d39558d9c
                      pactualId: ad21c1a9-feb5-43b2-8b82-1e93b7cf5d50
      description: A success api response for create resources in bulk.
    InternalServerError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            InternalServerErrorExample:
              value:
                version: 1.0.0
                status: 500
                errors:
                  - errorCode: PIE001
                    message: Internal server error
      description: Internal server error responses.
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            BadRequestExample:
              value:
                version: 1.0.0
                status: 400
                errors:
                  - errorCode: PCE001
                    message: The field 'name' is mandatory.
                  - errorCode: PCE001
                    message: The field 'accountNumber' is mandatory.
      description: A BadRequest response.
    Unauthorized:
      description: Response when a request is not athorized for the user.
    Forbiden:
      description: Response when the resource can not be accessed by the user.
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            NotFoundExample:
              value:
                version: 1.0.0
                status: 404
      description: A NotFound response.
    TooManyRequests:
      description: Too many requests. Try wait and call again later.
    GatewayTimeout:
      description: Received a timeout from an internal api. Check if the resource is created using the search api or by receiving a webhook notification.
    EmptyOKResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/EmptyOKResponse'
          examples:
            EmptyOKResponse:
              value:
                version: 1.0.0
                status: 200
      description: ''
    Conflict:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
          examples:
            BadRequestExample:
              value:
                version: 1.0.0
                status: 409
                errors:
                  - errorCode: PCE001
                    message: The message has already been processed.
      description: Happens when conflicting messages are submitted.
    SuccessPaymentSlipSearchResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PaymentSlipSearchResponseBody'
          examples:
            SuccessPaymentSlipSearchResponseBodyExample:
              value:
                version: '1.0'
                status: 200
                body:
                  totalFound: 1
                  totalReturned: 1
                  startingFrom: 0
                  scrollId: DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAD4WYm9laVYtZndUQlNsdDcwakFMNjU1QQ==
                  items:
                    - pactualId: 3fa85f64-5717-4562-b3fc-2c963f66afa6
                      clientRequestId: string
                      createTimestamp: string
                      lastUpdateTimestamp: string
                      entity: string
                      status: string
                      errorCode: string
                      errorDescription: string
                      tags:
                        - Warsupply
                        - Invoice_1234
                      body:
                        amount: 400000
                        dueDate: '2019-07-20T00:00:00.000Z'
                        customer:
                          name: Alex
                          taxId: '62454147335'
                          street: Av. Faria Lima, 0001
                          number: 13A
                          numberComplement: Sala 101 3 andar
                          neighborhood: Itaim Bibi
                          city: string
                          stateCode: string
                          zipCode: 12345678
                        fine:
                          date: '2019-07-20T00:00:00.000Z'
                          value: 1.1
                        interest:
                          date: '2019-07-20T00:00:00.000Z'
                          value: 1.1
                        overdueDate: '2019-07-20T00:00:00.000Z'
                        description: string
                        issueDate: '2019-07-20T00:00:00.000Z'
                        barCode: '20898000000000001000001010000000003700451520'
                        digitableLine: '20890001091000000000937004515203800000000000100'
      description: ''
    SuccessTransferSearchResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/FinancialMovementSearchResponseBody'
          examples:
            SuccessTransferSearchResponseExample:
              value:
                version: '1.0'
                status: 200
                body:
                  totalFound: 50
                  totalReturned: 20
                  startingFrom: 0
                  scrollId: DXF1ZXJ5QW5kRmV0Y2gBAAAAAAAAAD4WYm9laVYtZndUQlNsdDcwakFMNjU1QQ==
                  items:
                    - movementId: some text
                      amount: 68
                      debitParty:
                        bank: 2
                        branch: 7
                        account: 20
                        name: some text
                        taxId: some text
                        accountType: some text
                      creditParty:
                        bank: 40
                        branch: 30
                        account: 93
                        name: some text
                        taxId: some text
                        accountType: some text
                    - movementId: some text
                      amount: 25
                      debitParty:
                        bank: 97
                        branch: 60
                        account: 79
                        name: some text
                        taxId: some text
                        accountType: some text
                      creditParty:
                        bank: 6
                        branch: 35
                        account: 87
                        name: some text
                        taxId: some text
                        accountType: some text
      description: ''
  securitySchemes:
    BaaSAuthorizer:
      type: apiKey
      description: 'JWT Authorization header using the Bearer scheme. Example: "Authorization: Bearer { token }"'
      name: Authorization
      in: header
    mTLS:
      type: apiKey
      description: |
        When ```mTLS Certificate``` is enabled in the webhook subscription, the communication between
        our client and your server will be done through the mTLS protocol. Our client certificate can
        be downloaded through our portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook).
      name: none
      in: header
    HashSignature:
      type: apiKey
      description: |
        When ```Hash Signature (HMAC SHA256 Hash)``` is enabled in the webhook subscription, every webhook 
        we send for this subscription will have the ```x-webhook-baas-signature``` header. The value will 
        be the request body content hashed with HMAC-SHA256. The Secret Key will be the one you configured 
        in the webhook subscription.

        For security validation, you can hash the body content you received by the webhook, and then 
        compare with the value in the ```x-webhook-baas-signature``` header. If they match, you can 
        trust that we sent it.

        Important: remember to hash the raw body content received, without any formatting, otherwise
        the hashs might not match.
      name: x-webhook-baas-signature
      in: header
security:
  - BaaSAuthorizer: []
tags:
  - name: External Transfers
    description: |-
      This session handles money transactions made from outside the bank that impact a account within our system. Here one can send single or multiple money transactions to impact the users account and also check the transactions already made.
      > External Transfer status flow.
      ![External Transfer Status Flow](https://developer.btgpactual.com/images/ted_tef_flow_chart.png)
      ## External Transfer Error Codes

      | Error Code |Error Name|Error Description|
      |----------|:-------------|------|
      |PAE001|Unauthorized|Unauthorized operation.|
      |PAE001|Forbidden|Unauthorized operation.|
      |PBE002|Unauthorized|Operation unauthorized for this Account.|      
      |PBE100|BadRequest|Not business day.|
      |PBE100|BadRequest|There is no open windows for this operation.|
      |PBE100|BadRequest|There is no open windows for this operation.|
      |PBE100|BadRequest|Invalid arguments.|      
      |PBE101|NotFound|Account not found.|
      |PBE101|NotFound|Account could not be found.|
      |PBE101|BadRequest|Invalid tax id.|
      |PBE102|InternalServerError|Error to check ClientAccount.|
      |PBE103|Forbidden|Transaction received after the cut-off time.|
      |PBE103|NotFound|Inexistent credit Party.|
      |PBE105|BadRequest|No Limit Avaiable.|
      |PBE150|BadRequest|General reject operation. [Reason = ERROR_DIGITOS_CONTA_INVALIDA]|
      |PBE150|BadRequest|General reject operation. [Reason = ESTR0006 - ISPB Credito Invalido]|
      |PBE150|BadRequest|General reject operation. [Reason = ESTR0006]|
      |PBE150|BadRequest|General reject operation. [Reason = Operation canceled manually]|
      |PBE150|BadRequest|General reject operation. [Reason = Caractere invalido no campo CREDIT_NAME]|
      |PBE150|BadRequest|General reject operation. [Reason = ESTR0007 - ISPB Credito sem Reserva Bancaria]|
      |PBE150|BadRequest|General reject operation. [Reason = ESTR0033 - Agencia de Credito Nao Informada]|
      |PBE150|BadRequest|General reject operation. [Reason = Conta Invalida!]|
      |PBE150|BadRequest|General reject operation. [Reason = ESTR0007]|
      |PBE150|BadRequest|General reject operation. [Reason = ISPB Credito Invalido]|
      |PBE152|BadRequest|Returned by the destination bank.|
      |PBE304|NotFound|Register not found.|
      |PCE001|BadRequest|The request is invalid.|
      |PCE005|BadRequest|Duplicated clientRequestId.|
      |PIE001|InternalServerError|Start time Ted invalid.|
      |PIE001|InternalServerError|End time Ted invalid.|
      |PIE001|BadRequest|ISPB not found.|
      |PIE002|InternalServerError|Some error has occurred.|
      |PIE002|InternalServerError|Error to check Destination Account.|
      |BBE0001|BadRequest|Destination Account is Closed.|
      |BBE0002|BadRequest|Branch or credit recipient account is Invalid.|
      |BBE0002|BadRequest|Bank is Invalid.|
      |BBE0003|BadRequest|TaxId missing or divergent.|
      |BBE0004|BadRequest|Invalid message for indicated purpose.|
      |BBE0005|BadRequest|Divergence in Ownership.|
      |BBE0008|BadRequest|Invalid Transfer Identifier Code.|
      |BBE0031|BadRequest|TaxId unfit with the Federal Revenue of Brazil.|
      |BBE0061|BadRequest|Transfer exceeds limit for destination account type.|
      |BBE0084|BadRequest|Credit recipient account invalid for this transaction type.|


      ## External Transfer Status
      | Status Code |Status Description|
      |----------|:-------------|
      |ENQUEUED|Request with the contract Ok and waiting for processing.|
      |PROCESSING|Transfer has been created and is being processed.|
      |CONFIRMED|Transfer sent to receiver bank.|
      |REVERTED|Transfer rejected by the receiver bank.|
      |ERROR|Transfer rejected by an error insufficient funds to confirm the transfer for example.|

      ## External Transfer Webhook

      The following code represents the structure of a External Transfer Webhook.

      ```
      {
        "Body": {
          "amount": 2828,
          "creditParty": {
            "account": "000000",
            "accountType": "CC",
            "bank": "208",
            "branch": "1",
            "name": "BTG Pactual",
            "personType": "F",
            "taxId": "00000000000"
          },
          "debitParty": {
            "account": "000000",
            "accountType": "CC",
            "bank": "208",
            "branch": "1",
            "name": "BTG Pactual",
            "personType": "J",
            "taxId": "00000000000000"
          },
          "movementId": "000000000",
          "reversalMovementId": "000000000"
        },
        "ClientId": "123a1234-ab12-1fd2-123a-1aabec1bcrcc",
        "ClientRequestId": "H26HRHOBQOIHXHGUDQE463NMB4VNCMWD_bd89afbcd8844e54ac6507dfd42bdffg_CashIn",
        "CreateTimestamp": "2021-05-01T01:01:01.0000000+00:00",
        "Entity": "ExternalTransfer",
        "LastUpdateTimestamp": "2021-05-01T01:01:01.0000000+00:00"
        "PactualId": "123ab123-1234-12ab-12a1-1a123456a123",
        "Status": "ENQUEUED || PROCESSING || CONFIRMED || REVERTED || ERROR",
        "Tags": [
        ]
      }
      ```            
  - name: Internal Transfers
    description: |-
      This session deals with money transactions that occur between accounts registered within BTG Banking as a Service. Those money movements are processed similarly to the ones in the session above. One can send single or multiple transactions and can also check the movements already done.
      > Internal Transfer status flow.
      ![Internal Transfer Status Flow](https://developer.btgpactual.com/images/ted_tef_flow_chart.png)
      ## Internal Transfer Error Codes

      | Error Code |Error Name|Error Description|
      |----------|:-------------|------|
      |PAE001|Unauthorized|Unauthorized operation.|
      |PAE001|Forbidden|Unauthorized operation.|
      |PBE002|Unauthorized|Operation unauthorized for this Account.|      
      |PBE100|BadRequest|Not business day.|
      |PBE100|BadRequest|There is no open windows for this operation.|
      |PBE100|BadRequest|There is no open windows for this operation.|
      |PBE100|BadRequest|Invalid arguments.|      
      |PBE101|NotFound|Account not found.|
      |PBE101|NotFound|Account could not be found.|
      |PBE101|BadRequest|Invalid tax id.|
      |PBE102|InternalServerError|Error to check ClientAccount.|
      |PBE103|Forbidden|Transaction received after the cut-off time.|
      |PBE103|NotFound|Inexistent credit Party.|
      |PBE105|BadRequest|No Limit Avaiable.|
      |PBE150|BadRequest|General reject operation. [Reason = ERROR_DIGITOS_CONTA_INVALIDA]|
      |PBE150|BadRequest|General reject operation. [Reason = ESTR0006 - ISPB Credito Invalido]|
      |PBE150|BadRequest|General reject operation. [Reason = ESTR0006]|
      |PBE150|BadRequest|General reject operation. [Reason = Operation canceled manually]|
      |PBE150|BadRequest|General reject operation. [Reason = Caractere invalido no campo CREDIT_NAME]|
      |PBE150|BadRequest|General reject operation. [Reason = ESTR0007 - ISPB Credito sem Reserva Bancaria]|
      |PBE150|BadRequest|General reject operation. [Reason = ESTR0033 - Agencia de Credito Nao Informada]|
      |PBE150|BadRequest|General reject operation. [Reason = Conta Invalida!]|
      |PBE150|BadRequest|General reject operation. [Reason = ESTR0007]|
      |PBE150|BadRequest|General reject operation. [Reason = ISPB Credito Invalido]|
      |PBE152|BadRequest|Returned by the destination bank.|
      |PBE304|NotFound|Register not found.|
      |PCE001|BadRequest|The request is invalid.|
      |PCE005|BadRequest|Duplicated clientRequestId.|
      |PIE001|InternalServerError|Start time Ted invalid.|
      |PIE001|InternalServerError|End time Ted invalid.|
      |PIE001|BadRequest|ISPB not found.|
      |PIE002|InternalServerError|Some error has occurred.|
      |PIE002|InternalServerError|Error to check Destination Account.|
      |BBE0001|BadRequest|Destination Account is Closed.|
      |BBE0002|BadRequest|Branch or credit recipient account is Invalid.|
      |BBE0002|BadRequest|Bank is Invalid.|
      |BBE0003|BadRequest|TaxId missing or divergent.|
      |BBE0004|BadRequest|Invalid message for indicated purpose.|
      |BBE0005|BadRequest|Divergence in Ownership.|
      |BBE0008|BadRequest|Invalid Transfer Identifier Code.|
      |BBE0031|BadRequest|TaxId unfit with the Federal Revenue of Brazil.|
      |BBE0061|BadRequest|Transfer exceeds limit for destination account type.|
      |BBE0084|BadRequest|Credit recipient account invalid for this transaction type.|

      ## Internal Transfer Status
      | Status Code |Status Description|
      |----------|:-------------|
      |ENQUEUED|Request with the contract Ok and waiting for processing.|
      |PROCESSING|Transfer has been created and is being processed.|
      |CONFIRMED|Transfer sent to receiver bank.|
      |REVERTED|Transfer rejected by the receiver bank.|
      |ERROR|Transfer rejected by an error insufficient funds to confirm the transfer for example.|

      ## Internal Transfer Webhook

      The following code represents the structure of a Internal Transfer Webhook.

      ```
      {
        "Body": {
          "amount": 2828,
          "creditParty": {
            "account": "000000",
            "accountType": "CC",
            "bank": "208",
            "branch": "1",
            "name": "BTG Pactual",
            "personType": "F",
            "taxId": "00000000000"
          },
          "debitParty": {
            "account": "000000",
            "accountType": "CC",
            "bank": "208",
            "branch": "1",
            "name": "BTG Pactual",
            "personType": "J",
            "taxId": "00000000000000"
          },
          "movementId": "000000000"
        },
        "ClientId": "132d1913-fe13-4fd0-972f-6acdec3bcrcc",
        "ClientRequestId": "A26ABCDEFGHIJKLMNOPQ463NMB4VNCMWD_bd89afbcd8844e54ac6507dfd42bdffg_CashIn",
        "CreateTimestamp": "2021-05-01T01:01:01.0000000+00:00",
        "Entity": "InternalTransfer",
        "LastUpdateTimestamp": "2021-05-01T01:01:01.0000000+00:00",
        "PactualId": "160bd335-9528-42cf-90f6-6e391504d996",
        "Status": "ENQUEUED || PROCESSING || CONFIRMED || REVERTED || ERROR",
        "Tags": [
        ]
      }
      ```
  - name: Generic Transfers
    description: 'This session deals with money transactions that occur between accounts registered within BTG Banking as a Service. These transactions use specific processing codes that were previously agreed. '
  - name: CashIn Split
    description: |-
      Processing and generating payments based on cash-in events. In this service, it is possible to configure rules ("splitters") for automatic generation of cash-out transactions that will be processed using filters ("Triggers") configured by the client. <br/><br/>
      **Fluxo de processamento** <br/><br/>
      ![Split Cash-in Flow](https://developer.btgpactual.com/images/baas-spliter-rule-flow.png)
  - name: CashIn Split (Rules)
    description: |-
      The rules for split cash-in processing can be of two types: Managed Rule and Oneshot Rule.
      - Managed Rule - Recommended for cases where there is the possibility of reuse. This rule must be created previously, and it is possible to define filters ("Triggers") that will be used for matching when there are cash-in events.
      - Oneshot Rule - Recommended for single-use cases. This rule is created when the Payment-slip or QRCode PIX is issued.

      The rule matches for CashIn Split processing can be:
      - According to the Oneshot Rule (for cases where a splitters rule was set when issuing the Payment-slip or QRCode PIX).
      - According to the Managed Rule ID (for cases where a rule ID was set when issuing the Payment-slip or QRCode PIX);
      - According to the triggers configured in the Managed Rules;

      **(Click for more details: [Payment-slip](https://developer.btgpactual.com/doctr#tag/PaymentSlipsSplit) or [BolePIX](https://developer.btgpactual.com/doctr#tag/BolePixSplit) or [QRCode PIX](https://developer.btgpactual.com/docpi#tag/PixSplitImmediateCollection))**

                  
      ## CashIn Split Rules Status
      | Status Code |Status Description|
      |----------|:-------------|
      |ENABLED|Rule enabled for processing.|
      |DISABLED|Rule disabled and ignored for processing.|
      |DELETED|Rule deleted.|
  - name: CashIn Split (Transactions)
    description: |-
      After processing the ("splitters") of the rules applied to cash-in events, payment transactions will be generated. The client must analyze these transactions through the summary or by consulting each one, and then approve the payment's execution.
                  
      ## CashIn Split Transactions Status
      | Status Code |Status Description|
      |----------|:-------------|
      |PENDING|Transaction created and waiting approve for processing.|
      |APPROVED|Transaction approved for processing.|
      |CANCELED|Transaction canceled.|
      |PROCESSING|Transaction is processing.|
      |PAYMENT_ENQUEUED|Transaction payment enqueued.|
      |COMPLETED|Transaction payment completed.|
      |ERROR|Internal error of data consistency validations or integrations.|
  - name: Payment Slips
    description: "Payment Slips are a form of push-payment, which relies on the consumer initializing the payment\r\nitself. This process is similar to paying with a bank wire. The core of the transaction is an\r\ninvoice-like form or ticket that is issued to the end-user to complete the transaction. The\r\npayment slip specifies the amount and the due date by which the payment must be completed. It's a\r\ncommon form of payment in Brazil and it can be paid virtually anywhere: ATMs, branch facilities,\r\ninternet and many more. The creation of new instances of Payment slips respects the GMT time zone.\r\n\r\n> The image shows the status flow for processing a Payment Slip and it's multiple stages.\r\n\r\n\r\n![Payment Slip Status Flow](https://developer.btgpactual.com/images/payment_slip_flow_chart.png)\r\n\r\n## Payment Slip Error Codes\r\n\r\n| Error Code |Error Name|Error Description|\r\n|----------|:-------------|------|\r\n|PBE202|BadRequest|An error occurred while requesting bankslip cancel/update to CIP.|\r\n|PBE200|BadRequest|Attempt after end time.|\r\n|PBE200|BadRequest|Attempt before end time.|\r\n|PBE200|BadRequest|Beneficiary doesnt exist.|\r\n|PBE200|BadRequest|Barcode is duplicate: Branch, account, NominalAmount, MaturityDate and OurNumber cant be the same for different bills.|\r\n|PBE202|BadRequest|Beneficiary incapable to issue Bankslip on CIP.|\r\n|PBE200|BadRequest|Cannot cancel or update bankslip in status.|\r\n|PBE200|BadRequest|Date larger than allowed.|\r\n|PBE200|BadRequest|Discount1 LimitDate cannot be before IssueDate.|\r\n|PBE200|BadRequest|Discount1 LimitDate cannot be greater/equal MaturityDate.|\r\n|PBE200|BadRequest|Discount1 PercentOrAmount must be smaller than NominalAmount.|\r\n|PBE200|BadRequest|Invalid Discount1 PercentOrAmount.|\r\n|PBE200|BadRequest|Discount2 LimitDate cannot be before IssueDate.|\r\n|PBE200|BadRequest|Discount2 LimitDate cannot be greater/equal MaturityDate.|\r\n|PBE200|BadRequest|Discount2 PercentOrAmount must be smaller than NominalAmount.|\r\n|PBE200|BadRequest|Invalid Discount2 PercentOrAmount.|\r\n|PBE200|BadRequest|Discount3 LimitDate cannot be before IssueDate.|\r\n|PBE200|BadRequest|Discount3 LimitDate cannot be greater/equal MaturityDate.|\r\n|PBE200|BadRequest|Discount3 PercentOrAmount must be smaller than NominalAmount.|\r\n|PBE200|BadRequest|Invalid Discount3 PercentOrAmount.|\r\n|PBE200|BadRequest|DocumentNumber value does not match DocumentType value.|\r\n|PBE200|BadRequest|DocumentNumber value does not match PersonType value.|\r\n|PBE200|BadRequest|Fine amount must be smaller than nominal amount.|\r\n|PBE200|BadRequest|Fine date cannot be before Maturity Date.|\r\n|PBE200|BadRequest|Invalid Fine percent.|\r\n|PBE200|BadRequest|For Discount1 Code different from Exempt, Discount1 LimitDate must be informed.|\r\n|PBE200|BadRequest|For Discount1 Code different from Exempt, Discount1 PercentOrAmount must be informed.|\r\n|PBE200|BadRequest|For Discount2 Code different from Exempt, Discount2 LimitDate must be informed.|\r\n|PBE200|BadRequest|For Discount2 Code different from Exempt, Discount2 PercentOrAmount must be informed.|\r\n|PBE200|BadRequest|For Discount3 Code different from Exempt, Discount3 LimitDate must be informed.|\r\n|PBE200|BadRequest|For Discount3 Code different from Exempt, Discount3 PercentOrAmount must be informed.|\r\n|PBE200|BadRequest|For Fine Code different of Exempt, Fine Date must be sent.|\r\n|PBE200|BadRequest|For Fine Code different of Exempt, Fine PercentOrAmount must be sent.|\r\n|PBE200|BadRequest|InitialDate must be sent.|\r\n|PBE200|BadRequest|For Interest Code different of exempt, PercentOrAmount must be sent.|\r\n|PBE200|BadRequest|For PersonType J, FantasyName is mandatory.|\r\n|PBE200|BadRequest|Interest InitialDate cannot be before MaturityDate.|\r\n|PBE200|BadRequest|Invalid Interest PercentOrAmount field.|\r\n|PBE200|BadRequest|Interest PercentOrAmount must be smaller than nominal amount.|\r\n|PBE200|BadRequest|Invalid format date.|\r\n|PBE200|BadRequest|Invalid guarantor drawer number.|\r\n|PBE200|BadRequest|Invalid guarantor drawer name.|\r\n|PBE200|BadRequest|MaturityDate must be greater or equal to issue date.|\r\n|PBE200|BadRequest|Max value to payment Bankslip can't be minor than Nominal Value.|\r\n|PBE200|BadRequest|Must be equal 1 for Credit Card payment.|\r\n|PBE200|BadRequest|Invalid format for Discount Amount.|\r\n|PBE200|BadRequest|Invalid format for Protest Days.|\r\n|PBE200|BadRequest|Must be numeric positive and different from zero.|\r\n|PBE200|BadRequest|PaymentLimitDate must be greater or equal to maturity date.|\r\n|PBE200|BadRequest|Invalid ProtestQuantityDays value.|\r\n|PBE200|BadRequest|ReductionAmount cant be greater/equal NominalAmount.|\r\n|PBE200|BadRequest|The API is disabled by flag.|\r\n|PBE200|BadRequest|The discount code of the bankslip must be equal in all informed discounts.|\r\n|PBE200|BadRequest|Bad format domain error.|\r\n|PBE200|BadRequest|TreatyId or DocumentNumber with PersonType is needed.|\r\n|PBE200|BadRequest|It's not possible to cancel this pay.|\r\n|PBE203|BadRequest|It's not possible to cancel this payment slip.|\r\n|PBE204|BadRequest|OverdueDate must be greater or equal to Duedate.|\r\n|PBE205|BadRequest|OverdueDate must be greater or equal to Duedate.|\r\n|PBE206|BadRequest|Cannot cancel bankslip with operational write off.|\r\n|PBE207|BadRequest|Cannot cancel bankslip with effective write off.|\r\n\r\n\r\n## Payment Slip Status\r\n\r\n| Status Code |Status Description|\r\n|----------|:-------------|\r\n|ENQUEUED|Request with the contract Ok and waiting for processing.|\r\n|PROCESSING|Payment slip created an sent to CIP. There is now a bar code.|\r\n|ERROR|Internal error of data consistency validations.|\r\n|CREATED|Payment slip registered with CIP and ready to payment.|\r\n|PROCESSING_PAYMENT|Payment slip was paid by the customer.|\r\n|PAID|The beneficiary has been credited to his BTG Pactual account for payment of the payment slip.|\r\n|REVERSED|The money was returned to de customer due to an error in the beneficiary account. Ex: inactive account.|\r\n|CANCELING|Payment slip is in the process of cancellation.|\r\n|CANCELED|Payment slip was canceled by the customer.|\r\n|CANCEL_FAILED|Payment Slip cancellation failed.|\r\n|UPDATED|Payment Slip was updated.|\r\n|UPDATE_FAILED|Payment Slip update failed.|\r\n\r\n\r\n## Payment Slip Webhook\r\n\r\n\r\nThe following code represents the structure of a Payment Slip Webhook.\r\n\r\n```\r\n\r\n{\r\n    \"body\": {\r\n        \"amount\": 100,\r\n        \"amountPaid\": 100,\r\n        \"barCode\": \"208955667800000001180001010000009532000817600\",\r\n        \"beneficiaryAccount\": {\r\n            \"status\": \"CREATED\",\r\n            \"account\": 0000,\r\n            \"defaultAccount\": True,\r\n            \"accountId\": \"33456f97-8c30-4573-a5a7-cc9df634566a\",\r\n            \"bank\": 208,\r\n            \"personType\": \"F\",\r\n            \"taxId\": \"00000000000\",\r\n            \"accountType\": \"CC\",\r\n            \"bankBranchAccount\": \"208_20_00000\",\r\n            \"beneficiaryTreatyCode\": \"637211837530918823\",\r\n            \"lastUpdateTimestamp\": \"2021-02-04T15:17:58.8036254+00:00\",\r\n            \"name\": \"XPTO\",\r\n            \"beneficiaryMarketTreatyCode\": \"01\",\r\n            \"markups\": [],\r\n            \"branch\": 20,\r\n            \"clientId\": \"00842b8c-f376-4b60-9416-07beeecb2213\",\r\n            \"createTimestamp\": \"2020-08-04T18:27:11.1201059+00:00\"\r\n        },\r\n        \"customer\": {\r\n            \"number\": \"00000\",\r\n            \"numberComplement\": \"00000\",\r\n            \"zipCode\": \"00000\",\r\n            \"stateCode\": \"RJ\",\r\n            \"street\": \"XPTO\",\r\n            \"taxId\": \"00000000000\",\r\n            \"city\": \"Rio de Janeiro\",\r\n            \"name\": \"XPTO\",\r\n            \"neighborhood\": \"XPTO\"\r\n        },\r\n        \"fine\": {\r\n            \"value\": 10.1,\r\n            \"date\": \"2021-09-11\"\r\n        },\r\n        \"interest\": {\r\n            \"value\": 1.8,\r\n            \"date\": \"2021-01-01\"\r\n        },\r\n        \"discount\": { \r\n            \"discount1\": {\r\n                \"date\": \"2021-09-01\",\r\n                \"value\": 20,\r\n                \"type\": \"2\"\r\n            },\r\n            \"discount2\": {\r\n                \"date\": \"2021-09-15\",\r\n                \"value\": 15,\r\n                \"type\": \"2\"\r\n            },\r\n            \"discount3\": {\r\n                \"date\": \"2021-09-30\",\r\n                \"value\": 5,\r\n                \"type\": \"2\"\r\n            }\r\n        },\r\n        \"guarantorDrawer\": {\r\n            \"documentType\": 1,\r\n            \"documentNumber\": 26671395934,\r\n            \"name\": \"Tereza Silvana\"\r\n        },\r\n        \"description\": \"\",\r\n        \"digitableLine\": \"20877001091000000953920008764701587350000000118\",\r\n        \"dueDate\": \"2021-09-06\",\r\n        \"issueDate\": \"2021-09-01 19:45:21\",\r\n        \"movementDate\": \"2021-08-25T00:00:00Z\",\r\n        \"movementId\": \"268162927\",\r\n        \"ourNumber\": \"10020\",\r\n        \"ourNumberDigit\": \"14\",\r\n        \"overdueDate\": \"2021-01-01\"\r\n    },\r\n    \"pactualId\": \"b2gitedb-9622-4d18-8fda-56b92574a397\",\r\n    \"clientRequestId\": \"33231e03-0a35-4425-aa22-8b111ab5adfc\",\r\n    \"createTimestamp\": \"2021-09-01T19:45:03.0145943+00:00\",\r\n    \"lastUpdateTimestamp\": \"2021-09-01T19:45:23.1874485+00:00\",\r\n    \"entity\": \"PaymentSlip\",\r\n    \"status\": \"ENQUEUED || PROCESSING || CREATED || PROCESSING_PAYMENT || PAID || REVERSED || FAILED\",\r\n    \"tags\": []\r\n}\r\n```"
  - name: PaymentSlipsSplit
    description: |-
      Payment Slips ([CashIn Split](https://developer.btgpactual.com/doctr#tag/CashIn-Split))

      - CashIn Split is a service that allows you to configure rules ("splitters") for automatic generation of cash-out transactions. **([Click here for more details](https://developer.btgpactual.com/doctr#tag/CashIn-Split))**
    x-displayName: Payment Slips (CashIn Split)
  - name: DDA
    description: |-
      This section refers to document registration to activate the Authorized Direct Debit (DDA) product. After registration, the active bills will be made available for payment.

      ## DDA Status
      | Status Code |Status Description|
      |----------|:-------------|
      |PROCESSING|Payment slip dda account is processing and sent to CIP.|
      |CREATED|Payment slip dda account is created.|
      |INACTIVATING|Payment slip dda is processing to be inactive in the CIP.|
      |INACTIVE|Payment slip dda is inactive.|
      |INACTIVE_FAILED|An error occurred while disabling the register.|
      |ERROR|Internal error of data consistency validations.|

      ## DDA Notification Status
      | Status Code |Status Description|
      |----------|:-------------|
      |CREATED|The notification has been created.|

      ## DDA Error Codes

      | Error Code |Error Name|Error Description|
      |----------|:-------------|------|
      |PIE002|InternalServerError|Some error has occurred.|
      |PAE001|Unauthorized|Unauthorized operation.|
      |PAE001|Forbidden|Unauthorized operation.|
      |PCE002|BadRequest|Invalid format of field: 'ownerTaxId' = [xpto].|
      |PCE002|BadRequest|Invalid format of field: 'customerTaxId' = [xpto].|
      |PBE304|NotFound|Register not found.|
      |PBE660|BadRequest|Has a register in progress.|
      |PBE661|BadRequest|Has an inactivation in progress.|
      |PBE662|BadRequest|Inactivation is not allowed.|
      |PBE663|BadRequest|TaxId is already inactive.|
      |PBE448|BadRequest|DDA received after the cut-off time.|
      |PBE703|NotFound|Account not found.|
      |PBE659|BadRequest|Owner TaxId invalid.|
      |PBE654|BadRequest|Branch not found.|
      |PBE657|BadRequest|TaxId already registered.|
      |PCE001|BadRequest|The request is invalid.|
      |PBE655|NotFound|Document not found.|
      |PBE654|NotFound|Item not found.|

      ## DDA Webhook
      The following code represents the structure of a DDA Webhook.

      ```
      {
          "Body": {
              "customer": {
                  "name": "Margaret Lang",
                  "taxId": "61917013060"
              },
              "owner": {
                  "account": {
                      "account": 5691,
                      "accountType": "CC",
                      "branch": 97
                  },
                  "taxId": "18845036081"
              }
          },
          "ClientRequestId": "be9eb6c9-1a8c-46bc-8c7e-8309ae58a8ab",
          "CreateTimestamp": "2022-07-25T18:59:44.4912018+00:00",
          "Entity": "PaymentSlipDDA",
          "LastUpdateTimestamp": "2022-07-25T19:02:38.5109429+00:00",
          "PactualId": "c2116418-7858-42f1-bf7f-92548c6d9f88",
          "ErrorCode":"PIE002",
          "ErrorDescription":"Some error has occurred.",
          "Status": "PROCESSING || CREATED || INACTIVATING || INACTIVE || INACTIVE_FAILED || ERROR",
          "Tags": []
      }
      ```
      ## DDA Notification Webhook
      The following code represents the structure of a DDA Notification Webhook.

      ```
      {
          "body": {
              "addresseeBank": {
                  "ispb": 549619,
                  "code": "208"
              },
              "typeCalcModel": "01",
              "originalBeneficiary": {
                  "address": {
                      "publicPlace": "XPTO",
                      "city": "SAO PAULO",
                      "uf": "SP",
                      "cep": 535145441
                  },
                  "personType": "J",
                  "documentNumber": "00000000000000",
                  "name": "XPTO",
                  "fantasyName": "XPTO"
              },
              "finalBeneficiary": {
                  "personType": "J",
                  "documentNumber": "00000000000000",
                  "name": "XPTO",
                  "fantasyName": "XPTO"
              },
              "eletronicPayer": {
                  "address": {
                      "publicPlace": "XPTO",
                      "city": "SAO PAULO",
                      "uf": "SP",
                      "cep": "XPTO"
                  },
                  "personType": "F",
                  "documentNumber": "00000000000",
                  "name": "XPTO",
                  "fantasyName": "XPTO"
              },
              "guarantorDrawer": {
                  "idType": 0,
                  "id": "XPTO",
                  "name": "XPTO"
              },
              "ourNumber": "XPTO",
              "barCode": "XPTO",
              "digitableLine": "XPTO",
              "dueDate": "2021-07-07T00:00:00",
              "amount": 220182,
              "speciesCode": "99",
              "issueDate": "2021-06-21T00:00:00",
              "overdueDate": "2031-07-07T00:00:00",
              "paymentType": 3,
              "paymentTypeDescription": "Fixed DueDate",
              "partial": {
                  "installmentNumber": 1,
                  "installmentTotalQuantity": 2,
                  "partialPaymentQuantity": 3,
                  "paymentBalanceAmount": 5.2,
                  "paymentSituation": "01",
                  "paymentDescription": "BankSlip is already writed off.",
                  "registeredPartialPaymentQuantity": 0
              },
              "negociatedTitle": False,
              "blockedPayment": False,
              "partialPayment": False,
              "allowanceAmount": 0,
              "interest": {
                  "date": "2021-07-08T00:00:00",
                  "code": "1",
                  "description": "Value (Calendar days)",
                  "amount": 73
              },
              "fine": {
                  "date": "2021-07-08T00:00:00",
                  "code": "1",
                  "description": "Fixed Value",
                  "amount": 22018
              },
              "discounts": [
                  {
                      "date": "2021-07-08T00:00:00",
                      "code": "0",
                      "description": "Exempt",
                      "amount": 15
                  }
              ],
              "invoices": [
                  {
                      "issueDate": "2021-07-08T00:00:00",
                      "number": "",
                      "amount": 15
                  }
              ],
              "limitAmounts": {
                  "minAmountPercentType": "string",
                  "minAmountPercent": 2.8,
                  "maxAmountPercentType": "string",
                  "maxAmountPercent": 35.12
              },
              "situation": "01",
              "situationDateTime": "2021-06-21T22:40:51",
              "operationalWriteOffs": [
                  {
                      "bank": {
                          "ispb": 49631961,
                          "code": "208"
                      },
                      "type": "0",
                      "situation": 4,
                      "situationDateTime": "2021-06-30T11:23:24",
                      "detail": {
                          "bearer": {
                              "personType": "J",
                              "documentNumber": "00000000000000",
                              "name": "XPTO"
                          },
                          "processingDateTime": "2021-06-30T11:23:24",
                          "amount": 220182,
                          "paymentChannel": 3,
                          "paymentChanneldescription": "Internet Banking",
                          "paymentMethod": 2,
                          "paymentMethoddescription": "Direct Debit"
                      },
                      "cancel": {
                          "DateTime": "2021-06-30T11:23:24",
                          "Situation": 0
                      }
                  }
              ],
              "effectiveWriteOffs": [
                  {
                      "type": "0",
                      "bank": {
                          "ispb": 30306294,
                          "code": "208"
                      },
                      "processingDateTime": "2021-07-01T04:56:16",
                      "amount": 220182,
                      "paymentChannel": 3,
                      "paymentChanneldescription": "Internet Banking",
                      "paymentMethod": 2,
                      "paymentMethoddescription": "Direct Debit",
                      "situationDateTime": "2021-07-01T08:17:00"
                  }
              ],
              "calculatedAmount": 27.90
          },
          "ClientId": "90cecd83-b44f-4229-b88c-c66764a29f7d",
          "ClientRequestId": "XPTO",
          "CreateTimestamp": "2022-06-07T20:57:48.5977787+00:00",
          "Entity": "PaymentSlipDDANotification",
          "LastUpdateTimestamp": "2022-06-07T20:57:48.5977787+00:00",
          "PactualId": "f203f5ae-36a2-4785-81db-6ba2b2eb5ffa",
          "Status": "CREATED"
      }
      ```
  - name: Top Up
    description: 'This sessions refers to mobile phone top up. Sending credit to mobile phones and reviewing such transactions. '
  - name: Taxes Payment
    description: This section is for tax payment endpoints.
  - name: Depositary Bank
    description: |-
      This session refers to credit reserve operations.
      ## Depositary Bank Credit Reservation Operation Webhook
      The following code represents the structure of a Credit Reservation Operation Webhook.
      ``` {
        "pactualId": "f6a5fe30-4f7d-442d-8c18-69536578081d",
        "clientRequestId": "de600cf5-0168-4fdd-b161-769f2625024d",
        "createTimestamp": "2022-11-08T00:18:59.6884487+00:00",
        "lastUpdateTimestamp": "2022-11-08T00:18:59.6884623+00:00",
        "entity": "CreditReservationOperation",
        "status": "CREATED",
        "body": {
          "cardIssuerId": "12345",
          "reservationDate": "2022-11-30T00:00:00Z",
          "assigneeAccountId": "123d2495-a66c-4e23-befc-0aa9140fb123",
          "amount": 1,
          "paymentNetwork": "MASTERCARD"
        },
        "tags": [
          "Webhook Tag"
        ]
      }
      ```
      ## Depositary Bank Credit Reservation Operation Status
      |Status Code|Status Description|
      |----------|:-------------|
      |CREATED|Credit Reservation Operation was created.|
      |PROCESSING|The Settlement of the Credit Reservation Operation is being processed|
      |COMPLETED|The Settlement of the Credit Reservation Operation was successful|
      |CANCELLED|The Credit Reservation Operation was cancelled.|
      |ERROR|There was an error with the Credit Reservation Operation|

      ## Depositary Bank Credit Reservation Operation Error Codes

      |Error Code|HTTP Error Code|Error Description|
      |----------|:-------------|------|
      |PIE002|500|Some error has occurred.|
      |PAE001|401|Unauthorized operation.|
      |PAE001|403|Unauthorized operation.|
      |PBE1002|404|Credit Reservation Operation not found.|
      |PBE1003|400|Credit Reservation Operation exceeds the available future credits for the given date.|
      |PBE1007|400|Missing TaxId for the Given Card Issuer.|
      |PBE900|404|Assignee Account Not Found.|
  - name: Settlement Bank
    description: The following code represents the structure of a Settlement Service Webhook.
  - name: CCB Issuance
    description: |-
      Our Banking as a Service (BaaS) solution provides a comprehensive and innovative platform for the issuance of Bank Credit Bills (CCBs). With our service, financial institutions and fintechs can seamlessly integrate CCB issuance into their existing systems, offering a streamlined and secure credit experience for their clients.
      ### Benefits of Our Service:
      - **Easy Integration:** Easily connect with our robust API to issue CCBs without the need for your own banking infrastructure.
      - **Regulatory Compliance:** Ensure all operations are compliant with current regulations, providing security and transparency.
      - **Flexibility:** Customize CCB terms and conditions to meet the specific needs of your clients.
      - **Advanced Security:** Safeguard client data and transactions with our state-of-the-art security technologies.

      With our BaaS service, you can expand your credit offerings and meet the demand for financing solutions efficiently and effectively.
  - name: CCB Issuance (Product)
    description: Operations to obtain information about available CCB products. The details for each product, including issuance, settlement flows, contract terms and signatures, and assignment, are agreed upon in advance with our sales team.
  - name: CCB Issuance (Quotation)
    description: |-
      Operations for quoting the issuance of CCB, being able to simulate installments, rates and due dates.
                  
      ## CCB Issuance Quotation Status
      | Status Code |Status Description|
      |----------|:-------------|
      |CREATED|Quote created.|
      |ERROR|Validation failure or process error.|
  - name: CCB Issuance (Proposal)
    description: |-
      Operations for issuing and consulting CCBs. The issuance of CCBs will be made based on a prior quotation.
                  
      ## CCB Issuance Proposal Status
      | Status Code |Status Description|
      |----------|:-------------|
      |ENQUEUED|Request queued and awaiting processing.|
      |FUND_RESERVE_PROCESSING|Processing funds reservation.|
      |PENDING_SIGNATURE|Contract sent for signature.|
      |PARTIAL_SIGNED|Contract partially signed.|
      |SIGNATURE_CANCELED|Contract signature canceled.|
      |ISSUANCE_ENQUEUED|CCB issuance queued and awaiting processing.|
      |ISSUANCE_PROCESSING|Processing CCB issuance.|
      |SCHEDULED_DISBURSEMENT|Scheduled disbursement.|
      |COMPLETED|Complete disbursement and CCB issuance.|
      |ERROR|Validation failure or process error.|
  - name: CCB Issuance (Assignment)
    description: |-
      Operations to consult the CCBs assignment.
                  
      ## CCB Issuance Assignment Status
      | Status Code |Status Description|
      |----------|:-------------|
      |ENQUEUED|Request queued and awaiting processing.|
      |PENDING_SIGNATURE|Contract sent for signature.|
      |PARTIAL_SIGNED|Contract partially signed.|
      |SIGNATURE_CANCELED|Contract signature canceled.|
      |ASSIGNMENT_ENQUEUED|CCB issuance assignment queued and awaiting processing.|
      |ASSIGNMENT_PROCESSING|Processing CCB issuance assignment.|
      |COMPLETED|CCB issuance assignment completed.|            
      |ERROR|Validation failure or process error.|
  - name: Foreign Exchange Indicative Quotes
    description: This session handles all Foreign Exchange Indicative Quotes features and API methods.
  - name: Foreign Exchange Quotes
    description: |-
      This session handles all Foreign Exchange Quotes features and API methods. 


       ## Foreign Exchange Status
       
      |Status Code|Status Description|  
      |----------|:-------------|
      |CREATED|Quote was created| 
      |ACCEPTED|Quote was accepted|
      |VALIDATED|Quote was validated|
      |CALCULATING_TAXES|The trade taxes are being calculated| 
      |BASE_CURRENCY_SETTLED|Indicates that the trade impacted the account| 
      |SETTLED|Indicates that the trade was sent to the Banking Channel, this is a final status| 
      |CANCELLED|Quote was cancelled| 
      |ERROR|Indicates that some error has occured|
      |EXPIRED|Quote was expired| 
      |AMENDED|Indicates that the quote settlement dates have changed| 
      |PARTIAL_CANCELLATION|Indicates that part of the trade value has changed|

      ## Foreign Exchange Error Codes

      |Error Code|HTTP Error Code|Error Description|
      |----------|:-------------|------|
      |PIE002|500|Some error has occurred.|
      |PAE001|401|Unauthorized operation.|
      |PAE001|403|Unauthorized operation.|
      |PCE003|400|It is not allowed to buy from previous days.|
      |PCE003|400|Can't quote/trade desired currency using quote currency date lower then baseCurrency date.|
      |PCE002|400|Invalid Settlement Date.|
      |PCE003|400|Exceeded Cutoff hour.|
      |PBE701|400|Can't quote/trade desired amout, it exceeds the maximum allowed amount.|
      |PCE003|400|Can't quote/trade Euro on D0 interval, must be at least D1 e.g Tomorrow.|
      |PBE702|400|Can't quote/trade with closed Market.|
      |PCE003|400|Can't quote/trade when the BaseCurrency and QuoteCurrency the same.|
      |PBE706|400|Can't accept indicative quote.|
      |PCE003|400|Can't quote/trade if the Ordered Amount is lower or equals to 0.|
      |PCE003|400|Invalid quote request.|
      |PCE003|400|Can't quote/trade if the Ordered Amount is null.|
      |PCE003|400|Can't accept quote that was already accepted.|
      |PCE003|400|Can't quote/trade when the DeliveredCurrency isn't the same as BaseCurrency or QuoteCurrency.|
      |PBE709|400|Account not enabled for FX.|
      |PBE710|400|Banking Channel Deactivated.|
      |PBE712|400|Pre Ticket not found.|
      |PBE713|400|Pre Ticket not confirmed.|
      |PBE714|400|Nature of the pre-ticket does not match the nature informed in the request.|
      |PBE715|400|Pre-ticket clientId did not match the request's clientId.|
      |PBE716|400|The 'PreTicketPactualId' field is required in a non-indicative quote.|
      |PBE717|400|Pre-ticket operation side did not match the request's operation side.|
      |PCE003|400|Amount Currency must be equal to BaseCurrency or QuoteCurrency.|
      |PCE003|400|Exceeded Cutoff hour.|
      |PCE003|400|Currency not enabled.|
      |PBE720|400|There is no indicative price for this settlement date.|
      |PBE703|404|Account not found.|
      |PBE719|404|Banking Channel not found.|
      |PBE704|404|Quote not found or canceled.|
      |PBE705|404|Quote not found or doesn't exist.|
      |PBE708|400|External Account not found.|
      |PBE707|500|Can't quote/trade when there is no Market Data Available for trade.|
  - name: Foreign Exchange Aggregation
    description: 'This session handles Foreign Exchange Aggregation Webhook and Status. '
  - name: Foreign Exchange Pré-Ticket
    description: |-
      This session handles all Foreign Exchange Pré-Ticket features and API methods. 

      ## Foreign Exchange Pré-Ticket Status
      |Status Code|Status Description|
      |----------|:-------------|
      |CREATED|Pré-Ticket was created|
      |ENQUEUED|Pré-Ticket was sent to analysis queue|
      |PROCESSING|Pré-Ticket was sent to analysis|
      |BLOCKED|Pré-Ticket was blocked|
      |EXPIRED|Pré-Ticket has expired|
      |CONFIRMED|Pré-Ticket has been approved|

      ## Foreign Exchange Pré-Ticket Error Codes

      |Error Code|HTTP Error Code|Error Description|
      |----------|:-------------|------|
      |PIE002|500|Some error has occurred.|
      |PAE001|401|Unauthorized operation.|
      |PAE001|403|Unauthorized operation.|
      |PBE709|400|Account not enabled for FX.|
      |PBE710|400|Banking Channel Deactivated.|
      |PCE001|400|Can't quote/trade if the Ordered 'Amount' is lower or equals to 0.|
      |PBE1300|400|Bank account not found.|
      |PBE1312|400|Broker not found.|
      |PBE1317|400|Name of payer/receiver must be informed.|
      |PBE1318|400|Name or ID of payer/receiver must be informed.|
      |PBE1319|400|Nature of payer/receiver must be informed.|
      |PBE1320|400|Payer/receiver nature code not found.|
      |PBE1321|400|Country not allowed for pre-trade CDE.|
      |PBE1322|400|Country not allowed for beneficiary.|
      |PBE1324|400|Country must be informed.|
      |PBE1325|400|Currency was not found.|
      |PBE1326|400|Currency not allowed for the beneficiary.|
      |PBE1345|400|Beneficiary (receiver) ID must be informed.|
      |PBE1347|400|Beneficiary (payee) inactive.|
      |PBE1348|400|Beneficiary (Payee) not found.|
      |PBE1304|400|Exceeded approval limit.|
      |PBE1308|400|Bank account not eligible for CDE.|
      |PBE1313|400|Nature of the event must be informed.|
      |PBE1316|400|Payer/receiver account not registered.|
      |PBE1323|400|Customer not found.|
      |PBE1327|400|Pre-trade value exceeded currency precision limit.|
      |PBE1328|400|Customer not eligible for pre-trade CDE.|
      |PBE1329|400|Customer not registered as a Broker.|
      |PBE1333|400|Operation not found.|
      |PBE1336|400|Currency exchange currently unavailable.|
      |PBE1350|400|Pre-trade is already contracted.|
  - name: Foreign Exchange Banking Channel
    description: This session handles all Foreign Exchange Banking Channel features and API methods.
  - name: BolePix
    description: "This section refers to the bank slip product with pix QR Code. Allowing both forms of payment.\r\n## PaymentSlipPix Error Codes\r\n\r\n| Error Code |Error Name|Error Description|\r\n|----------|:-------------|------|\r\n|PBE202|BadRequest|An error occurred while requesting bankslip cancel/update to CIP.|\r\n|PBE200|BadRequest|Attempt after end time.|\r\n|PBE200|BadRequest|Attempt before end time.|\r\n|PBE200|BadRequest|Beneficiary doesnt exist.|\r\n|PBE200|BadRequest|Barcode is duplicate: Branch, account, NominalAmount, MaturityDate and OurNumber cant be the same for different bills.|\r\n|PBE202|BadRequest|Beneficiary incapable to issue Bankslip on CIP.|\r\n|PBE200|BadRequest|Cannot cancel or update bankslip in status.|\r\n|PBE200|BadRequest|Date larger than allowed.|\r\n|PBE200|BadRequest|Discount1 LimitDate cannot be before IssueDate.|\r\n|PBE200|BadRequest|Discount1 LimitDate cannot be greater/equal MaturityDate.|\r\n|PBE200|BadRequest|Discount1 PercentOrAmount must be smaller than NominalAmount.|\r\n|PBE200|BadRequest|Invalid Discount1 PercentOrAmount.|\r\n|PBE200|BadRequest|Discount2 LimitDate cannot be before IssueDate.|\r\n|PBE200|BadRequest|Discount2 LimitDate cannot be greater/equal MaturityDate.|\r\n|PBE200|BadRequest|Discount2 PercentOrAmount must be smaller than NominalAmount.|\r\n|PBE200|BadRequest|Invalid Discount2 PercentOrAmount.|\r\n|PBE200|BadRequest|Discount3 LimitDate cannot be before IssueDate.|\r\n|PBE200|BadRequest|Discount3 LimitDate cannot be greater/equal MaturityDate.|\r\n|PBE200|BadRequest|Discount3 PercentOrAmount must be smaller than NominalAmount.|\r\n|PBE200|BadRequest|Invalid Discount3 PercentOrAmount.|\r\n|PBE200|BadRequest|DocumentNumber value does not match DocumentType value.|\r\n|PBE200|BadRequest|DocumentNumber value does not match PersonType value.|\r\n|PBE200|BadRequest|Fine amount must be smaller than nominal amount.|\r\n|PBE200|BadRequest|Fine date cannot be before Maturity Date.|\r\n|PBE200|BadRequest|Invalid Fine percent.|\r\n|PBE200|BadRequest|For Discount1 Code different from Exempt, Discount1 LimitDate must be informed.|\r\n|PBE200|BadRequest|For Discount1 Code different from Exempt, Discount1 PercentOrAmount must be informed.|\r\n|PBE200|BadRequest|For Discount2 Code different from Exempt, Discount2 LimitDate must be informed.|\r\n|PBE200|BadRequest|For Discount2 Code different from Exempt, Discount2 PercentOrAmount must be informed.|\r\n|PBE200|BadRequest|For Discount3 Code different from Exempt, Discount3 LimitDate must be informed.|\r\n|PBE200|BadRequest|For Discount3 Code different from Exempt, Discount3 PercentOrAmount must be informed.|\r\n|PBE200|BadRequest|For Fine Code different of Exempt, Fine Date must be sent.|\r\n|PBE200|BadRequest|For Fine Code different of Exempt, Fine PercentOrAmount must be sent.|\r\n|PBE200|BadRequest|InitialDate must be sent.|\r\n|PBE200|BadRequest|For Interest Code different of exempt, PercentOrAmount must be sent.|\r\n|PBE200|BadRequest|For PersonType J, FantasyName is mandatory.|\r\n|PBE200|BadRequest|Interest InitialDate cannot be before MaturityDate.|\r\n|PBE200|BadRequest|Invalid Interest PercentOrAmount field.|\r\n|PBE200|BadRequest|Interest PercentOrAmount must be smaller than nominal amount.|\r\n|PBE200|BadRequest|Invalid format date.|\r\n|PBE200|BadRequest|Invalid guarantor drawer number.|\r\n|PBE200|BadRequest|Invalid guarantor drawer name.|\r\n|PBE200|BadRequest|MaturityDate must be greater or equal to issue date.|\r\n|PBE200|BadRequest|Max value to payment Bankslip can't be minor than Nominal Value.|\r\n|PBE200|BadRequest|Must be equal 1 for Credit Card payment.|\r\n|PBE200|BadRequest|Invalid format for Discount Amount.|\r\n|PBE200|BadRequest|Invalid format for Protest Days.|\r\n|PBE200|BadRequest|Must be numeric positive and different from zero.|\r\n|PBE200|BadRequest|PaymentLimitDate must be greater or equal to maturity date.|\r\n|PBE200|BadRequest|Invalid ProtestQuantityDays value.|\r\n|PBE200|BadRequest|ReductionAmount cant be greater/equal NominalAmount.|\r\n|PBE200|BadRequest|The API is disabled by flag.|\r\n|PBE200|BadRequest|The discount code of the bankslip must be equal in all informed discounts.|\r\n|PBE200|BadRequest|Bad format domain error.|\r\n|PBE200|BadRequest|TreatyId or DocumentNumber with PersonType is needed.|\r\n|PBE200|BadRequest|It's not possible to cancel this pay.|\r\n|PBE203|BadRequest|It's not possible to cancel this payment slip.|\r\n|PBE204|BadRequest|OverdueDate must be greater or equal to Duedate.|\r\n|PBE205|BadRequest|OverdueDate must be greater or equal to Duedate.|\r\n|PBE206|BadRequest|Cannot cancel bankslip with operational write off.|\r\n|PBE207|BadRequest|Cannot cancel bankslip with effective write off.|\r\n\r\n\r\n## PaymentSlipPix Webhook\r\nThe following code represents the structure of a PaymentSlipPix Webhook.\r\n\r\n```\r\n{\r\n    \"Body\": {\r\n        \"movementDetailPaymentSlip\": {\r\n            \"amountPaid\": 57,\r\n            \"authorizationId\": \"7204247190\",\r\n            \"movementDate\": \"2023-04-27\",\r\n            \"status\": \"PAID\"\r\n        },\r\n        \"movementDetailPix\": {\r\n            \"status\": \"CANCELED\"\r\n        },\r\n        \"paymentSlip\": {\r\n            \"amount\": 5700,\r\n            \"customer\": {\r\n                \"city\": \"Aracaju\",\r\n                \"name\": \"Leandro Cauê\",\r\n                \"neighborhood\": \"Inácio Barbosa\",\r\n                \"number\": \"932\",\r\n                \"stateCode\": \"SE\",\r\n                \"street\": \"Travessa Jordão\",\r\n                \"taxId\": \"89927567715\",\r\n                \"zipCode\": \"49041116\"\r\n            },\r\n            \"discount\": {\r\n                \"discount1\": {\r\n                    \"date\": \"2023-05-14\",\r\n                    \"type\": \"2\",\r\n                    \"value\": 0.5\r\n                },\r\n                \"discount2\": {\r\n                    \"date\": \"2023-05-15\",\r\n                    \"type\": \"2\",\r\n                    \"value\": 0.4\r\n                },\r\n                \"discount3\": {\r\n                    \"date\": \"2023-05-16\",\r\n                    \"type\": \"2\",\r\n                    \"value\": 0.15\r\n                }\r\n            },\r\n            \"fine\": {\r\n                \"code\": \"PERCENT\",\r\n                \"date\": \"2023-05-18\",\r\n                \"value\": 0.2\r\n            },\r\n            \"interest\": {\r\n                \"code\": \"PERCENTAGE_POINT_PER_MONTH_CALENDAR_DAYS\",\r\n                \"date\": \"2023-05-18\",\r\n                \"value\": 0.02\r\n            },\r\n            \"description\": \"Sr. Caixa, não aceitar o pagamento após o vencimento;\",\r\n            \"divergentAmountType\": 0,\r\n            \"dueDate\": \"2023-04-28\",\r\n            \"overdueDate\": \"2023-04-28\",\r\n            \"ourNumber\": \"21321231\",\r\n            \"partialPaymentMaxQuantity\": 0,\r\n            \"paymentType\": 0,\r\n            \"totalInstallments\": 0\r\n        },\r\n        \"pix\": {\r\n            \"discount\": {\r\n                \"discountDateFixed\": [\r\n                    {\r\n                        \"amountPerc\": \"0.50\",\r\n                        \"date\": \"2023-05-14\"\r\n                    },\r\n                    {\r\n                        \"amountPerc\": \"0.40\",\r\n                        \"date\": \"2023-05-15\"\r\n                    },\r\n                    {\r\n                        \"amountPerc\": \"0.40\",\r\n                        \"date\": \"2023-05-15\"\r\n                    }\r\n                ],\r\n                \"modality\": \"PERCENTAGE_DATE_REPORTED\"\r\n            },\r\n            \"fine\": {\r\n                \"amountPerc\": \"0.20\",\r\n                \"modality\": \"PERCENT\"\r\n            },\r\n            \"interest\": {\r\n                \"amountPerc\": \"0.02\",\r\n                \"modality\": \"PERCENTAGE_PER_MONTH_CALENDAR_DAYS\"\r\n            },\r\n            \"amount\": {\r\n                \"original\": \"57.00\"\r\n            },\r\n            \"calendar\": {\r\n                \"dueDate\": \"2023-04-28\",\r\n                \"expirationAfterPayment\": 1\r\n            },\r\n            \"debtor\": {\r\n                \"city\": \"Aracaju\",\r\n                \"cpf\": \"89927567715\",\r\n                \"name\": \"Leandro Cauê\",\r\n                \"postalCode\": \"49041116\",\r\n                \"publicArea\": \"Travessa Jordão\",\r\n                \"state\": \"SE\"\r\n            },\r\n            \"loc\": {\r\n                \"id\": \"0\",\r\n                \"merchant\": {\r\n                    \"city\": \"Ribeirão Pires\",\r\n                    \"name\": \"Comercio de Bebidas ME\"\r\n                },\r\n                \"type\": \"COBV\"\r\n            },\r\n            \"receiver\": {\r\n                \"city\": \"Ribeirão Pires\",\r\n                \"cnpj\": \"67264164000105\",\r\n                \"name\": \"Comercio de Bebidas ME.\",\r\n                \"postalCode\": \"09411500\",\r\n                \"publicArea\": \"Rodovia Índio Tibiriçá\",\r\n                \"state\": \"SP\"\r\n            }\r\n        }\r\n    },\r\n    \"ClientId\": \"b044707c-c103-4715-9e81-85b33be2e10f\",\r\n    \"ClientRequestId\": \"bb681dd0-f6df-48af-8813-ea1185699cf1\",\r\n    \"ClientRequestIdUniqueKey\": \"b044707c-c103-4715-9e81-85b33be2e10f_bb681dd0-f6df-48af-8813-ea1185699cf1\",\r\n    \"CreateTimestamp\": \"2023-04-27T21:30:49.1483021+00:00\",\r\n    \"Entity\": \"PaymentSlipPix\",\r\n    \"LastUpdateTimestamp\": \"2023-04-28T05:08:48.3738851+00:00\",\r\n    \"PactualId\": \"f91f8347-0732-48f6-a78c-7fe217521d62\",\r\n    \"Status\": \"PROCESSING || CREATED || PAID || CANCELED || REVERTED ||ERROR\",\r\n    \"Tags\": []\r\n}\r\n```"
  - name: BolePixSplit
    description: |-
      This section refers to the bank slip product with pix QR Code. ([CashIn Split](https://developer.btgpactual.com/doctr#tag/CashIn-Split))

      - CashIn Split is a service that allows you to configure rules ("splitters") for automatic generation of cash-out transactions. **([Click here for more details](https://developer.btgpactual.com/doctr#tag/CashIn-Split))**
    x-displayName: BolePix (CashIn Split)
  - name: SELIC
    description: This session handles all SELIC Quotes features and API methods.
  - name: LTR
    description: This session handles all LTR features and API methods.
  - name: DARF
    description: |-
      This session handles all DARF features and API methods.

      ## DARF Error Codes

      | Error Code |Error Name|Error Description|
      |----------|:-------------|------|
      |PIE002|InternalServerError|Some error has occurred.|
      |PBE8001|BadRequest|Invalid Credit.|
      |PBE8002|BadRequest|Inform fine and/or interest.|
      |PBE8003|BadRequest|First five positions must be zero.|
      |PBE8004|BadRequest|Invalid type of DARF.|
      |PBE8005|BadRequest|Invalid revenue code.|
      |PBE8006|BadRequest|Reference number must be a number and greater than zero.|

      ## DARF Status

      | Status Code |Status Description|
      |----------|:-------------|
      |ENQUEUED|Request with the contract Ok and waiting for processing.|
      |PROCESSING|Darf payment has been created and sent for processing.|
      |PAID|Darf payment was successful.|
      |ERROR|Internal error of data consistency validations.|

      ## DARF Webhook

      The following code represents the structure of a DARF Webhook.

      ```
      {
          "Body": {
              "creditParty": {
                  "account": "000000",
                  "bank": "208",
                  "branch": "1",
                  "taxId": "00000000000"
              },
              "darfContent": {
                  "dueDate": "2021-12-30",
                  "fineAmount": 0,
                  "interestAmount": 0,
                  "mainAmount": 1500,
                  "name": "BTG Pactual",
                  "personType": "F",
                  "referenceDate": "2021-11-30",
                  "taxId": "00000000000",
                  "treasuryRevenueCode": "TRC_0000",
                  "type": "N"
              },
              "debitParty": {
                  "account": "000000",
                  "accountType": "CC",
                  "bank": "208",
                  "branch": "1",
                  "name": "BTG Pactual",
                  "personType": "J",
                  "taxId": "00000000000000"
              },
              "movementId": "XPTO",
              "ReversalMovementId": "XPTO",
              "type": "DARF"
          },
          "ClientId": "123a1234-ab12-1fd2-123a-1aabec1bcrcc",
          "ClientRequestId": "H26HRHOBQOIHXHGUDQE463NMB4VNCMWD_bd89afbcd8844e54ac6507dfd42bdffg_CashIn",
          "CreateTimestamp": "2021-12-14T13:45:05.5447925+00:00",
          "Entity": "TaxDarfPayment",
          "PactualId": "123ab123-1234-12ab-12a1-1a123456a123",
          "Status": "ENQUEUED || PROCESSING || PAID || ERROR",
          "Tags": []
      }
      ```
  - name: GPS
    description: |-
      This session handles all GPS features and API methods.

      ## GPS Error Codes

      | Error Code |Error Name|Error Description|
      |----------|:-------------|------|
      |PIE002|InternalServerError|Some error has occurred.|
      |PBE8001|BadRequest|Invalid Credit.|
      |PBE8003|BadRequest|First five positions must be zero.|
      |PBE8007|BadRequest|Invalid GPS code.|
      |PBE8008|BadRequest|Month/year of payment reference incompatible with ATM/fine and interest value.|

      ## GPS Status

      | Status Code |Status Description|
      |----------|:-------------|
      |ENQUEUED|Request with the contract Ok and waiting for processing.|
      |PROCESSING|Gps payment has been created and sent for processing.|
      |PAID|Gps payment was successful.|
      |ERROR|Internal error of data consistency validations.|

      ## GPS Webhook

      The following code represents the structure of a GPS Webhook.

      ```
      {
          "Body": {
              "creditParty": {
                  "account": "000000",
                  "bank": "208",
                  "branch": "1",
                  "taxId": "00000000000"
              },
              "gpsContent": {
                  "anotherEntityAmount": 0,
                  "chargeAmount": 5611,
                  "competenceDate": 202112,
                  "gpsCode": "CODE_1104",
                  "inssAmount": 70769,
                  "name": "BTG Pactual",
                  "taxPayerIdentificationType": "PIS",
                  "taxPayerIdentifier": "00000000000000"
              },
              "debitParty": {
                  "account": "000000",
                  "accountType": "CC",
                  "bank": "208",
                  "branch": "1",
                  "name": "BTG Pactual",
                  "personType": "J",
                  "taxId": "00000000000000"
              },
              "movementId": "XPTO",
              "ReversalMovementId": "XPTO",
              "type": "GPS"
          },
          "ClientId": "123a1234-ab12-1fd2-123a-1aabec1bcrcc",
          "ClientRequestId": "H26HRHOBQOIHXHGUDQE463NMB4VNCMWD_bd89afbcd8844e54ac6507dfd42bdffg_CashIn",
          "CreateTimestamp": "2021-12-14T13:45:05.5447925+00:00",
          "Entity": "TaxGpsPayment",
          "PactualId": "123ab123-1234-12ab-12a1-1a123456a123",
          "Status": "ENQUEUED || PROCESSING || PAID || ERROR",
          "Tags": []
      }
      ```
  - name: GRU
    description: |-
      This session handles all GRU features and API methods.


      ## GRU Status

      | Status Code |Status Description|
      |----------|:-------------|
      |ENQUEUED|Request with the contract Ok and waiting for processing.|
      |PROCESSING|GRU payment has been created and sent for processing.|
      |PAID|GRU payment was successful.|
      |ERROR|Internal error of data consistency validations.|

      ## GRU Webhook

      The following code represents the structure of a GRU Webhook.

      ```
      {
          "Body": {
              "creditParty": {
                  "account": "000000",
                  "bank": "208",
                  "branch": "1",
                  "taxId": "00000000000"
              },
              "GruContent": {
                  "Description": "GRU Tax for the 12th month",
                  "DiscountAmount": 200,
                  "DueDate": "2022-02-28",
                  "FineAmount": 0,
                  "GruReferenceNumber": "00000",
                  "History": "History to be sent to the treasury",
                  "InterestAmount": 0,
                  "MainAmount": 1200,
                  "ManagingUnitCode": "00",
                  "Name": "BTG Pactual",
                  "OtherAddedAmount": 0,
                  "OtherDiscountAmount": 0,
                  "PersonType": "F",
                  "TaxId": "00000000000000",
                  "TreasureCollectionCode": "TCC_10000",
                  "YearMonth13Competency": 202012
              },
              "debitParty": {
                  "account": "000000",
                  "accountType": "CC",
                  "bank": "208",
                  "branch": "1",
                  "name": "BTG Pactual",
                  "personType": "J",
                  "taxId": "00000000000000"
              },
              "movementId": "XPTO",
              "ReversalMovementId": "XPTO",
              "type": "GRU"
          },
          "ClientId": "123a1234-ab12-1fd2-123a-1aabec1bcrcc",
          "ClientRequestId": "H26HRHOBQOIHXHGUDQE463NMB4VNCMWD_bd89afbcd8844e54ac6507dfd42bdffg_CashIn",
          "CreateTimestamp": "2021-12-14T13:45:05.5447925+00:00",
          "Entity": "TaxGruPayment",
          "PactualId": "123ab123-1234-12ab-12a1-1a123456a123",
          "Status": "ENQUEUED || PROCESSING || PAID || ERROR",
          "Tags": []
      }
      ```
  - name: Automatic Debit Issueing Authorization
    description: The following code represents the structure of a Automatic Debit Issueing Authorization Webhook.
  - name: Automatic Debit Issueing
    description: The following code represents the structure of a Automatic Debit Issueing Webhook.
  - name: Bills
    description: |-
      This session refers to all operations regarding Bar Code scanned values and payments. These types of payment have a digitable line value that must be passed on each requisition. The information regarding these transactions are recovered through the digitable line.
      > The image shows the status flow for processing a Payment Slip and it's multiple stages.


      ![Bill Status Flow](https://developer.btgpactual.com/images/bill_slip_flow_chart.png)
      ## Bill Error Codes

      | Error Code |Error Name|Error Description|
      |----------|:-------------|------|
      |PCE421|BadRequest|Digitable line or Barcode is invalid.|
      |PCE421|BadRequest|It is necessary to inform an amount for a payment.|
      |PBE434|BadRequest|Digitable line or Barcode not found.|
      |PCE422|BadRequest|The request is invalid.|
      |PCE423|BadRequest|Value not allowed.|
      |PCE424|BadRequest|Transaction received outside the accepted time grid.|
      |PCE425|BadRequest|Payment already done.|
      |PCE426|BadRequest|Payment not allowed.|
      |PCE427|BadRequest|DocumentNumber value does not match PersonType value.|
      |PCE428|BadRequest|Beneficiary doesn't exist.|
      |PCE429|BadRequest|The amount to be paid is invalid.|
      |PBE450|BadRequest|It is not possible to make this type of payment.|
      |PCE430|BadRequest|The amount to be paid is below the mininum allowed.|
      |PCE431|BadRequest|The amount to be paid is above the maximum allowed.|
      |PBE433|NotFound|Account not found.|
      |PCE432|BadRequest|Cannot pay a value different from the total value of an utilities bill.|
      |PBE435|BadRequest|BankSlip is already writed off.|
      |PBE436|BadRequest|BankSlip is blocked for payments.|
      |PBE437|BadRequest|BankSlip found and beneficiary unqualified at bill's issuer.|
      |PBE438|BadRequest|BankSlip found on base and beneficiary without registration.|
      |PBE439|BadRequest|BankSlip found on central base and beneficiary is under analysis at bill's issuer.|
      |PBE440|BadRequest|BankSlip exceed the limit of parcial payments.|
      |PBE441|BadRequest|Write off duplicated for BankSlip that does not allow parcial payments.|
      |PBE442|BadRequest|Operational write off already registered for BankSlip that does not allow parcial payments.|
      |PBE443|BadRequest|BankSlip exceeded the balance value for parcial payment to this kind of calculation model 04.|
      |PBE444|BadRequest|BankSlip found and beneficiary unqualified at different bill's issuer.|
      |PBE445|BadRequest|BankSlip found and beneficiary is under analysis at different bill's issuer.|
      |PBE446|InternalServerError|Start time Bill Payment invalid.|
      |PBE447|InternalServerError|End time Bill Payment invalid.|
      |PBE448|Forbidden|Bill Payment received after the cut-off time.|
      |PBE449|BadRequest|It is not possible to cancel the payment.|
      |PBE451|BadRequest|The payment amount does not match the payment details.|
      |PBE105|BadRequest|Insufficient funds.|

      ## Bill Status
      | Status Code |Status Description|
      |----------|:-------------|
      |ENQUEUED|Request with the contract Ok and waiting for processing.|
      |PROCESSING|Payment slip pay created an sent to CIP.|
      |ERROR|Internal error of data consistency validations.|
      |PROCESSING_PAYMENT|Payment slip pay was paid by the customer.|
      |PAID|The beneficiary has been credited to his BTG Pactual account for payment of the payment slip pay.|
      |REVERTED|The money was returned to de customer due to an error in the beneficiary account. Ex: inactive account.|
      |CANCELED|Payment slip was canceled by the customer.|
      |CONFIRMED|The beneficiary has been credited to his BTG Pactual account for payment of the payment slip pay.|

      ## Bill Webhook
      The following code represents the structure of a Bill Webhook.

      ```
      {
          "body": {
              "discount": 0,
              "issuer": "BANCO BTG",
              "receiverBankCode": 208,
              "paymentDate": "20210907",
              "amount": 100,
              "accountInformation": {
                  "cge": 0,
                  "account": 0,
                  "bank": 208,
                  "branch": 1,
                  "personType": "F",
                  "taxId": "00000000000",
                  "accountType": "CC",
                  "name": "XPTO"
              },
              "interest": 0,
              "consumer": "BAAS",
              "barcode": "03396873100002043389201551000306098360260102",
              "authentication": "d037773cc86d4548accf389c622aac94",
              "digitableLine": "033992015951000308703536543211022687310000204338",
              "fine": 0,
              "dueDate": "20210902",
              "beneficiary": {
                  "taxId": "0000000000000",
                  "name": "XPTO"
              },
              "movementId": "XPTO",
              "reversalMovementId": "XPTO"
          },
          "pactualId": "4436ee8f-a99d-43a5-9206-8555566a5bc",
          "clientRequestId": "12345a12-1a2b-12ab-1234-a12345a12a1a",
          "createTimestamp": "2021-01-01T01:01:01.1234567+00:00",
          "lastUpdateTimestamp": "2021-01-01T01:01:01.1234567+00:00",
          "entity": "PaymentSlipPay",
          "ErrorCode": "PIE002",
          "ErrorDescription": "Some error has occurred.",
          "status": "PROCESSING || PROCESSING_PAYMENT || CONFIRMED || PAID || REVERTED || CANCELED || ERROR",
          "tags": []
      }
      ```
  - name: CCME Investment
    description: "This session handles all CCME Investment features and API methods.\r\n\r\n## CCME Investment Status\r\n\r\n| Status Code |Status Description|\r\n|----------|:-------------|\r\n|ENQUEUED|Request with the contract Ok and waiting for processing.|\r\n|PROCESSING|Request is processing.|\r\n|TRANSFER_PROCESSING|Internal Transfer is processing.|\r\n|REVERSAL_TRANSFER_PROCESSING|Reversal Internal Transfer is processing.|\r\n|TRANSFER_PROCESSED|Internal Transfer was processed.|\r\n|INVESTMENT_PROCESSING|Investment is processing.|\r\n|INVESTMENT_PROCESSED|Investment was processed.|\r\n|REVERTING|Investment is reverting.|\r\n|REVERTED|Investment was reverted.|\r\n|ERROR|Internal error of data consistency validations.|\r\n\r\n## CCME Investment Error Codes\r\n\r\n| Error Code |Error Name|Error Description|\r\n|----------|:-------------|------|\r\n|PIE002|InternalServerError|Some error has occurred.|\r\n|PBE500|BadRequest|Transaction received out off time.|\r\n|PBE105|BadRequest|Insufficient funds.|\r\n|PBE315|BadRequest|Error in operation SME0001, errors: [ESME0001]|"
  - name: CCME Withdraw
    description: This session handles CCME Withdraw WebHook.
x-tagGroups:
  - name: Money Movements
    tags:
      - External Transfers
      - Internal Transfers
      - Generic Transfers
  - name: CashIn Split
    tags:
      - CashIn Split
      - CashIn Split (Rules)
      - CashIn Split (Transactions)
  - name: Payments
    tags:
      - Payment Slips
      - PaymentSlipsSplit
      - BolePix
      - BolePixSplit
      - Bills
      - DDA
  - name: Automatic Debit
    tags:
      - Automatic Debit Issueing Authorization
      - Automatic Debit Issueing
  - name: Top Up
    tags:
      - Top Up
  - name: Taxes Payment
    tags:
      - DARF
      - GPS
      - FGTS
      - GRU
  - name: CCB Issuance
    tags:
      - CCB Issuance
      - CCB Issuance (Product)
      - CCB Issuance (Quotation)
      - CCB Issuance (Proposal)
      - CCB Issuance (Assignment)
  - name: Clearing
    tags:
      - SELIC
      - LTR
  - name: CCME
    tags:
      - CCME Investment
      - CCME Withdraw
  - name: Depositary Bank
    tags:
      - Depositary Bank
  - name: Settlement Bank
    tags:
      - Settlement Bank
  - name: Foreign Exchange
    tags:
      - Foreign Exchange Indicative Quotes
      - Foreign Exchange Quotes
      - Foreign Exchange Aggregation
      - Foreign Exchange Netting
      - Foreign Exchange Pré-Ticket
      - Foreign Exchange Banking Channel
x-webhooks:
  settlement-service-webhook:
    post:
      summary: Status Update Webhooks
      description: |
        We send a webhook for every change in a Settlement status. The status might be:
            
        | Status | Description | Origin |
        |----------|:-------------|------|
        |CONFIRMED|Settlement operation was successfully processed|SLC0001, SLC0005|
        |DIVERGED|The operation has diverged|SLC0001, SLC0002R1, SLC0002R2|
        |ERROR|There was an error processing the operation|SLC0001, SLC0002R1, SLC0002R2, SLC0005|
        |RECEIVABLE_DISCOUNTING_STARTED|Started processing the SLC0005|SLC0005|
        |RECEIVABLE_DISCOUNTING_WAITING_BALANCE|No balance available for the payment. There will be automatic retries and, if there is enough balance, the process continues|SLC0005|

        Possible values for TpTranscSLC:

            
        | TpTranscSLC | Description |
        |:----------:|:-------------|
        |01|Indicates that a Card Issuer is paying an Acquirer|
        |02|Indicates that an Acquirer is paying an "Instituição Domicílio"|
        |03|Indicates that an "Instituição Domicílio" is returning a payment to the Acquirer|
        |04|Indicates that an Acquirer is returning to a Card Issuer|

        For more information regarding CIP canonical fields, please check the CIP documentation:  [Catálogo de Serviços do SFN](https://www.bcb.gov.br/content/estabilidadefinanceira/cedsfn/Catalogos/Catalogo_de_Servicos_do_SFN_Volume_II_Versao_506.pdf).
      operationId: settlement-service-webhook
      tags:
        - Settlement Bank
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SettlementServiceWebhook'
            examples:
              SLC0001:
                value:
                  pactualId: 12a1234a-12a1-12a1-aa12-a1ab1a123aaa
                  createTimestamp: '2023-01-01T00:00:00.0000000+00:00'
                  lastUpdateTimestamp: '2023-01-01T00:00:00.0000000+00:00'
                  entity: SettlementService
                  status: CONFIRMED
                  body:
                    IdMovto: 2023-01-01-SLC0001
                    IdentdLinhaBilat: 20230101MCC1234567
                    Amount: 1
                    BankBranchAccount: '208_1_1234'
                    CashDirection: CashIn
                    CodProdt: MCC
                    Description: LIQ CIP - VCC - PMTO CREDEN/SUBCREDEN PARA INST DOMICILIO
                    DtMovto: '2022-05-18'
                    MessageBody:
                      IdentdLinhaBilat: 20230101MCC1234567
                      CNPJNLiqdantCredtd: '30306294000145'
                      CNPJNLiqdantDebtd: '30306294000145'
                      ISPBIFCredtd: '30306294'
                      ISPBIFDebtd: '30306294'
                      NomCliCredtd: BTG Pactual
                      NomCliDebtd: BTG Pactual
                      TpDeb_Cred: D
                      TpTranscSLC: '02'
                      VlrLanc: 5.15
                    MovementId: '12345678'
                    NUOp: '12345678912345678912345'
                    Origin: SLC0001
              SLC0002R1:
                value:
                  pactualId: b6a132d0-92a4-41ba-9d5f-6ec9b7a0b996
                  createTimestamp: '2023-01-01T00:00:00.0000000+00:00'
                  lastUpdateTimestamp: '2023-01-01T00:00:00.0000000+00:00'
                  entity: SettlementService
                  status: DIVERGED
                  body:
                    IdMovto: 2023-01-01-SLC0002R1
                    IdentdLinhaBilat: 20230101MCP1234567
                    Amount: 1
                    BankBranchAccount: '208_1_1234'
                    CashDirection: CashIn
                    CodProdt: DVRG
                    Description: LIQ CIP - MCP - PMTO EMISSOR PARA CREDEN
                    DtMovto: '2023-01-01'
                    MessageBody:
                      IdentdLinhaBilat: 20230101MCP1234567
                      sitLancSLC: '1'
                    NUOp: '12345678912345678912345'
                    Origin: SLC0002R1
              SLC0002R2:
                value:
                  pactualId: 1631441f-5d7a-4fb7-a730-d89f76f5ba71
                  createTimestamp: '2023-01-01T00:00:00.0000000+00:00'
                  lastUpdateTimestamp: '2023-01-01T00:00:00.0000000+00:00'
                  entity: SettlementService
                  status: DIVERGED
                  body:
                    IdMovto: 2023-01-01-SLC0002R2
                    IdentdLinhaBilat: 20230101VCC1234567
                    Amount: 1
                    BankBranchAccount: '208_1_1234'
                    CashDirection: CashIn
                    CodProdt: DVRG
                    Description: LIQ CIP - VCC - PMTO EMISSOR PARA CREDEN
                    DtMovto: '2023-01-01'
                    MessageBody:
                      IdentdLinhaBilat: 20230101VCC1234567
                      tpDivgcLinhaBilat: '2'
                    NUOp: '12345678912345678912345'
                    Origin: SLC0002R2
              SLC0005:
                value:
                  pactualId: 11957f02-1c74-42e3-8c93-b557f834c4d8
                  createTimestamp: '2023-01-01T00:00:00.0000000+00:00'
                  lastUpdateTimestamp: '2023-01-01T00:00:00.0000000+00:00'
                  entity: SettlementService
                  status: CONFIRMED
                  body:
                    IdMovto: 2023-01-01-SLC0005
                    IdentdLinhaBilat: '20230101123456789123'
                    Amount: 1
                    BankBranchAccount: '208_1_1234'
                    CashDirection: CashOut
                    CodProdt: ANTR
                    DtMovto: '2023-01-01'
                    MessageBody:
                      CNPJNLiqdantCredtd: '30306294000145'
                      CNPJNLiqdantDebtd: '30306294000145'
                      CodMsg: SLC0005
                      DescAtv: ANTR
                      DtHrSLC: '2023-01-01T00:00:00'
                      DtMovto: '2023-01-01'
                      IndrDevLiquid: 'N'
                      ISPBIF: '30306294'
                      ISPBIFCredtd: '30306294'
                      ISPBIFDebtd: '30306294'
                      NomArqSLC: ASLC032_12345678_20230101_00055
                      NomCliCredtd: BTG Pactual
                      NomCliDebtd: BTG Pactual
                      NumCtrlEmissorArq: '20230101123456789456'
                      NumCtrlLTROr: '20230101123456789123'
                      NumCtrlSLC: '20230101123456789789'
                      SubTpAtv: ANTR
                      TpDeb_Cred: D
                      VlrLanc: 1
                    MovementId: '12345678'
                    NUOp: '12345678912345678912345'
                    Origin: SLC0005
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  foreign-exchange-webhook:
    post:
      summary: Status Update Webhooks
      description: |
        We send a webhook for every change in a Foreign Exchange status. You can check de possible  status values [here](#section/Foreign-Exchange-Status).

        You can sign this webhook in the logged area of this portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity ```ForeignExchange```.
        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.

        For more information on webhooks, see the [Webhook Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: foreign-exchange-webhook
      tags:
        - Foreign Exchange Quotes
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForeignExchangeWebhook'
            examples:
              SETTLED:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: SETTLED
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    movementId: '4482528'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    BacenIdentification: '4906769'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    aggregationDateTime: '2022-12-22T18:00:00.0000000-03:00'
                    amountCurrency: USD
                    taxes:
                      iof: '4002875'
                      irrf: '4002874'
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
              ACCEPTED:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: ACCEPTED
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    amountCurrency: USD
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
              VALIDATED:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: VALIDATED
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    amountCurrency: USD
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
              CALCULATING_TAXES:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: CALCULATING_TAXES
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    BacenIdentification: '4906769'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    amountCurrency: USD
                    taxes:
                      iof: '4002875'
                      irrf: '4002874'
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
              BASE_CURRENCY_SETTLED:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: BASE_CURRENCY_SETTLED
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    movementId: '4482528'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    BacenIdentification: '4906769'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    amountCurrency: USD
                    taxes:
                      iof: '4002875'
                      irrf: '4002874'
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
              CREATED:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: CREATED
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    amountCurrency: USD
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
              ERROR:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: ERROR
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    amountCurrency: USD
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
              EXPIRED:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: EXPIRED
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    amountCurrency: USD
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
              AMENDED:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: AMENDED
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-27T00:00:00+00:00'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    PreviousBaseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    PreviousQuoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-27T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    amountCurrency: USD
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
              PARTIAL_CANCELLATION:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: PARTIAL_CANCELLATION
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    amountCurrency: USD
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
              CANCELLED:
                value:
                  pactualId: 53f6d1bd-b22d-4459-a0a7-e3ba8dfd8e9a
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: 4ad17514-0aa7-4fbe-ba6b-4518695fe059
                  createTimestamp: '2022-12-26T16:39:50.6211702+00:00'
                  lastUpdateTimestamp: '2022-12-27T17:51:18.5131974+00:00'
                  entity: ForeignExchange
                  status: CANCELLED
                  body:
                    isManagerialOnly: 'false'
                    acceptTimestamp: '2022-12-26T16:40:07.6590559Z'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: '106.43'
                    baseCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    preTicketPactualId: 3f252f79-8f7d-4a07-b9c4-899458a80fcd
                    quoteTimestamp: '2022-12-26T16:39:50.6185305Z'
                    quoteCurrency: BRL
                    unitPrice: '5.203'
                    quoteCurrencySettlementDate: '2022-12-26T00:00:00+00:00'
                    expirationDate: '2022-12-26T16:41:50.082545Z'
                    amountCurrency: USD
                    indicative: 'false'
                    total: '553.75'
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    baseCurrency: USD
                  tag: string
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  foreign-exchange-aggregation-webhook:
    post:
      summary: Status Update Webhooks
      description: |
        We send a webhook for every change in a Foreign Exchange Aggregation status. The status might be:

        |Status Code|Status Description|  
        |----------|:-------------|
        |ENQUEUED|Quote group was enqueued| 
        |VALIDATED|Quote group was validated|  
        |CALCULATING_TAXES|The trade taxes are being calculated| 
        |BASE_CURRENCY_SETTLED|Indicates that the trade impacted the account| 
        |SETTLED|Indicates that the trade was sent to the Banking Channel, this is a final status| 
        |CANCELLED|Indicates that the trade was cancelled| 
        |AMENDED|Indicates that the trade settlement dates have changed| 
        |PARTIAL_CANCELLATION|Indicates that part of the trade value has changed| 

        You can sign this webhook in the logged area of this portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity ```ForeignExchangeAggregation```.
        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.

        For more information on webhooks, see the [Webhook Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: foreign-exchange-aggregation-webhook
      tags:
        - Foreign Exchange Aggregation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForeignExchangeAggregationWebhook'
            examples:
              SETTLED:
                value:
                  pactualId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: e0cf18ee-dabb-49d1-8c93-031c38b940f8
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeAggregation
                  status: SETTLED
                  body:
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    preTicketPactualId: 11d74cac-1cc1-4b6d-b341-856b6d8fb6d0
                    baseCurrency: USD
                    isManagerialOnly: false
                    quoteCurrencyTotalAmount: 1392014.08
                    baseCurrencyTotalAmount: 248999.99
                    BacenIdentification: '4906769'
                    quoteCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    operationSide: BUY
                    meanTax: 5.590418
                    movementId: '4482528'
                    quoteCurrency: BRL
                    baseCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    totalQuotes: 1245
                    taxes:
                      iof: '4002875'
                      irrf: '4002874'
                    aggregationDateTime: '2024-05-16T18:00:00.0000000-03:00'
                    uniqueTransactionReferences:
                      - e8419b42-95d5-460a-baf0-9400e9370b06
                      - 2e2c1d00-2e24-431a-a0b2-77e5165f8441
                  tags: string
              BASE_CURRENCY_SETTLED:
                value:
                  pactualId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: e0cf18ee-dabb-49d1-8c93-031c38b940f8
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeAggregation
                  status: BASE_CURRENCY_SETTLED
                  body:
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    preTicketPactualId: 11d74cac-1cc1-4b6d-b341-856b6d8fb6d0
                    baseCurrency: USD
                    isManagerialOnly: false
                    quoteCurrencyTotalAmount: 1392014.08
                    baseCurrencyTotalAmount: 248999.99
                    BacenIdentification: '4906769'
                    quoteCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    operationSide: BUY
                    meanTax: 5.590418
                    movementId: '4482528'
                    quoteCurrency: BRL
                    baseCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    totalQuotes: 1245
                    taxes:
                      iof: '4002875'
                      irrf: '4002874'
                    aggregationDateTime: '2023-07-27T00:00:00.000Z'
                  tags: string
              VALIDATED:
                value:
                  pactualId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: e0cf18ee-dabb-49d1-8c93-031c38b940f8
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeAggregation
                  status: VALIDATED
                  body:
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    preTicketPactualId: 11d74cac-1cc1-4b6d-b341-856b6d8fb6d0
                    baseCurrency: USD
                    isManagerialOnly: false
                    quoteCurrencyTotalAmount: 1392014.08
                    baseCurrencyTotalAmount: 248999.99
                    quoteCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    operationSide: BUY
                    meanTax: 5.590418
                    quoteCurrency: BRL
                    baseCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    totalQuotes: 1245
                    aggregationDateTime: '2023-07-27T00:00:00.000Z'
                  tags: string
              CALCULATING_TAXES:
                value:
                  pactualId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: e0cf18ee-dabb-49d1-8c93-031c38b940f8
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeAggregation
                  status: CALCULATING_TAXES
                  body:
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    preTicketPactualId: 11d74cac-1cc1-4b6d-b341-856b6d8fb6d0
                    baseCurrency: USD
                    isManagerialOnly: false
                    quoteCurrencyTotalAmount: 1392014.08
                    baseCurrencyTotalAmount: 248999.99
                    BacenIdentification: '4906769'
                    quoteCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    operationSide: BUY
                    meanTax: 5.590418
                    quoteCurrency: BRL
                    baseCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    totalQuotes: 1245
                    taxes:
                      iof: '4002875'
                      irrf: '4002874'
                    aggregationDateTime: '2023-07-27T00:00:00.000Z'
                  tags: string
              AMENDED:
                value:
                  pactualId: decb2a62-2bd5-4342-bb542bc7-5d15af46
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: e0cf18ee-dabb-49d1-8c93-031c38b940f8
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeAggregation
                  status: AMENDED
                  body:
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    preTicketPactualId: 11d74cac-1cc1-4b6d-b341-856b6d8fb6d0
                    baseCurrency: USD
                    isManagerialOnly: false
                    quoteCurrencyTotalAmount: 1392014.08
                    baseCurrencyTotalAmount: 248999.99
                    BacenIdentification: '4906769'
                    quoteCurrencySettlementDate: '2024-05-17T00:00:00+00:00'
                    operationSide: BUY
                    PreviousBaseCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    PreviousQuoteCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    meanTax: 5.590418
                    quoteCurrency: BRL
                    baseCurrencySettlementDate: '2024-05-17T00:00:00+00:00'
                    totalQuotes: 1245
                    aggregationDateTime: '2023-07-27T00:00:00.000Z'
                  tags: string
              PARTIAL_CANCELLATION:
                value:
                  pactualId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: e0cf18ee-dabb-49d1-8c93-031c38b940f8
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeAggregation
                  status: PARTIAL_CANCELLATION
                  body:
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    preTicketPactualId: 11d74cac-1cc1-4b6d-b341-856b6d8fb6d0
                    baseCurrency: USD
                    isManagerialOnly: false
                    quoteCurrencyTotalAmount: 1092014.08
                    baseCurrencyTotalAmount: 195336.75
                    quoteCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    operationSide: BUY
                    meanTax: 5.590418
                    quoteCurrency: BRL
                    baseCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    totalQuotes: 1245
                    aggregationDateTime: '2023-07-27T00:00:00.000Z'
                  tags: string
              CANCELLED:
                value:
                  pactualId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  pactualBulkId: decb2a62-2bd5-4342-bb54-52bc7d15af46
                  clientRequestId: e0cf18ee-dabb-49d1-8c93-031c38b940f8
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeAggregation
                  status: CANCELLED
                  body:
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    preTicketPactualId: 11d74cac-1cc1-4b6d-b341-856b6d8fb6d0
                    baseCurrency: USD
                    isManagerialOnly: false
                    quoteCurrencyTotalAmount: 1392014.08
                    baseCurrencyTotalAmount: 248999.99
                    quoteCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    operationSide: BUY
                    meanTax: 5.590418
                    quoteCurrency: BRL
                    baseCurrencySettlementDate: '2024-05-16T00:00:00+00:00'
                    totalQuotes: 1245
                    aggregationDateTime: '2023-07-27T00:00:00.000Z'
                  tags: string
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  foreign-exchange-pre-ticket-webhook:
    post:
      summary: Status Update Webhooks
      description: |
        We send a webhook for every change in a Foreign Exchange Pre Ticket status. You can check de possible  status values [here](#section/Foreign-Exchange-Pre-Ticket-Status).

        You can sign this webhook in the logged area of this portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity ```ForeignExchangePreTicket```.
        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.

        For more information on webhooks, see the [Webhook Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: foreign-exchange-pre-ticket-webhook
      tags:
        - Foreign Exchange Pré-Ticket
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForeignExchangePreTicketWebhook'
            examples:
              CONFIRMED:
                value:
                  pactualId: cf475ca5-78d3-4bb0-8366-863d939e9e16
                  clientRequestId: a32561b3-6407-4a9d-83ce-5db82eb05f3e
                  createTimestamp: '2022-12-09T14:31:26.9173822+00:00'
                  lastUpdateTimestamp: '2022-12-09T17:58:28.9151241+00:00'
                  entity: ForeignExchangePreTicket
                  status: CONFIRMED
                  body:
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    amount: 1000
                    availableBalance: 800
                    bankingChannelId: 004f61af7d1846cb8dceadbf0090902c
                    bacenNature:
                      codeOperationNature: 12012
                      relationshipNature: 20
                      payerNature: 5
                      clientNature: '09'
                      avalNature: 'N'
                      groupNature: 90
                    baseCurrency: BRL
                    additionaInformation: Test
                    countryCode: US
                    beneficiary: GRG
                  tags: string
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  foreign-exchange-netting-webhook:
    post:
      summary: Status Update Webhooks
      description: |
        We send a webhook for every change in a Foreign Exchange Netting status. The status might be:

        |Status Code|Status Description|  
        |----------|:-------------|
        |CREATED|Indicates that the netting was created| 
        |AWAITING_SWIFT_CODE|Indicates that netting processe is waiting for the client to send the swIft|  
        |ENQUEUED|Indicates that the netting is enqueued| 
        |PROCESSING|Indicates that netting is being processed| 
        |SETTLED|Indicates that netting has finished, this is a final status| 
        |INSUFFICIENT_BALANCE|Indicates that the amount the client has in account is insufficient|
        |ERROR|Indicates that the netting was rejected| 
        |CANCELED|Indicates that the netting was canceled| 

        You can sign this webhook in the logged area of this portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity ```ForeignExchangeNetting```.
        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.

        For more information on webhooks, see the [Webhook Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: foreign-exchange-netting-webhook
      tags:
        - Foreign Exchange Netting
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForeignExchangeNettingWebhook'
            examples:
              SETTLED:
                value:
                  pactualId: 35fda7e1-f234-423c-8ad3-a77ad8c97f7b
                  clientRequestId: 62c85fe5-9a6c-46cf-b877-95fc1d3f39ef
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeNetting
                  status: SETTLED
                  body:
                    baseCurrencyTotalAmount: 1847
                    movementIds:
                      1fc646eb-aa91-c2b8-b002-b288485fc118: '4002275'
                      abc27a94-eac3-4ab0-ba6d-3d015a6d7ea8: '4482928'
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: SELL
                    meanTax: 4.945559
                    settlementDate: '2024-01-17'
                    SwiftReference: NTG18
                    currency: USD
                    quoteCurrencyTotalAmount: 9134.45
                    totalQuotes: 1847
                  tags: string
              CREATED:
                value:
                  pactualId: 35fda7e1-f234-423c-8ad3-a77ad8c97f7b
                  clientRequestId: 62c85fe5-9a6c-46cf-b877-95fc1d3f39ef
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeNetting
                  status: CREATED
                  body:
                    baseCurrencyTotalAmount: 1847
                    movementIds: {}
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: SELL
                    meanTax: 4.945559
                    settlementDate: '2024-01-17'
                    currency: USD
                    quoteCurrencyTotalAmount: 9134.45
                    totalQuotes: 1847
                  tags: string
              AWAITING_SWIFT_CODE:
                value:
                  pactualId: 35fda7e1-f234-423c-8ad3-a77ad8c97f7b
                  clientRequestId: 62c85fe5-9a6c-46cf-b877-95fc1d3f39ef
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeNetting
                  status: AWAITING_SWIFT_CODE
                  body:
                    baseCurrencyTotalAmount: 1847
                    movementIds: {}
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: SELL
                    meanTax: 4.945559
                    settlementDate: '2024-01-17'
                    currency: USD
                    quoteCurrencyTotalAmount: 9134.45
                    totalQuotes: 1847
                  tags: string
              ENQUEUED:
                value:
                  pactualId: 35fda7e1-f234-423c-8ad3-a77ad8c97f7b
                  clientRequestId: 62c85fe5-9a6c-46cf-b877-95fc1d3f39ef
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeNetting
                  status: ENQUEUED
                  body:
                    baseCurrencyTotalAmount: 1847
                    movementIds: {}
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: SELL
                    meanTax: 4.945559
                    settlementDate: '2024-01-17'
                    currency: USD
                    quoteCurrencyTotalAmount: 9134.45
                    totalQuotes: 1847
                  tags: string
              PROCESSING:
                value:
                  pactualId: 35fda7e1-f234-423c-8ad3-a77ad8c97f7b
                  clientRequestId: 62c85fe5-9a6c-46cf-b877-95fc1d3f39ef
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeNetting
                  status: PROCESSING
                  body:
                    baseCurrencyTotalAmount: 1847
                    movementIds: {}
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: SELL
                    meanTax: 4.945559
                    settlementDate: '2024-01-17'
                    currency: USD
                    quoteCurrencyTotalAmount: 9134.45
                    totalQuotes: 1847
                  tags: string
              ERROR:
                value:
                  pactualId: 35fda7e1-f234-423c-8ad3-a77ad8c97f7b
                  clientRequestId: 62c85fe5-9a6c-46cf-b877-95fc1d3f39ef
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeNetting
                  status: ERROR
                  body:
                    baseCurrencyTotalAmount: 1847
                    movementIds: {}
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: SELL
                    meanTax: 4.945559
                    settlementDate: '2024-01-17'
                    currency: USD
                    quoteCurrencyTotalAmount: 9134.45
                    totalQuotes: 1847
                  tags: string
              INSUFFICIENT_BALANCE:
                value:
                  pactualId: 35fda7e1-f234-423c-8ad3-a77ad8c97f7b
                  clientRequestId: 62c85fe5-9a6c-46cf-b877-95fc1d3f39ef
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeNetting
                  status: INSUFFICIENT_BALANCE
                  body:
                    baseCurrencyTotalAmount: 1847
                    movementIds: {}
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: BUY
                    meanTax: 4.945559
                    settlementDate: '2024-01-17'
                    currency: USD
                    quoteCurrencyTotalAmount: 9134.45
                    totalQuotes: 1847
                  tags: string
              CANCELED:
                value:
                  pactualId: 35fda7e1-f234-423c-8ad3-a77ad8c97f7b
                  clientRequestId: 62c85fe5-9a6c-46cf-b877-95fc1d3f39ef
                  createTimestamp: '2023-07-27T03:10:58.848Z'
                  lastUpdateTimestamp: '2023-07-27T03:10:58.848Z'
                  entity: ForeignExchangeNetting
                  status: CANCELED
                  body:
                    baseCurrencyTotalAmount: 1847
                    movementIds: {}
                    accountId: a75f68fa-85b0-4cb3-822e-d253844f57b7
                    operationSide: SELL
                    meanTax: 4.945559
                    settlementDate: '2024-01-17'
                    currency: USD
                    quoteCurrencyTotalAmount: 9134.45
                    totalQuotes: 1847
                  tags: string
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  ccme-investment-webhook:
    post:
      summary: CCME Investment Webhooks
      operationId: ccme-investment-webhook
      description: The following code represents the structure of a CCME Investment Webhook.
      tags:
        - CCME Investment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcmeGetResponse'
  ccme-reversal-investment-webhook:
    post:
      summary: CCME Reversal Investment Webhooks
      operationId: ccme-reversal-investment-webhook
      description: The following code represents the structure of a CCME Reversal Investment Webhook.
      tags:
        - CCME Investment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcmeReversalInvestmentWH'
  ccme-withdraw-webhook:
    post:
      summary: CCME Withdraw Webhooks
      operationId: ccme-withdraw-webhook
      description: The following code represents the structure of a CCME Withdraw Webhook.
      tags:
        - CCME Withdraw
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcmeWithdrawWh'
  cashin-split-webhook:
    post:
      summary: Webhooks (CashinSplitTransaction)
      description: |
        We send a webhook for every change in a CashIn Split Transactions status. You can check de possible  status values [here](#section/CashIn-Split-Transactions-Status).

        You can sign this webhook in the logged area of this portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity ```CashinSplitTransaction```.
        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.

        For more information on webhooks, see the [Webhook Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: cashin-split-webhook
      tags:
        - CashIn Split (Transactions)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CspSplitTransactionEntityEnvelope'
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  cashin-split-rule-mng-webhook:
    post:
      summary: Webhooks (CashinSplitManagedRule)
      description: |
        We send a webhook for every change in a CashIn Split Managed Rule status. You can check de possible  status values [here](#section/CashIn-Split-Rules-Status).

        You can sign this webhook in the logged area of this portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity ```CashinSplitManagedRule```.
        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.

        For more information on webhooks, see the [Webhook Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: cashin-split-rule-mng-webhook
      tags:
        - CashIn Split (Rules)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CspManagedRuleEntityEnvelope'
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  cashin-split-rule-os-webhook:
    post:
      summary: Webhooks (CashinSplitOneshotRule)
      description: |
        We send a webhook for every change in a CashIn Split Oneshot Rule status. You can check de possible  status values [here](#section/CashIn-Split-Rules-Status).

        You can sign this webhook in the logged area of this portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity ```CashinSplitOneshotRule```.
        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.

        For more information on webhooks, see the [Webhook Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: cashin-split-rule-os-webhook
      tags:
        - CashIn Split (Rules)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CspOneShotRuleEntityEnvelope'
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
          HashSignature: []
  ccb-issuance-quotation-webhook:
    post:
      summary: Webhooks (CcbIssuanceQuotation)
      description: |
        We send a webhook for every change in a CCB Issuance Quotation status. You can check de possible status values [here](#section/CCB-Issuance-Quotation-Status).

        You can sign this webhook in the logged area of this portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity ```CcbIssuanceQuotation```.
        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.

        For more information on webhooks, see the [Webhook Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: ccb-issuance-quotation-webhook
      tags:
        - CCB Issuance (Quotation)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcbIssuanceQuotationEntityEnvelope'
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  ccb-issuance-proposal-webhook:
    post:
      summary: Webhooks (CcbIssuanceProposal)
      description: |
        We send a webhook for every change in a CCB Issuance Proposal status. You can check de possible status values [here](#section/CCB-Issuance-Proposal-Status).

        You can sign this webhook in the logged area of this portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity ```CcbIssuanceProposal```.
        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.

        For more information on webhooks, see the [Webhook Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: ccb-issuance-proposal-webhook
      tags:
        - CCB Issuance (Proposal)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcbIssuanceProposalEntityEnvelope'
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  ccb-issuance-assignment-webhook:
    post:
      summary: Webhooks (CcbIssuanceAssignment)
      description: |
        We send a webhook for every change in a CCB Issuance Assignment status. You can check de possible status values [here](#section/CCB-Issuance-Assignment-Status).

        You can sign this webhook in the logged area of this portal or via [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity ```CcbIssuanceAssignment```.
        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.

        For more information on webhooks, see the [Webhook Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: ccb-issuance-assignment-webhook
      tags:
        - CCB Issuance (Assignment)
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CcbIssuanceAssignmentEntityEnvelope'
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  automatic-debit-issueing-authorization-webhook:
    post:
      summary: Automatic Debit Issueing Authorization WebHook
      description: |
        This session handles all Automatic Debit Issueing Authorization features and API methods. The status might be:
        Automatic Debit Issueing Authorization Errors

        |Error Code|HTTP Status Code|Error Description|
        |----------|-------------|:------|
        |PIE002|500|Some error has occurred.|
        |PCE005|400|Duplicated clientRequestId.|
        |PCE002|400|The field 'Client.DocumentNumber' is required - CPF (11 digits) or CNPJ (14 digits), fill with zeros left of the number if necessary.|
        |PBE001|400|Invalid status for authorization cancel.|
        |PBE1501|404|No product found.|
        |PBE1503|404|Unable to Retrieve Client Information.|
        |PBE1504|400|Invalid Account.|
        |PBE1509|400|There is already an active authorization.|

        Automatic Debit Issueing Authorization Status

        |Status Code|Status Description|
        |----------|:-------------|
        |ENQUEUED|Automatic Debit Issueing Authorization is enqueued.|
        |AWAITING_APPROVAL|Automatic Debit Issueing Authorization is awaiting for customer approval.|
        |CONFIRMED|Automatic Debit Issueing Authorization settlement is confirmed.|
        |CANCELED|Automatic Debit Issueing Authorization settlement is canceled. This status can ONLY be set AFTER the authorization was CONFIRMED.|
        |REJECTED|Automatic Debit Issueing Authorization request is rejected.|
        |ERROR|Automatic Debit Authorization Issueing has an error.|

        You can sign this webhook in the logged area of this portal or via
            [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity
            ```AtdAuthorization```.

        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.

        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.
        For more information on webhooks, see the [Webhook
            Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: automatic-debit-issueing-authorization-webhook
      tags:
        - Automatic Debit Issueing Authorization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomaticDebitIssueingAuthorization'
            examples:
              ENQUEUED:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdAuthorization,
                  status: ENQUEUED,
                  body:
                    product:
                      code: LIFE_10
                    client:
                      account:
                        type: CC,
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              AWAITING_APPROVAL:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdAuthorization,
                  status: AWAITING_APPROVAL,
                  body:
                    product:
                      code: LIFE_10
                    client:
                      account:
                        type: CC,
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              CONFIRMED:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdAuthorization,
                  status: CONFIRMED,
                  body:
                    product:
                      code: LIFE_10
                    client:
                      account:
                        type: CC,
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              CANCELED:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdAuthorization,
                  status: CANCELED,
                  body:
                    product:
                      code: LIFE_10
                    client:
                      account:
                        type: CC,
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              REJECTED:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdAuthorization,
                  status: REJECTED,
                  body:
                    product:
                      code: LIFE_10
                    client:
                      account:
                        type: CC,
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              ERROR:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdAuthorization,
                  status: ERROR,
                  body:
                    product:
                      code: LIFE_10
                    client:
                      account:
                        type: CC,
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
  automatic-debit-issueing-webhook:
    post:
      summary: Automatic Debit Issueing WebHook
      description: |
        This session handles all Automatic Debit Issueing features and API methods. The status might be:
        Automatic Debit Issueing Errors

        |Error Code|HTTP Status Code|Error Description|
        |----------|-------------|:------|
        |PIE002|500|Some error has occurred.|
        |PCE005|400|Duplicated clientRequestId.|
        |PCE002|400|The field 'Client.DocumentNumber' is required - CPF (11 digits) or CNPJ (14 digits), fill with zeros left of the number if necessary.|
        |PCE002|400|There must be at least one discount per billing.|
        |PCE002|400|Invalid discount type.|
        |PCE002|400|Invalid date with the format yyyy-MM-dd. Ex.: 2020-03-10.|
        |PCE002|400|The 'BillingDate' field must be greater than today's date.|
        |PBE001|400|Invalid status for billing cancel.|
        |PBE001|400|Invalid status for billing chargeback.|
        |PBE1501|404|No product found.|
        |PBE1502|404|Authorization ID Not Found.|
        |PBE1503|404|Unable to Retrieve Client Information.|
        |PBE1504|400|Invalid Account.|
        |PBE1505|400|Billing Cannot be canceled.|
        |PBE1506|400|Billing Cannot be charged.|
        |PBE1507|400|Billing is incactive.|
        |PBE1508|400|Invalid billing date.|
        |PBE1510|400|Wrong tax aliquot.|
        |PBE1511|400|Wrong tax absolute value.|
        |PBE1512|400|Invalid signature date.|


        Automatic Debit Issueing Status

        |Status Code|Status Description|
        |----------|:-------------|
        |ENQUEUED|Automatic Debit Issueing is enqueued.|
        |SCHEDULED|Automatic Debit Issueing is scheduled.|
        |PROCESSING|Automatic Debit Issueing is processing the settlement.|
        |CONFIRMED|Automatic Debit Issueing settlement is confirmed.|
        |CANCELED|Automatic Debit Issueing is canceled.|
        |REVERTING|Automatic Debit Issueing chargeback request is created.|
        |REVERTED|Automatic Debit Issueing chargeback request is reverted.|
        |ERROR|Automatic Debit Issueing has an error.|

        You can sign this webhook in the logged area of this portal or via
            [API](https://developer.btgpactual.com/doccm#tag/Webhook), with the entity
            ```AtdBilling```.

        You can also configure the security validation method for the requests, which can be either ```mTLS Certificate``` or ```Hash Signature (HMAC SHA256 Hash)```.
        For more information on the security validation methods, check the ```AUTHORIZATIONS``` section below.
        For more information on webhooks, see the [Webhook
            Documentation](https://developer.btgpactual.com/doccm#tag/Webhook).
      operationId: automatic-debit-issueing-webhook
      tags:
        - Automatic Debit Issueing
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutomaticDebitIssueing'
            examples:
              ENQUEUED:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdBilling,
                  status: ENQUEUED,
                  body:
                    amount: 333,
                    product:
                      code: LIFE_10
                    discounts:
                      type: Iof
                      aliquot: 10
                      discountAmount: 10
                    billingDate: '2023-01-20'
                    movementId: 4866619
                    client:
                      account:
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              SCHEDULED:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdBilling,
                  status: SCHEDULED,
                  body:
                    amount: 333,
                    product:
                      code: LIFE_10
                    discounts:
                      type: Iof
                      aliquot: 10
                      discountAmount: 10
                    billingDate: '2023-01-20'
                    movementId: 4866619
                    client:
                      account:
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              PROCESSING:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdBilling,
                  status: PROCESSING,
                  body:
                    amount: 333,
                    product:
                      code: LIFE_10
                    discounts:
                      type: Iof
                      aliquot: 10
                      discountAmount: 10
                    billingDate: '2023-01-20'
                    movementId: 4866619
                    client:
                      account:
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              CONFIRMED:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdBilling,
                  status: CONFIRMED,
                  body:
                    amount: 333,
                    product:
                      code: LIFE_10
                    discounts:
                      type: Iof
                      aliquot: 10
                      discountAmount: 10
                    billingDate: '2023-01-20'
                    movementId: 4866619
                    client:
                      account:
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              CANCELED:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdBilling,
                  status: CANCELED,
                  body:
                    amount: 333,
                    product:
                      code: LIFE_10
                    discounts:
                      type: Iof
                      aliquot: 10
                      discountAmount: 10
                    billingDate: '2023-01-20'
                    movementId: 4866619
                    client:
                      account:
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              REVERTING:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdBilling,
                  status: REVERTING,
                  body:
                    amount: 333,
                    product:
                      code: LIFE_10
                    discounts:
                      type: Iof
                      aliquot: 10
                      discountAmount: 10
                    billingDate: '2023-01-20'
                    movementId: 4866619
                    client:
                      account:
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              REVERTED:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdBilling,
                  status: REVERTED,
                  body:
                    amount: 333,
                    product:
                      code: LIFE_10
                    discounts:
                      type: Iof
                      aliquot: 10
                      discountAmount: 10
                    billingDate: '2023-01-20'
                    movementId: 4866619
                    client:
                      account:
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
              ERROR:
                value:
                  pactualId: b9d418f4-8284-4c1e-841e-9d33c621d3f4,
                  clientRequestId: 72fbd1c5-6ee3-445c-a9ab-63934e1c428c,
                  createTimestamp: 2023-01-18T18:09:28.6797165+00:00,
                  lastUpdateTimestamp: 2023-01-18T18:09:42.2555506+00:00,
                  entity: AtdBilling,
                  status: ERROR,
                  body:
                    amount: 333,
                    product:
                      code: LIFE_10
                    discounts:
                      type: Iof
                      aliquot: 10
                      discountAmount: 10
                    billingDate: '2023-01-20'
                    movementId: 4866619
                    client:
                      account:
                        agency: 1,
                        bank: 208,
                        number: 17521
                      documentType: F,
                      documentNumber: '07693440704'
                    contract:
                      identification: 038eb8c7-eee8-4734-b18b-743216bfee2d
                  tags: string
      responses:
        2XX:
          description: Return any 2XX status to indicate that the data was received successfully
      security:
        - mTLS: []
        - HashSignature: []
